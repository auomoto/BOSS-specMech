
specMech.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  000036f2  000037a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003580  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000172  00007580  00003580  00003634  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000528  00802802  00802802  000037a8  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  000037a8  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003804  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000300  00000000  00000000  00003848  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005f78  00000000  00000000  00003b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000275e  00000000  00000000  00009ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000020b8  00000000  00000000  0000c21e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000a04  00000000  00000000  0000e2d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001be9  00000000  00000000  0000ecdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000035d1  00000000  00000000  000108c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000250  00000000  00000000  00013e96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 06 01 	jmp	0x20c	; 0x20c <__ctors_end>
       4:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
       8:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
       c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      10:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      14:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      18:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      1c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      20:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      24:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      28:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      2c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      30:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      34:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      38:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      3c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      40:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      44:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__vector_17>
      48:	0c 94 82 06 	jmp	0xd04	; 0xd04 <__vector_18>
      4c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      50:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      54:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      58:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      5c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      60:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      64:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      68:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <__vector_26>
      6c:	0c 94 e7 06 	jmp	0xdce	; 0xdce <__vector_27>
      70:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      74:	0c 94 59 0c 	jmp	0x18b2	; 0x18b2 <__vector_29>
      78:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      7c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      80:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      84:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      88:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      8c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      90:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      94:	0c 94 15 07 	jmp	0xe2a	; 0xe2a <__vector_37>
      98:	0c 94 4a 07 	jmp	0xe94	; 0xe94 <__vector_38>
      9c:	0c 94 23 01 	jmp	0x246	; 0x246 <__bad_interrupt>
      a0:	07 0e       	add	r0, r23
      a2:	10 11       	cpse	r17, r0
      a4:	10 11       	cpse	r17, r0
      a6:	10 11       	cpse	r17, r0
      a8:	10 11       	cpse	r17, r0
      aa:	10 11       	cpse	r17, r0
      ac:	10 11       	cpse	r17, r0
      ae:	10 11       	cpse	r17, r0
      b0:	10 11       	cpse	r17, r0
      b2:	10 11       	cpse	r17, r0
      b4:	10 11       	cpse	r17, r0
      b6:	10 11       	cpse	r17, r0
      b8:	10 11       	cpse	r17, r0
      ba:	10 11       	cpse	r17, r0
      bc:	10 11       	cpse	r17, r0
      be:	10 11       	cpse	r17, r0
      c0:	10 11       	cpse	r17, r0
      c2:	10 11       	cpse	r17, r0
      c4:	10 11       	cpse	r17, r0
      c6:	10 11       	cpse	r17, r0
      c8:	d1 10       	cpse	r13, r1
      ca:	10 11       	cpse	r17, r0
      cc:	10 11       	cpse	r17, r0
      ce:	10 11       	cpse	r17, r0
      d0:	10 11       	cpse	r17, r0
      d2:	10 11       	cpse	r17, r0
      d4:	10 11       	cpse	r17, r0
      d6:	10 11       	cpse	r17, r0
      d8:	10 11       	cpse	r17, r0
      da:	10 11       	cpse	r17, r0
      dc:	10 11       	cpse	r17, r0
      de:	10 11       	cpse	r17, r0
      e0:	10 11       	cpse	r17, r0
      e2:	10 11       	cpse	r17, r0
      e4:	10 11       	cpse	r17, r0
      e6:	3d 0e       	add	r3, r29
      e8:	10 11       	cpse	r17, r0
      ea:	10 11       	cpse	r17, r0
      ec:	10 11       	cpse	r17, r0
      ee:	10 11       	cpse	r17, r0
      f0:	10 11       	cpse	r17, r0
      f2:	10 11       	cpse	r17, r0
      f4:	10 11       	cpse	r17, r0
      f6:	10 11       	cpse	r17, r0
      f8:	10 11       	cpse	r17, r0
      fa:	4f 0f       	add	r20, r31
      fc:	d9 0f       	add	r29, r25
      fe:	10 11       	cpse	r17, r0
     100:	10 11       	cpse	r17, r0
     102:	10 11       	cpse	r17, r0
     104:	39 10       	cpse	r3, r9
     106:	10 11       	cpse	r17, r0
     108:	85 10       	cpse	r8, r5

0000010a <__trampolines_end>:
     10a:	6e 61       	ori	r22, 0x1E	; 30
     10c:	6e 00       	.word	0x006e	; ????

0000010e <__c.2332>:
     10e:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     11e:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     12e:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     13e:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     14e:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     15e:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     16e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     17e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     18e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     19e:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1ae:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1be:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ce:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1de:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ee:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1fe:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000020c <__ctors_end>:
     20c:	11 24       	eor	r1, r1
     20e:	1f be       	out	0x3f, r1	; 63
     210:	cf ef       	ldi	r28, 0xFF	; 255
     212:	cd bf       	out	0x3d, r28	; 61
     214:	df e3       	ldi	r29, 0x3F	; 63
     216:	de bf       	out	0x3e, r29	; 62

00000218 <__do_copy_data>:
     218:	18 e2       	ldi	r17, 0x28	; 40
     21a:	a0 e0       	ldi	r26, 0x00	; 0
     21c:	b8 e2       	ldi	r27, 0x28	; 40
     21e:	e2 ef       	ldi	r30, 0xF2	; 242
     220:	f6 e3       	ldi	r31, 0x36	; 54
     222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x10>
     224:	05 90       	lpm	r0, Z+
     226:	0d 92       	st	X+, r0
     228:	a2 30       	cpi	r26, 0x02	; 2
     22a:	b1 07       	cpc	r27, r17
     22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0xc>

0000022e <__do_clear_bss>:
     22e:	2d e2       	ldi	r18, 0x2D	; 45
     230:	a2 e0       	ldi	r26, 0x02	; 2
     232:	b8 e2       	ldi	r27, 0x28	; 40
     234:	01 c0       	rjmp	.+2      	; 0x238 <.do_clear_bss_start>

00000236 <.do_clear_bss_loop>:
     236:	1d 92       	st	X+, r1

00000238 <.do_clear_bss_start>:
     238:	aa 32       	cpi	r26, 0x2A	; 42
     23a:	b2 07       	cpc	r27, r18
     23c:	e1 f7       	brne	.-8      	; 0x236 <.do_clear_bss_loop>
     23e:	0e 94 9d 12 	call	0x253a	; 0x253a <main>
     242:	0c 94 be 1a 	jmp	0x357c	; 0x357c <_exit>

00000246 <__bad_interrupt>:
     246:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000024a <init_PORTS>:
{
	
	uint8_t twiaddr;
	
	twiaddr = (displaynumber == 0) ? OLEDADDR0 : OLEDADDR1;
	write_OLED(twiaddr, OLEDCMD, 0x08);	// Display off
     24a:	e0 e0       	ldi	r30, 0x00	; 0
     24c:	f4 e0       	ldi	r31, 0x04	; 4
     24e:	88 e0       	ldi	r24, 0x08	; 8
     250:	80 8b       	std	Z+16, r24	; 0x10
     252:	81 8b       	std	Z+17, r24	; 0x11
     254:	82 8b       	std	Z+18, r24	; 0x12
     256:	83 8b       	std	Z+19, r24	; 0x13
     258:	84 8b       	std	Z+20, r24	; 0x14
     25a:	85 8b       	std	Z+21, r24	; 0x15
     25c:	86 8b       	std	Z+22, r24	; 0x16
     25e:	87 8b       	std	Z+23, r24	; 0x17
     260:	e0 e2       	ldi	r30, 0x20	; 32
     262:	f4 e0       	ldi	r31, 0x04	; 4
     264:	80 8b       	std	Z+16, r24	; 0x10
     266:	81 8b       	std	Z+17, r24	; 0x11
     268:	82 8b       	std	Z+18, r24	; 0x12
     26a:	83 8b       	std	Z+19, r24	; 0x13
     26c:	84 8b       	std	Z+20, r24	; 0x14
     26e:	85 8b       	std	Z+21, r24	; 0x15
     270:	e0 e4       	ldi	r30, 0x40	; 64
     272:	f4 e0       	ldi	r31, 0x04	; 4
     274:	80 8b       	std	Z+16, r24	; 0x10
     276:	81 8b       	std	Z+17, r24	; 0x11
     278:	82 8b       	std	Z+18, r24	; 0x12
     27a:	83 8b       	std	Z+19, r24	; 0x13
     27c:	84 8b       	std	Z+20, r24	; 0x14
     27e:	85 8b       	std	Z+21, r24	; 0x15
     280:	86 8b       	std	Z+22, r24	; 0x16
     282:	87 8b       	std	Z+23, r24	; 0x17
     284:	e0 e6       	ldi	r30, 0x60	; 96
     286:	f4 e0       	ldi	r31, 0x04	; 4
     288:	94 e0       	ldi	r25, 0x04	; 4
     28a:	90 8b       	std	Z+16, r25	; 0x10
     28c:	91 8b       	std	Z+17, r25	; 0x11
     28e:	92 8b       	std	Z+18, r25	; 0x12
     290:	93 8b       	std	Z+19, r25	; 0x13
     292:	94 8b       	std	Z+20, r25	; 0x14
     294:	95 8b       	std	Z+21, r25	; 0x15
     296:	96 8b       	std	Z+22, r25	; 0x16
     298:	97 8b       	std	Z+23, r25	; 0x17
     29a:	e0 e8       	ldi	r30, 0x80	; 128
     29c:	f4 e0       	ldi	r31, 0x04	; 4
     29e:	80 8b       	std	Z+16, r24	; 0x10
     2a0:	81 8b       	std	Z+17, r24	; 0x11
     2a2:	82 8b       	std	Z+18, r24	; 0x12
     2a4:	83 8b       	std	Z+19, r24	; 0x13
     2a6:	e0 ea       	ldi	r30, 0xA0	; 160
     2a8:	f4 e0       	ldi	r31, 0x04	; 4
     2aa:	80 8b       	std	Z+16, r24	; 0x10
     2ac:	81 8b       	std	Z+17, r24	; 0x11
     2ae:	82 8b       	std	Z+18, r24	; 0x12
     2b0:	83 8b       	std	Z+19, r24	; 0x13
     2b2:	84 8b       	std	Z+20, r24	; 0x14
     2b4:	85 8b       	std	Z+21, r24	; 0x15
     2b6:	8b e0       	ldi	r24, 0x0B	; 11
     2b8:	86 8b       	std	Z+22, r24	; 0x16
     2ba:	08 95       	ret

000002bc <init_LED>:
     2bc:	e0 ea       	ldi	r30, 0xA0	; 160
     2be:	f4 e0       	ldi	r31, 0x04	; 4
     2c0:	80 e2       	ldi	r24, 0x20	; 32
     2c2:	85 83       	std	Z+5, r24	; 0x05
     2c4:	81 83       	std	Z+1, r24	; 0x01
     2c6:	08 95       	ret

000002c8 <init_BEEPER>:
     2c8:	e0 e2       	ldi	r30, 0x20	; 32
     2ca:	f4 e0       	ldi	r31, 0x04	; 4
     2cc:	84 e0       	ldi	r24, 0x04	; 4
     2ce:	85 83       	std	Z+5, r24	; 0x05
     2d0:	81 83       	std	Z+1, r24	; 0x01
     2d2:	86 83       	std	Z+6, r24	; 0x06
     2d4:	08 95       	ret

000002d6 <init_SPECID>:
     2d6:	e0 ea       	ldi	r30, 0xA0	; 160
     2d8:	f4 e0       	ldi	r31, 0x04	; 4
     2da:	82 89       	ldd	r24, Z+18	; 0x12
     2dc:	87 7f       	andi	r24, 0xF7	; 247
     2de:	82 8b       	std	Z+18, r24	; 0x12
     2e0:	84 e0       	ldi	r24, 0x04	; 4
     2e2:	82 83       	std	Z+2, r24	; 0x02
     2e4:	08 95       	ret

000002e6 <get_specID>:
     2e6:	80 91 a8 04 	lds	r24, 0x04A8	; 0x8004a8 <__TEXT_REGION_LENGTH__+0x7f44a8>
     2ea:	82 ff       	sbrs	r24, 2
     2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <get_specID+0xc>
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	01 c0       	rjmp	.+2      	; 0x2f4 <get_specID+0xe>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 91 a8 04 	lds	r25, 0x04A8	; 0x8004a8 <__TEXT_REGION_LENGTH__+0x7f44a8>
     2f8:	92 ff       	sbrs	r25, 2
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	08 95       	ret

000002fe <init_TWI>:
     2fe:	e0 ea       	ldi	r30, 0xA0	; 160
     300:	f8 e0       	ldi	r31, 0x08	; 8
     302:	8b e0       	ldi	r24, 0x0B	; 11
     304:	86 83       	std	Z+6, r24	; 0x06
     306:	83 81       	ldd	r24, Z+3	; 0x03
     308:	81 60       	ori	r24, 0x01	; 1
     30a:	83 83       	std	Z+3, r24	; 0x03
     30c:	85 81       	ldd	r24, Z+5	; 0x05
     30e:	81 60       	ori	r24, 0x01	; 1
     310:	85 83       	std	Z+5, r24	; 0x05
     312:	08 95       	ret

00000314 <read_TWI>:
     314:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     318:	88 23       	and	r24, r24
     31a:	34 f0       	brlt	.+12     	; 0x328 <read_TWI+0x14>
     31c:	e0 ea       	ldi	r30, 0xA0	; 160
     31e:	f8 e0       	ldi	r31, 0x08	; 8
     320:	00 00       	nop
     322:	85 81       	ldd	r24, Z+5	; 0x05
     324:	88 23       	and	r24, r24
     326:	e4 f7       	brge	.-8      	; 0x320 <read_TWI+0xc>
     328:	e0 ea       	ldi	r30, 0xA0	; 160
     32a:	f8 e0       	ldi	r31, 0x08	; 8
     32c:	84 81       	ldd	r24, Z+4	; 0x04
     32e:	8b 7f       	andi	r24, 0xFB	; 251
     330:	84 83       	std	Z+4, r24	; 0x04
     332:	80 85       	ldd	r24, Z+8	; 0x08
     334:	94 81       	ldd	r25, Z+4	; 0x04
     336:	92 60       	ori	r25, 0x02	; 2
     338:	94 83       	std	Z+4, r25	; 0x04
     33a:	08 95       	ret

0000033c <readlast_TWI>:
     33c:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     340:	88 23       	and	r24, r24
     342:	34 f0       	brlt	.+12     	; 0x350 <readlast_TWI+0x14>
     344:	e0 ea       	ldi	r30, 0xA0	; 160
     346:	f8 e0       	ldi	r31, 0x08	; 8
     348:	00 00       	nop
     34a:	85 81       	ldd	r24, Z+5	; 0x05
     34c:	88 23       	and	r24, r24
     34e:	e4 f7       	brge	.-8      	; 0x348 <readlast_TWI+0xc>
     350:	e0 ea       	ldi	r30, 0xA0	; 160
     352:	f8 e0       	ldi	r31, 0x08	; 8
     354:	84 81       	ldd	r24, Z+4	; 0x04
     356:	84 60       	ori	r24, 0x04	; 4
     358:	84 83       	std	Z+4, r24	; 0x04
     35a:	80 85       	ldd	r24, Z+8	; 0x08
     35c:	08 95       	ret

0000035e <start_TWI>:
     35e:	61 30       	cpi	r22, 0x01	; 1
     360:	11 f4       	brne	.+4      	; 0x366 <start_TWI+0x8>
     362:	81 60       	ori	r24, 0x01	; 1
     364:	01 c0       	rjmp	.+2      	; 0x368 <start_TWI+0xa>
     366:	8e 7f       	andi	r24, 0xFE	; 254
     368:	e0 ea       	ldi	r30, 0xA0	; 160
     36a:	f8 e0       	ldi	r31, 0x08	; 8
     36c:	87 83       	std	Z+7, r24	; 0x07
     36e:	85 81       	ldd	r24, Z+5	; 0x05
     370:	80 7c       	andi	r24, 0xC0	; 192
     372:	21 f4       	brne	.+8      	; 0x37c <start_TWI+0x1e>
     374:	00 00       	nop
     376:	85 81       	ldd	r24, Z+5	; 0x05
     378:	80 7c       	andi	r24, 0xC0	; 192
     37a:	e1 f3       	breq	.-8      	; 0x374 <start_TWI+0x16>
     37c:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     380:	82 fd       	sbrc	r24, 2
     382:	0b c0       	rjmp	.+22     	; 0x39a <start_TWI+0x3c>
     384:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     388:	83 fd       	sbrc	r24, 3
     38a:	09 c0       	rjmp	.+18     	; 0x39e <start_TWI+0x40>
     38c:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     390:	89 2f       	mov	r24, r25
     392:	80 71       	andi	r24, 0x10	; 16
     394:	94 fd       	sbrc	r25, 4
     396:	05 c0       	rjmp	.+10     	; 0x3a2 <start_TWI+0x44>
     398:	08 95       	ret
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	08 95       	ret
     39e:	82 e0       	ldi	r24, 0x02	; 2
     3a0:	08 95       	ret
     3a2:	84 e0       	ldi	r24, 0x04	; 4
     3a4:	08 95       	ret

000003a6 <write_TWI>:
     3a6:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     3aa:	96 fd       	sbrc	r25, 6
     3ac:	06 c0       	rjmp	.+12     	; 0x3ba <write_TWI+0x14>
     3ae:	e0 ea       	ldi	r30, 0xA0	; 160
     3b0:	f8 e0       	ldi	r31, 0x08	; 8
     3b2:	00 00       	nop
     3b4:	95 81       	ldd	r25, Z+5	; 0x05
     3b6:	96 ff       	sbrs	r25, 6
     3b8:	fc cf       	rjmp	.-8      	; 0x3b2 <write_TWI+0xc>
     3ba:	e0 ea       	ldi	r30, 0xA0	; 160
     3bc:	f8 e0       	ldi	r31, 0x08	; 8
     3be:	80 87       	std	Z+8, r24	; 0x08
     3c0:	85 81       	ldd	r24, Z+5	; 0x05
     3c2:	86 fd       	sbrc	r24, 6
     3c4:	04 c0       	rjmp	.+8      	; 0x3ce <write_TWI+0x28>
     3c6:	00 00       	nop
     3c8:	85 81       	ldd	r24, Z+5	; 0x05
     3ca:	86 ff       	sbrs	r24, 6
     3cc:	fc cf       	rjmp	.-8      	; 0x3c6 <write_TWI+0x20>
     3ce:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     3d2:	89 2f       	mov	r24, r25
     3d4:	80 71       	andi	r24, 0x10	; 16
     3d6:	94 fd       	sbrc	r25, 4
     3d8:	83 e0       	ldi	r24, 0x03	; 3
     3da:	08 95       	ret

000003dc <read_MCP23008>:
     3dc:	0f 93       	push	r16
     3de:	1f 93       	push	r17
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	c8 2f       	mov	r28, r24
     3e6:	d6 2f       	mov	r29, r22
     3e8:	8a 01       	movw	r16, r20
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     3f0:	88 23       	and	r24, r24
     3f2:	31 f0       	breq	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
     3f4:	80 91 9a 2b 	lds	r24, 0x2B9A	; 0x802b9a <specMechErrors>
     3f8:	81 60       	ori	r24, 0x01	; 1
     3fa:	80 93 9a 2b 	sts	0x2B9A, r24	; 0x802b9a <specMechErrors>
     3fe:	1f c0       	rjmp	.+62     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     400:	8d 2f       	mov	r24, r29
     402:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     406:	88 23       	and	r24, r24
     408:	31 f0       	breq	.+12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     40a:	80 91 9a 2b 	lds	r24, 0x2B9A	; 0x802b9a <specMechErrors>
     40e:	81 60       	ori	r24, 0x01	; 1
     410:	80 93 9a 2b 	sts	0x2B9A, r24	; 0x802b9a <specMechErrors>
     414:	14 c0       	rjmp	.+40     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     416:	61 e0       	ldi	r22, 0x01	; 1
     418:	8c 2f       	mov	r24, r28
     41a:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     41e:	88 23       	and	r24, r24
     420:	31 f0       	breq	.+12     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     422:	80 91 9a 2b 	lds	r24, 0x2B9A	; 0x802b9a <specMechErrors>
     426:	81 60       	ori	r24, 0x01	; 1
     428:	80 93 9a 2b 	sts	0x2B9A, r24	; 0x802b9a <specMechErrors>
     42c:	08 c0       	rjmp	.+16     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     42e:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
     432:	f8 01       	movw	r30, r16
     434:	80 83       	st	Z, r24
     436:	87 e0       	ldi	r24, 0x07	; 7
     438:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	08 95       	ret

00000448 <write_MCP23008>:
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	c6 2f       	mov	r28, r22
     44e:	d4 2f       	mov	r29, r20
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     456:	88 23       	and	r24, r24
     458:	21 f0       	breq	.+8      	; 0x462 <write_MCP23008+0x1a>
     45a:	97 e0       	ldi	r25, 0x07	; 7
     45c:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     460:	16 c0       	rjmp	.+44     	; 0x48e <write_MCP23008+0x46>
     462:	8c 2f       	mov	r24, r28
     464:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     468:	88 23       	and	r24, r24
     46a:	21 f0       	breq	.+8      	; 0x474 <write_MCP23008+0x2c>
     46c:	97 e0       	ldi	r25, 0x07	; 7
     46e:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     472:	0d c0       	rjmp	.+26     	; 0x48e <write_MCP23008+0x46>
     474:	8d 2f       	mov	r24, r29
     476:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     47a:	88 23       	and	r24, r24
     47c:	21 f0       	breq	.+8      	; 0x486 <write_MCP23008+0x3e>
     47e:	97 e0       	ldi	r25, 0x07	; 7
     480:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     484:	04 c0       	rjmp	.+8      	; 0x48e <write_MCP23008+0x46>
     486:	87 e0       	ldi	r24, 0x07	; 7
     488:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	08 95       	ret

00000494 <read_pneusensors>:
     494:	af 92       	push	r10
     496:	bf 92       	push	r11
     498:	cf 92       	push	r12
     49a:	df 92       	push	r13
     49c:	ef 92       	push	r14
     49e:	ff 92       	push	r15
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	1f 92       	push	r1
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
     4ae:	5c 01       	movw	r10, r24
     4b0:	7b 01       	movw	r14, r22
     4b2:	6a 01       	movw	r12, r20
     4b4:	89 01       	movw	r16, r18
     4b6:	ae 01       	movw	r20, r28
     4b8:	4f 5f       	subi	r20, 0xFF	; 255
     4ba:	5f 4f       	sbci	r21, 0xFF	; 255
     4bc:	69 e0       	ldi	r22, 0x09	; 9
     4be:	82 e4       	ldi	r24, 0x42	; 66
     4c0:	0e 94 ee 01 	call	0x3dc	; 0x3dc <read_MCP23008>
     4c4:	99 81       	ldd	r25, Y+1	; 0x01
     4c6:	89 2f       	mov	r24, r25
     4c8:	82 95       	swap	r24
     4ca:	86 95       	lsr	r24
     4cc:	86 95       	lsr	r24
     4ce:	83 70       	andi	r24, 0x03	; 3
     4d0:	81 30       	cpi	r24, 0x01	; 1
     4d2:	21 f4       	brne	.+8      	; 0x4dc <read_pneusensors+0x48>
     4d4:	83 e6       	ldi	r24, 0x63	; 99
     4d6:	f5 01       	movw	r30, r10
     4d8:	80 83       	st	Z, r24
     4da:	0f c0       	rjmp	.+30     	; 0x4fa <read_pneusensors+0x66>
     4dc:	82 30       	cpi	r24, 0x02	; 2
     4de:	21 f4       	brne	.+8      	; 0x4e8 <read_pneusensors+0x54>
     4e0:	8f e6       	ldi	r24, 0x6F	; 111
     4e2:	f5 01       	movw	r30, r10
     4e4:	80 83       	st	Z, r24
     4e6:	09 c0       	rjmp	.+18     	; 0x4fa <read_pneusensors+0x66>
     4e8:	83 30       	cpi	r24, 0x03	; 3
     4ea:	21 f4       	brne	.+8      	; 0x4f4 <read_pneusensors+0x60>
     4ec:	84 e7       	ldi	r24, 0x74	; 116
     4ee:	f5 01       	movw	r30, r10
     4f0:	80 83       	st	Z, r24
     4f2:	03 c0       	rjmp	.+6      	; 0x4fa <read_pneusensors+0x66>
     4f4:	88 e7       	ldi	r24, 0x78	; 120
     4f6:	f5 01       	movw	r30, r10
     4f8:	80 83       	st	Z, r24
     4fa:	89 2f       	mov	r24, r25
     4fc:	86 95       	lsr	r24
     4fe:	86 95       	lsr	r24
     500:	83 70       	andi	r24, 0x03	; 3
     502:	81 30       	cpi	r24, 0x01	; 1
     504:	21 f4       	brne	.+8      	; 0x50e <read_pneusensors+0x7a>
     506:	83 e6       	ldi	r24, 0x63	; 99
     508:	f6 01       	movw	r30, r12
     50a:	80 83       	st	Z, r24
     50c:	0f c0       	rjmp	.+30     	; 0x52c <read_pneusensors+0x98>
     50e:	82 30       	cpi	r24, 0x02	; 2
     510:	21 f4       	brne	.+8      	; 0x51a <read_pneusensors+0x86>
     512:	8f e6       	ldi	r24, 0x6F	; 111
     514:	f6 01       	movw	r30, r12
     516:	80 83       	st	Z, r24
     518:	09 c0       	rjmp	.+18     	; 0x52c <read_pneusensors+0x98>
     51a:	83 30       	cpi	r24, 0x03	; 3
     51c:	21 f4       	brne	.+8      	; 0x526 <read_pneusensors+0x92>
     51e:	84 e7       	ldi	r24, 0x74	; 116
     520:	f6 01       	movw	r30, r12
     522:	80 83       	st	Z, r24
     524:	03 c0       	rjmp	.+6      	; 0x52c <read_pneusensors+0x98>
     526:	88 e7       	ldi	r24, 0x78	; 120
     528:	f6 01       	movw	r30, r12
     52a:	80 83       	st	Z, r24
     52c:	89 2f       	mov	r24, r25
     52e:	82 95       	swap	r24
     530:	8f 70       	andi	r24, 0x0F	; 15
     532:	83 70       	andi	r24, 0x03	; 3
     534:	81 30       	cpi	r24, 0x01	; 1
     536:	21 f4       	brne	.+8      	; 0x540 <read_pneusensors+0xac>
     538:	8f e6       	ldi	r24, 0x6F	; 111
     53a:	f7 01       	movw	r30, r14
     53c:	80 83       	st	Z, r24
     53e:	0f c0       	rjmp	.+30     	; 0x55e <read_pneusensors+0xca>
     540:	82 30       	cpi	r24, 0x02	; 2
     542:	21 f4       	brne	.+8      	; 0x54c <read_pneusensors+0xb8>
     544:	83 e6       	ldi	r24, 0x63	; 99
     546:	f7 01       	movw	r30, r14
     548:	80 83       	st	Z, r24
     54a:	09 c0       	rjmp	.+18     	; 0x55e <read_pneusensors+0xca>
     54c:	83 30       	cpi	r24, 0x03	; 3
     54e:	21 f4       	brne	.+8      	; 0x558 <read_pneusensors+0xc4>
     550:	84 e7       	ldi	r24, 0x74	; 116
     552:	f7 01       	movw	r30, r14
     554:	80 83       	st	Z, r24
     556:	03 c0       	rjmp	.+6      	; 0x55e <read_pneusensors+0xca>
     558:	88 e7       	ldi	r24, 0x78	; 120
     55a:	f7 01       	movw	r30, r14
     55c:	80 83       	st	Z, r24
     55e:	91 ff       	sbrs	r25, 1
     560:	04 c0       	rjmp	.+8      	; 0x56a <read_pneusensors+0xd6>
     562:	80 e3       	ldi	r24, 0x30	; 48
     564:	f8 01       	movw	r30, r16
     566:	80 83       	st	Z, r24
     568:	03 c0       	rjmp	.+6      	; 0x570 <read_pneusensors+0xdc>
     56a:	81 e3       	ldi	r24, 0x31	; 49
     56c:	f8 01       	movw	r30, r16
     56e:	80 83       	st	Z, r24
     570:	0f 90       	pop	r0
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	ff 90       	pop	r15
     57c:	ef 90       	pop	r14
     57e:	df 90       	pop	r13
     580:	cf 90       	pop	r12
     582:	bf 90       	pop	r11
     584:	af 90       	pop	r10
     586:	08 95       	ret

00000588 <init_PNEU>:
     588:	40 e0       	ldi	r20, 0x00	; 0
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	88 e4       	ldi	r24, 0x48	; 72
     58e:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     592:	81 11       	cpse	r24, r1
     594:	05 c0       	rjmp	.+10     	; 0x5a0 <init_PNEU+0x18>
     596:	40 e0       	ldi	r20, 0x00	; 0
     598:	6a e0       	ldi	r22, 0x0A	; 10
     59a:	88 e4       	ldi	r24, 0x48	; 72
     59c:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     5a0:	08 95       	ret

000005a2 <set_valves>:
     5a2:	0f 93       	push	r16
     5a4:	1f 93       	push	r17
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	1f 92       	push	r1
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
     5b0:	08 2f       	mov	r16, r24
     5b2:	16 2f       	mov	r17, r22
     5b4:	ae 01       	movw	r20, r28
     5b6:	4f 5f       	subi	r20, 0xFF	; 255
     5b8:	5f 4f       	sbci	r21, 0xFF	; 255
     5ba:	69 e0       	ldi	r22, 0x09	; 9
     5bc:	88 e4       	ldi	r24, 0x48	; 72
     5be:	0e 94 ee 01 	call	0x3dc	; 0x3dc <read_MCP23008>
     5c2:	81 11       	cpse	r24, r1
     5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <set_valves+0x32>
     5c6:	49 81       	ldd	r20, Y+1	; 0x01
     5c8:	40 2b       	or	r20, r16
     5ca:	41 23       	and	r20, r17
     5cc:	6a e0       	ldi	r22, 0x0A	; 10
     5ce:	88 e4       	ldi	r24, 0x48	; 72
     5d0:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     5d4:	0f 90       	pop	r0
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	08 95       	ret

000005e0 <close_pneu>:
     5e0:	8c 36       	cpi	r24, 0x6C	; 108
     5e2:	99 f0       	breq	.+38     	; 0x60a <close_pneu+0x2a>
     5e4:	18 f4       	brcc	.+6      	; 0x5ec <close_pneu+0xc>
     5e6:	82 36       	cpi	r24, 0x62	; 98
     5e8:	31 f0       	breq	.+12     	; 0x5f6 <close_pneu+0x16>
     5ea:	21 c0       	rjmp	.+66     	; 0x62e <close_pneu+0x4e>
     5ec:	82 37       	cpi	r24, 0x72	; 114
     5ee:	99 f0       	breq	.+38     	; 0x616 <close_pneu+0x36>
     5f0:	83 37       	cpi	r24, 0x73	; 115
     5f2:	b9 f0       	breq	.+46     	; 0x622 <close_pneu+0x42>
     5f4:	1c c0       	rjmp	.+56     	; 0x62e <close_pneu+0x4e>
     5f6:	6a ee       	ldi	r22, 0xEA	; 234
     5f8:	84 e4       	ldi	r24, 0x44	; 68
     5fa:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     5fe:	66 ee       	ldi	r22, 0xE6	; 230
     600:	88 e8       	ldi	r24, 0x88	; 136
     602:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	08 95       	ret
     60a:	6a ee       	ldi	r22, 0xEA	; 234
     60c:	84 e4       	ldi	r24, 0x44	; 68
     60e:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	08 95       	ret
     616:	66 ee       	ldi	r22, 0xE6	; 230
     618:	88 e8       	ldi	r24, 0x88	; 136
     61a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	08 95       	ret
     622:	6c ee       	ldi	r22, 0xEC	; 236
     624:	82 e2       	ldi	r24, 0x22	; 34
     626:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	08 95       	ret
     62e:	82 e0       	ldi	r24, 0x02	; 2
     630:	08 95       	ret

00000632 <open_pneu>:
     632:	8c 36       	cpi	r24, 0x6C	; 108
     634:	99 f0       	breq	.+38     	; 0x65c <open_pneu+0x2a>
     636:	18 f4       	brcc	.+6      	; 0x63e <open_pneu+0xc>
     638:	82 36       	cpi	r24, 0x62	; 98
     63a:	31 f0       	breq	.+12     	; 0x648 <open_pneu+0x16>
     63c:	21 c0       	rjmp	.+66     	; 0x680 <open_pneu+0x4e>
     63e:	82 37       	cpi	r24, 0x72	; 114
     640:	99 f0       	breq	.+38     	; 0x668 <open_pneu+0x36>
     642:	83 37       	cpi	r24, 0x73	; 115
     644:	b9 f0       	breq	.+46     	; 0x674 <open_pneu+0x42>
     646:	1c c0       	rjmp	.+56     	; 0x680 <open_pneu+0x4e>
     648:	6e ea       	ldi	r22, 0xAE	; 174
     64a:	84 e4       	ldi	r24, 0x44	; 68
     64c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     650:	6e e6       	ldi	r22, 0x6E	; 110
     652:	88 e8       	ldi	r24, 0x88	; 136
     654:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	08 95       	ret
     65c:	6e ea       	ldi	r22, 0xAE	; 174
     65e:	84 e4       	ldi	r24, 0x44	; 68
     660:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	08 95       	ret
     668:	6e e6       	ldi	r22, 0x6E	; 110
     66a:	88 e8       	ldi	r24, 0x88	; 136
     66c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	08 95       	ret
     674:	6e ec       	ldi	r22, 0xCE	; 206
     676:	82 e2       	ldi	r24, 0x22	; 34
     678:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <set_valves>
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	08 95       	ret
     680:	82 e0       	ldi	r24, 0x02	; 2
     682:	08 95       	ret

00000684 <read_ADS1115>:
     684:	cf 92       	push	r12
     686:	df 92       	push	r13
     688:	ef 92       	push	r14
     68a:	ff 92       	push	r15
     68c:	0f 93       	push	r16
     68e:	1f 93       	push	r17
     690:	cf 93       	push	r28
     692:	df 93       	push	r29
     694:	c8 2f       	mov	r28, r24
     696:	16 2f       	mov	r17, r22
     698:	d4 2f       	mov	r29, r20
     69a:	02 2f       	mov	r16, r18
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     6a2:	88 23       	and	r24, r24
     6a4:	71 f0       	breq	.+28     	; 0x6c2 <read_ADS1115+0x3e>
     6a6:	97 e0       	ldi	r25, 0x07	; 7
     6a8:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     6ac:	68 2f       	mov	r22, r24
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     6b8:	56 2f       	mov	r21, r22
     6ba:	47 2f       	mov	r20, r23
     6bc:	38 2f       	mov	r19, r24
     6be:	29 2f       	mov	r18, r25
     6c0:	cc c0       	rjmp	.+408    	; 0x85a <read_ADS1115+0x1d6>
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     6c8:	88 23       	and	r24, r24
     6ca:	71 f0       	breq	.+28     	; 0x6e8 <read_ADS1115+0x64>
     6cc:	97 e0       	ldi	r25, 0x07	; 7
     6ce:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     6d2:	68 2f       	mov	r22, r24
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     6de:	56 2f       	mov	r21, r22
     6e0:	47 2f       	mov	r20, r23
     6e2:	38 2f       	mov	r19, r24
     6e4:	29 2f       	mov	r18, r25
     6e6:	b9 c0       	rjmp	.+370    	; 0x85a <read_ADS1115+0x1d6>
     6e8:	8d 2f       	mov	r24, r29
     6ea:	81 68       	ori	r24, 0x81	; 129
     6ec:	81 2b       	or	r24, r17
     6ee:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     6f2:	88 23       	and	r24, r24
     6f4:	71 f0       	breq	.+28     	; 0x712 <read_ADS1115+0x8e>
     6f6:	97 e0       	ldi	r25, 0x07	; 7
     6f8:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     6fc:	68 2f       	mov	r22, r24
     6fe:	70 e0       	ldi	r23, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     708:	56 2f       	mov	r21, r22
     70a:	47 2f       	mov	r20, r23
     70c:	38 2f       	mov	r19, r24
     70e:	29 2f       	mov	r18, r25
     710:	a4 c0       	rjmp	.+328    	; 0x85a <read_ADS1115+0x1d6>
     712:	80 2f       	mov	r24, r16
     714:	83 60       	ori	r24, 0x03	; 3
     716:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     71a:	88 23       	and	r24, r24
     71c:	71 f0       	breq	.+28     	; 0x73a <read_ADS1115+0xb6>
     71e:	97 e0       	ldi	r25, 0x07	; 7
     720:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     724:	68 2f       	mov	r22, r24
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     730:	56 2f       	mov	r21, r22
     732:	47 2f       	mov	r20, r23
     734:	38 2f       	mov	r19, r24
     736:	29 2f       	mov	r18, r25
     738:	90 c0       	rjmp	.+288    	; 0x85a <read_ADS1115+0x1d6>
     73a:	87 e0       	ldi	r24, 0x07	; 7
     73c:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     740:	8c e1       	ldi	r24, 0x1C	; 28
     742:	8a 95       	dec	r24
     744:	f1 f7       	brne	.-4      	; 0x742 <read_ADS1115+0xbe>
     746:	61 e0       	ldi	r22, 0x01	; 1
     748:	8c 2f       	mov	r24, r28
     74a:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     74e:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
     752:	88 23       	and	r24, r24
     754:	c4 f7       	brge	.-16     	; 0x746 <read_ADS1115+0xc2>
     756:	0f 2e       	mov	r0, r31
     758:	f0 ea       	ldi	r31, 0xA0	; 160
     75a:	ef 2e       	mov	r14, r31
     75c:	f8 e0       	ldi	r31, 0x08	; 8
     75e:	ff 2e       	mov	r15, r31
     760:	f0 2d       	mov	r31, r0
     762:	d7 e0       	ldi	r29, 0x07	; 7
     764:	f7 01       	movw	r30, r14
     766:	d4 83       	std	Z+4, r29	; 0x04
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	8c 2f       	mov	r24, r28
     76c:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     776:	61 e0       	ldi	r22, 0x01	; 1
     778:	8c 2f       	mov	r24, r28
     77a:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     77e:	0e 94 8a 01 	call	0x314	; 0x314 <read_TWI>
     782:	c8 2f       	mov	r28, r24
     784:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
     788:	f7 01       	movw	r30, r14
     78a:	d4 83       	std	Z+4, r29	; 0x04
     78c:	6c 2f       	mov	r22, r28
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	76 2f       	mov	r23, r22
     792:	66 27       	eor	r22, r22
     794:	68 2b       	or	r22, r24
     796:	14 30       	cpi	r17, 0x04	; 4
     798:	19 f1       	breq	.+70     	; 0x7e0 <read_ADS1115+0x15c>
     79a:	28 f4       	brcc	.+10     	; 0x7a6 <read_ADS1115+0x122>
     79c:	11 23       	and	r17, r17
     79e:	b1 f1       	breq	.+108    	; 0x80c <read_ADS1115+0x188>
     7a0:	12 30       	cpi	r17, 0x02	; 2
     7a2:	49 f1       	breq	.+82     	; 0x7f6 <read_ADS1115+0x172>
     7a4:	3e c0       	rjmp	.+124    	; 0x822 <read_ADS1115+0x19e>
     7a6:	18 30       	cpi	r17, 0x08	; 8
     7a8:	29 f0       	breq	.+10     	; 0x7b4 <read_ADS1115+0x130>
     7aa:	1a 30       	cpi	r17, 0x0A	; 10
     7ac:	f1 f1       	breq	.+124    	; 0x82a <read_ADS1115+0x1a6>
     7ae:	16 30       	cpi	r17, 0x06	; 6
     7b0:	c1 f5       	brne	.+112    	; 0x822 <read_ADS1115+0x19e>
     7b2:	0b c0       	rjmp	.+22     	; 0x7ca <read_ADS1115+0x146>
     7b4:	0f 2e       	mov	r0, r31
     7b6:	f1 e7       	ldi	r31, 0x71	; 113
     7b8:	cf 2e       	mov	r12, r31
     7ba:	f3 e1       	ldi	r31, 0x13	; 19
     7bc:	df 2e       	mov	r13, r31
     7be:	f3 e8       	ldi	r31, 0x83	; 131
     7c0:	ef 2e       	mov	r14, r31
     7c2:	f7 e3       	ldi	r31, 0x37	; 55
     7c4:	ff 2e       	mov	r15, r31
     7c6:	f0 2d       	mov	r31, r0
     7c8:	3a c0       	rjmp	.+116    	; 0x83e <read_ADS1115+0x1ba>
     7ca:	0f 2e       	mov	r0, r31
     7cc:	f4 e7       	ldi	r31, 0x74	; 116
     7ce:	cf 2e       	mov	r12, r31
     7d0:	f3 e1       	ldi	r31, 0x13	; 19
     7d2:	df 2e       	mov	r13, r31
     7d4:	f3 e0       	ldi	r31, 0x03	; 3
     7d6:	ef 2e       	mov	r14, r31
     7d8:	f8 e3       	ldi	r31, 0x38	; 56
     7da:	ff 2e       	mov	r15, r31
     7dc:	f0 2d       	mov	r31, r0
     7de:	2f c0       	rjmp	.+94     	; 0x83e <read_ADS1115+0x1ba>
     7e0:	0f 2e       	mov	r0, r31
     7e2:	f2 e1       	ldi	r31, 0x12	; 18
     7e4:	cf 2e       	mov	r12, r31
     7e6:	f3 e1       	ldi	r31, 0x13	; 19
     7e8:	df 2e       	mov	r13, r31
     7ea:	f3 e8       	ldi	r31, 0x83	; 131
     7ec:	ef 2e       	mov	r14, r31
     7ee:	f8 e3       	ldi	r31, 0x38	; 56
     7f0:	ff 2e       	mov	r15, r31
     7f2:	f0 2d       	mov	r31, r0
     7f4:	24 c0       	rjmp	.+72     	; 0x83e <read_ADS1115+0x1ba>
     7f6:	0f 2e       	mov	r0, r31
     7f8:	f4 e7       	ldi	r31, 0x74	; 116
     7fa:	cf 2e       	mov	r12, r31
     7fc:	f3 e1       	ldi	r31, 0x13	; 19
     7fe:	df 2e       	mov	r13, r31
     800:	f3 e0       	ldi	r31, 0x03	; 3
     802:	ef 2e       	mov	r14, r31
     804:	f9 e3       	ldi	r31, 0x39	; 57
     806:	ff 2e       	mov	r15, r31
     808:	f0 2d       	mov	r31, r0
     80a:	19 c0       	rjmp	.+50     	; 0x83e <read_ADS1115+0x1ba>
     80c:	0f 2e       	mov	r0, r31
     80e:	fe e2       	ldi	r31, 0x2E	; 46
     810:	cf 2e       	mov	r12, r31
     812:	fd e9       	ldi	r31, 0x9D	; 157
     814:	df 2e       	mov	r13, r31
     816:	f4 e4       	ldi	r31, 0x44	; 68
     818:	ef 2e       	mov	r14, r31
     81a:	f9 e3       	ldi	r31, 0x39	; 57
     81c:	ff 2e       	mov	r15, r31
     81e:	f0 2d       	mov	r31, r0
     820:	0e c0       	rjmp	.+28     	; 0x83e <read_ADS1115+0x1ba>
     822:	c1 2c       	mov	r12, r1
     824:	d1 2c       	mov	r13, r1
     826:	76 01       	movw	r14, r12
     828:	0a c0       	rjmp	.+20     	; 0x83e <read_ADS1115+0x1ba>
     82a:	0f 2e       	mov	r0, r31
     82c:	f4 e7       	ldi	r31, 0x74	; 116
     82e:	cf 2e       	mov	r12, r31
     830:	f3 e1       	ldi	r31, 0x13	; 19
     832:	df 2e       	mov	r13, r31
     834:	f3 e0       	ldi	r31, 0x03	; 3
     836:	ef 2e       	mov	r14, r31
     838:	f7 e3       	ldi	r31, 0x37	; 55
     83a:	ff 2e       	mov	r15, r31
     83c:	f0 2d       	mov	r31, r0
     83e:	07 2e       	mov	r0, r23
     840:	00 0c       	add	r0, r0
     842:	88 0b       	sbc	r24, r24
     844:	99 0b       	sbc	r25, r25
     846:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatsisf>
     84a:	a7 01       	movw	r20, r14
     84c:	96 01       	movw	r18, r12
     84e:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     852:	56 2f       	mov	r21, r22
     854:	47 2f       	mov	r20, r23
     856:	38 2f       	mov	r19, r24
     858:	29 2f       	mov	r18, r25
     85a:	65 2f       	mov	r22, r21
     85c:	74 2f       	mov	r23, r20
     85e:	83 2f       	mov	r24, r19
     860:	92 2f       	mov	r25, r18
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	ff 90       	pop	r15
     86c:	ef 90       	pop	r14
     86e:	df 90       	pop	r13
     870:	cf 90       	pop	r12
     872:	08 95       	ret

00000874 <read_AD590>:
     874:	cf 92       	push	r12
     876:	df 92       	push	r13
     878:	ef 92       	push	r14
     87a:	ff 92       	push	r15
     87c:	cf 93       	push	r28
     87e:	81 30       	cpi	r24, 0x01	; 1
     880:	21 f0       	breq	.+8      	; 0x88a <read_AD590+0x16>
     882:	90 f0       	brcs	.+36     	; 0x8a8 <read_AD590+0x34>
     884:	82 30       	cpi	r24, 0x02	; 2
     886:	31 f0       	breq	.+12     	; 0x894 <read_AD590+0x20>
     888:	0a c0       	rjmp	.+20     	; 0x89e <read_AD590+0x2a>
     88a:	c1 2c       	mov	r12, r1
     88c:	d1 2c       	mov	r13, r1
     88e:	76 01       	movw	r14, r12
     890:	c4 e0       	ldi	r28, 0x04	; 4
     892:	14 c0       	rjmp	.+40     	; 0x8bc <read_AD590+0x48>
     894:	c1 2c       	mov	r12, r1
     896:	d1 2c       	mov	r13, r1
     898:	76 01       	movw	r14, r12
     89a:	c0 e1       	ldi	r28, 0x10	; 16
     89c:	0f c0       	rjmp	.+30     	; 0x8bc <read_AD590+0x48>
     89e:	c1 2c       	mov	r12, r1
     8a0:	d1 2c       	mov	r13, r1
     8a2:	76 01       	movw	r14, r12
     8a4:	c0 e0       	ldi	r28, 0x00	; 0
     8a6:	0a c0       	rjmp	.+20     	; 0x8bc <read_AD590+0x48>
     8a8:	0f 2e       	mov	r0, r31
     8aa:	f3 e3       	ldi	r31, 0x33	; 51
     8ac:	cf 2e       	mov	r12, r31
     8ae:	dc 2c       	mov	r13, r12
     8b0:	f3 ef       	ldi	r31, 0xF3	; 243
     8b2:	ef 2e       	mov	r14, r31
     8b4:	f0 e4       	ldi	r31, 0x40	; 64
     8b6:	ff 2e       	mov	r15, r31
     8b8:	f0 2d       	mov	r31, r0
     8ba:	c1 e0       	ldi	r28, 0x01	; 1
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	66 e0       	ldi	r22, 0x06	; 6
     8c0:	8e e4       	ldi	r24, 0x4E	; 78
     8c2:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     8c6:	4c 2f       	mov	r20, r28
     8c8:	40 95       	com	r20
     8ca:	60 e0       	ldi	r22, 0x00	; 0
     8cc:	8e e4       	ldi	r24, 0x4E	; 78
     8ce:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     8d2:	4c 2f       	mov	r20, r28
     8d4:	6a e0       	ldi	r22, 0x0A	; 10
     8d6:	8e e4       	ldi	r24, 0x4E	; 78
     8d8:	0e 94 24 02 	call	0x448	; 0x448 <write_MCP23008>
     8dc:	86 e1       	ldi	r24, 0x16	; 22
     8de:	8a 95       	dec	r24
     8e0:	f1 f7       	brne	.-4      	; 0x8de <read_AD590+0x6a>
     8e2:	00 00       	nop
     8e4:	20 e8       	ldi	r18, 0x80	; 128
     8e6:	40 e7       	ldi	r20, 0x70	; 112
     8e8:	68 e0       	ldi	r22, 0x08	; 8
     8ea:	80 e9       	ldi	r24, 0x90	; 144
     8ec:	0e 94 42 03 	call	0x684	; 0x684 <read_ADS1115>
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	4a e7       	ldi	r20, 0x7A	; 122
     8f6:	54 e4       	ldi	r21, 0x44	; 68
     8f8:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     8fc:	23 e3       	ldi	r18, 0x33	; 51
     8fe:	33 e9       	ldi	r19, 0x93	; 147
     900:	48 e8       	ldi	r20, 0x88	; 136
     902:	53 e4       	ldi	r21, 0x43	; 67
     904:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__subsf3>
     908:	a7 01       	movw	r20, r14
     90a:	96 01       	movw	r18, r12
     90c:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__addsf3>
     910:	cf 91       	pop	r28
     912:	ff 90       	pop	r15
     914:	ef 90       	pop	r14
     916:	df 90       	pop	r13
     918:	cf 90       	pop	r12
     91a:	08 95       	ret

0000091c <read_MCP9808>:
     91c:	cf 92       	push	r12
     91e:	df 92       	push	r13
     920:	ef 92       	push	r14
     922:	ff 92       	push	r15
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	60 e0       	ldi	r22, 0x00	; 0
     92a:	80 e3       	ldi	r24, 0x30	; 48
     92c:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     930:	85 e0       	ldi	r24, 0x05	; 5
     932:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     936:	61 e0       	ldi	r22, 0x01	; 1
     938:	80 e3       	ldi	r24, 0x30	; 48
     93a:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     93e:	0e 94 8a 01 	call	0x314	; 0x314 <read_TWI>
     942:	d8 2f       	mov	r29, r24
     944:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
     948:	c8 2f       	mov	r28, r24
     94a:	87 e0       	ldi	r24, 0x07	; 7
     94c:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     950:	6d 2f       	mov	r22, r29
     952:	6f 70       	andi	r22, 0x0F	; 15
     954:	70 e0       	ldi	r23, 0x00	; 0
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	40 e8       	ldi	r20, 0x80	; 128
     964:	51 e4       	ldi	r21, 0x41	; 65
     966:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     96a:	6b 01       	movw	r12, r22
     96c:	7c 01       	movw	r14, r24
     96e:	6c 2f       	mov	r22, r28
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 be 13 	call	0x277c	; 0x277c <__floatunsisf>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e8       	ldi	r20, 0x80	; 128
     980:	5d e3       	ldi	r21, 0x3D	; 61
     982:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     986:	9b 01       	movw	r18, r22
     988:	ac 01       	movw	r20, r24
     98a:	c7 01       	movw	r24, r14
     98c:	b6 01       	movw	r22, r12
     98e:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__addsf3>
     992:	d4 ff       	sbrs	r29, 4
     994:	08 c0       	rjmp	.+16     	; 0x9a6 <read_MCP9808+0x8a>
     996:	9b 01       	movw	r18, r22
     998:	ac 01       	movw	r20, r24
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	80 e8       	ldi	r24, 0x80	; 128
     9a0:	93 e4       	ldi	r25, 0x43	; 67
     9a2:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__subsf3>
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	cf 90       	pop	r12
     9b2:	08 95       	ret

000009b4 <get_humidity>:
     9b4:	8f 92       	push	r8
     9b6:	9f 92       	push	r9
     9b8:	af 92       	push	r10
     9ba:	bf 92       	push	r11
     9bc:	cf 92       	push	r12
     9be:	df 92       	push	r13
     9c0:	ef 92       	push	r14
     9c2:	ff 92       	push	r15
     9c4:	81 30       	cpi	r24, 0x01	; 1
     9c6:	59 f0       	breq	.+22     	; 0x9de <get_humidity+0x2a>
     9c8:	18 f0       	brcs	.+6      	; 0x9d0 <get_humidity+0x1c>
     9ca:	82 30       	cpi	r24, 0x02	; 2
     9cc:	79 f0       	breq	.+30     	; 0x9ec <get_humidity+0x38>
     9ce:	15 c0       	rjmp	.+42     	; 0x9fa <get_humidity+0x46>
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
     9d6:	4b 01       	movw	r8, r22
     9d8:	5c 01       	movw	r10, r24
     9da:	40 e4       	ldi	r20, 0x40	; 64
     9dc:	17 c0       	rjmp	.+46     	; 0xa0c <get_humidity+0x58>
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
     9e4:	4b 01       	movw	r8, r22
     9e6:	5c 01       	movw	r10, r24
     9e8:	40 e5       	ldi	r20, 0x50	; 80
     9ea:	10 c0       	rjmp	.+32     	; 0xa0c <get_humidity+0x58>
     9ec:	82 e0       	ldi	r24, 0x02	; 2
     9ee:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
     9f2:	4b 01       	movw	r8, r22
     9f4:	5c 01       	movw	r10, r24
     9f6:	40 e6       	ldi	r20, 0x60	; 96
     9f8:	09 c0       	rjmp	.+18     	; 0xa0c <get_humidity+0x58>
     9fa:	0f 2e       	mov	r0, r31
     9fc:	81 2c       	mov	r8, r1
     9fe:	91 2c       	mov	r9, r1
     a00:	f0 ea       	ldi	r31, 0xA0	; 160
     a02:	af 2e       	mov	r10, r31
     a04:	f1 e4       	ldi	r31, 0x41	; 65
     a06:	bf 2e       	mov	r11, r31
     a08:	f0 2d       	mov	r31, r0
     a0a:	40 e5       	ldi	r20, 0x50	; 80
     a0c:	20 e8       	ldi	r18, 0x80	; 128
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	80 e9       	ldi	r24, 0x90	; 144
     a12:	0e 94 42 03 	call	0x684	; 0x684 <read_ADS1115>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 ea       	ldi	r20, 0xA0	; 160
     a1c:	50 e4       	ldi	r21, 0x40	; 64
     a1e:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divsf3>
     a22:	2a e0       	ldi	r18, 0x0A	; 10
     a24:	37 ed       	ldi	r19, 0xD7	; 215
     a26:	43 e2       	ldi	r20, 0x23	; 35
     a28:	5e e3       	ldi	r21, 0x3E	; 62
     a2a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__subsf3>
     a2e:	2f e5       	ldi	r18, 0x5F	; 95
     a30:	39 e2       	ldi	r19, 0x29	; 41
     a32:	4b ec       	ldi	r20, 0xCB	; 203
     a34:	5b e3       	ldi	r21, 0x3B	; 59
     a36:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divsf3>
     a3a:	6b 01       	movw	r12, r22
     a3c:	7c 01       	movw	r14, r24
     a3e:	29 ec       	ldi	r18, 0xC9	; 201
     a40:	3e e8       	ldi	r19, 0x8E	; 142
     a42:	4d e0       	ldi	r20, 0x0D	; 13
     a44:	5b e3       	ldi	r21, 0x3B	; 59
     a46:	c5 01       	movw	r24, r10
     a48:	b4 01       	movw	r22, r8
     a4a:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     a4e:	9b 01       	movw	r18, r22
     a50:	ac 01       	movw	r20, r24
     a52:	62 e2       	ldi	r22, 0x22	; 34
     a54:	7d ef       	ldi	r23, 0xFD	; 253
     a56:	86 e8       	ldi	r24, 0x86	; 134
     a58:	9f e3       	ldi	r25, 0x3F	; 63
     a5a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__subsf3>
     a5e:	9b 01       	movw	r18, r22
     a60:	ac 01       	movw	r20, r24
     a62:	c7 01       	movw	r24, r14
     a64:	b6 01       	movw	r22, r12
     a66:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divsf3>
     a6a:	ff 90       	pop	r15
     a6c:	ef 90       	pop	r14
     a6e:	df 90       	pop	r13
     a70:	cf 90       	pop	r12
     a72:	bf 90       	pop	r11
     a74:	af 90       	pop	r10
     a76:	9f 90       	pop	r9
     a78:	8f 90       	pop	r8
     a7a:	08 95       	ret

00000a7c <read_ionpump>:
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ef 92       	push	r14
     a82:	ff 92       	push	r15
     a84:	81 30       	cpi	r24, 0x01	; 1
     a86:	21 f0       	breq	.+8      	; 0xa90 <read_ionpump+0x14>
     a88:	82 30       	cpi	r24, 0x02	; 2
     a8a:	79 f5       	brne	.+94     	; 0xaea <read_ionpump+0x6e>
     a8c:	40 e3       	ldi	r20, 0x30	; 48
     a8e:	01 c0       	rjmp	.+2      	; 0xa92 <read_ionpump+0x16>
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	20 e8       	ldi	r18, 0x80	; 128
     a94:	62 e0       	ldi	r22, 0x02	; 2
     a96:	82 e9       	ldi	r24, 0x92	; 146
     a98:	0e 94 42 03 	call	0x684	; 0x684 <read_ADS1115>
     a9c:	6b 01       	movw	r12, r22
     a9e:	7c 01       	movw	r14, r24
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	40 e0       	ldi	r20, 0x00	; 0
     aa6:	5f e3       	ldi	r21, 0x3F	; 63
     aa8:	0e 94 47 13 	call	0x268e	; 0x268e <__cmpsf2>
     aac:	88 23       	and	r24, r24
     aae:	14 f1       	brlt	.+68     	; 0xaf4 <read_ionpump+0x78>
     ab0:	20 e0       	ldi	r18, 0x00	; 0
     ab2:	30 e0       	ldi	r19, 0x00	; 0
     ab4:	40 e0       	ldi	r20, 0x00	; 0
     ab6:	50 e4       	ldi	r21, 0x40	; 64
     ab8:	c7 01       	movw	r24, r14
     aba:	b6 01       	movw	r22, r12
     abc:	0e 94 70 14 	call	0x28e0	; 0x28e0 <__gesf2>
     ac0:	18 16       	cp	r1, r24
     ac2:	ec f0       	brlt	.+58     	; 0xafe <read_ionpump+0x82>
     ac4:	26 ed       	ldi	r18, 0xD6	; 214
     ac6:	36 e5       	ldi	r19, 0x56	; 86
     ac8:	40 e0       	ldi	r20, 0x00	; 0
     aca:	50 e4       	ldi	r21, 0x40	; 64
     acc:	c7 01       	movw	r24, r14
     ace:	b6 01       	movw	r22, r12
     ad0:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
     ad4:	2e e6       	ldi	r18, 0x6E	; 110
     ad6:	33 ea       	ldi	r19, 0xA3	; 163
     ad8:	4b ed       	ldi	r20, 0xDB	; 219
     ada:	50 e4       	ldi	r21, 0x40	; 64
     adc:	0e 94 da 12 	call	0x25b4	; 0x25b4 <__subsf3>
     ae0:	56 2f       	mov	r21, r22
     ae2:	47 2f       	mov	r20, r23
     ae4:	38 2f       	mov	r19, r24
     ae6:	29 2f       	mov	r18, r25
     ae8:	0e c0       	rjmp	.+28     	; 0xb06 <read_ionpump+0x8a>
     aea:	5a e9       	ldi	r21, 0x9A	; 154
     aec:	49 ef       	ldi	r20, 0xF9	; 249
     aee:	39 e7       	ldi	r19, 0x79	; 121
     af0:	24 ec       	ldi	r18, 0xC4	; 196
     af2:	09 c0       	rjmp	.+18     	; 0xb06 <read_ionpump+0x8a>
     af4:	5a e9       	ldi	r21, 0x9A	; 154
     af6:	49 ef       	ldi	r20, 0xF9	; 249
     af8:	39 e7       	ldi	r19, 0x79	; 121
     afa:	24 ec       	ldi	r18, 0xC4	; 196
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <read_ionpump+0x8a>
     afe:	5a e9       	ldi	r21, 0x9A	; 154
     b00:	49 ef       	ldi	r20, 0xF9	; 249
     b02:	39 e7       	ldi	r19, 0x79	; 121
     b04:	24 ec       	ldi	r18, 0xC4	; 196
     b06:	65 2f       	mov	r22, r21
     b08:	74 2f       	mov	r23, r20
     b0a:	83 2f       	mov	r24, r19
     b0c:	92 2f       	mov	r25, r18
     b0e:	ff 90       	pop	r15
     b10:	ef 90       	pop	r14
     b12:	df 90       	pop	r13
     b14:	cf 90       	pop	r12
     b16:	08 95       	ret

00000b18 <init_USART>:
     b18:	e0 e0       	ldi	r30, 0x00	; 0
     b1a:	f4 e0       	ldi	r31, 0x04	; 4
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	85 83       	std	Z+5, r24	; 0x05
     b20:	81 83       	std	Z+1, r24	; 0x01
     b22:	e0 e0       	ldi	r30, 0x00	; 0
     b24:	f8 e0       	ldi	r31, 0x08	; 8
     b26:	2d e6       	ldi	r18, 0x6D	; 109
     b28:	35 e0       	ldi	r19, 0x05	; 5
     b2a:	20 87       	std	Z+8, r18	; 0x08
     b2c:	31 87       	std	Z+9, r19	; 0x09
     b2e:	95 81       	ldd	r25, Z+5	; 0x05
     b30:	90 68       	ori	r25, 0x80	; 128
     b32:	95 83       	std	Z+5, r25	; 0x05
     b34:	96 81       	ldd	r25, Z+6	; 0x06
     b36:	90 64       	ori	r25, 0x40	; 64
     b38:	96 83       	std	Z+6, r25	; 0x06
     b3a:	96 81       	ldd	r25, Z+6	; 0x06
     b3c:	90 68       	ori	r25, 0x80	; 128
     b3e:	96 83       	std	Z+6, r25	; 0x06
     b40:	10 92 95 2b 	sts	0x2B95, r1	; 0x802b95 <send0_buf+0x80>
     b44:	10 92 96 2b 	sts	0x2B96, r1	; 0x802b96 <send0_buf+0x81>
     b48:	80 93 99 2b 	sts	0x2B99, r24	; 0x802b99 <send0_buf+0x84>
     b4c:	10 92 10 2b 	sts	0x2B10, r1	; 0x802b10 <recv0_buf+0x80>
     b50:	10 92 11 2b 	sts	0x2B11, r1	; 0x802b11 <recv0_buf+0x81>
     b54:	10 92 90 2a 	sts	0x2A90, r1	; 0x802a90 <recv0_buf>
     b58:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <recv0_buf+0x84>
     b5c:	e0 e4       	ldi	r30, 0x40	; 64
     b5e:	f4 e0       	ldi	r31, 0x04	; 4
     b60:	85 83       	std	Z+5, r24	; 0x05
     b62:	81 83       	std	Z+1, r24	; 0x01
     b64:	e0 e2       	ldi	r30, 0x20	; 32
     b66:	f8 e0       	ldi	r31, 0x08	; 8
     b68:	20 87       	std	Z+8, r18	; 0x08
     b6a:	31 87       	std	Z+9, r19	; 0x09
     b6c:	96 81       	ldd	r25, Z+6	; 0x06
     b6e:	90 64       	ori	r25, 0x40	; 64
     b70:	96 83       	std	Z+6, r25	; 0x06
     b72:	96 81       	ldd	r25, Z+6	; 0x06
     b74:	90 68       	ori	r25, 0x80	; 128
     b76:	96 83       	std	Z+6, r25	; 0x06
     b78:	80 93 29 2d 	sts	0x2D29, r24	; 0x802d29 <send1_buf+0x84>
     b7c:	10 92 8f 2a 	sts	0x2A8F, r1	; 0x802a8f <recv1_buf+0x84>
     b80:	e0 e2       	ldi	r30, 0x20	; 32
     b82:	f4 e0       	ldi	r31, 0x04	; 4
     b84:	85 83       	std	Z+5, r24	; 0x05
     b86:	81 83       	std	Z+1, r24	; 0x01
     b88:	e0 e6       	ldi	r30, 0x60	; 96
     b8a:	f8 e0       	ldi	r31, 0x08	; 8
     b8c:	20 87       	std	Z+8, r18	; 0x08
     b8e:	31 87       	std	Z+9, r19	; 0x09
     b90:	96 81       	ldd	r25, Z+6	; 0x06
     b92:	90 64       	ori	r25, 0x40	; 64
     b94:	96 83       	std	Z+6, r25	; 0x06
     b96:	96 81       	ldd	r25, Z+6	; 0x06
     b98:	90 68       	ori	r25, 0x80	; 128
     b9a:	96 83       	std	Z+6, r25	; 0x06
     b9c:	80 93 a4 2c 	sts	0x2CA4, r24	; 0x802ca4 <send3_buf+0x84>
     ba0:	10 92 1f 2c 	sts	0x2C1F, r1	; 0x802c1f <recv3_buf+0x84>
     ba4:	08 95       	ret

00000ba6 <send_USART>:
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	39 f0       	breq	.+14     	; 0xbbc <send_USART+0x16>
     bae:	48 f0       	brcs	.+18     	; 0xbc2 <send_USART+0x1c>
     bb0:	83 30       	cpi	r24, 0x03	; 3
     bb2:	09 f0       	breq	.+2      	; 0xbb6 <send_USART+0x10>
     bb4:	70 c0       	rjmp	.+224    	; 0xc96 <send_USART+0xf0>
     bb6:	41 11       	cpse	r20, r1
     bb8:	4c c0       	rjmp	.+152    	; 0xc52 <send_USART+0xac>
     bba:	68 c0       	rjmp	.+208    	; 0xc8c <send_USART+0xe6>
     bbc:	41 11       	cpse	r20, r1
     bbe:	26 c0       	rjmp	.+76     	; 0xc0c <send_USART+0x66>
     bc0:	42 c0       	rjmp	.+132    	; 0xc46 <send_USART+0xa0>
     bc2:	44 23       	and	r20, r20
     bc4:	e9 f0       	breq	.+58     	; 0xc00 <send_USART+0x5a>
     bc6:	fb 01       	movw	r30, r22
     bc8:	41 50       	subi	r20, 0x01	; 1
     bca:	50 e0       	ldi	r21, 0x00	; 0
     bcc:	4f 5f       	subi	r20, 0xFF	; 255
     bce:	5f 4f       	sbci	r21, 0xFF	; 255
     bd0:	64 0f       	add	r22, r20
     bd2:	75 1f       	adc	r23, r21
     bd4:	a5 e9       	ldi	r26, 0x95	; 149
     bd6:	bb e2       	ldi	r27, 0x2B	; 43
     bd8:	8c 91       	ld	r24, X
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	21 91       	ld	r18, Z+
     bde:	ec 01       	movw	r28, r24
     be0:	cb 5e       	subi	r28, 0xEB	; 235
     be2:	d4 4d       	sbci	r29, 0xD4	; 212
     be4:	28 83       	st	Y, r18
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	8f 77       	andi	r24, 0x7F	; 127
     bea:	90 78       	andi	r25, 0x80	; 128
     bec:	99 23       	and	r25, r25
     bee:	24 f4       	brge	.+8      	; 0xbf8 <send_USART+0x52>
     bf0:	01 97       	sbiw	r24, 0x01	; 1
     bf2:	80 68       	ori	r24, 0x80	; 128
     bf4:	9f 6f       	ori	r25, 0xFF	; 255
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	8c 93       	st	X, r24
     bfa:	6e 17       	cp	r22, r30
     bfc:	7f 07       	cpc	r23, r31
     bfe:	61 f7       	brne	.-40     	; 0xbd8 <send_USART+0x32>
     c00:	e0 e0       	ldi	r30, 0x00	; 0
     c02:	f8 e0       	ldi	r31, 0x08	; 8
     c04:	85 81       	ldd	r24, Z+5	; 0x05
     c06:	80 62       	ori	r24, 0x20	; 32
     c08:	85 83       	std	Z+5, r24	; 0x05
     c0a:	45 c0       	rjmp	.+138    	; 0xc96 <send_USART+0xf0>
     c0c:	fb 01       	movw	r30, r22
     c0e:	41 50       	subi	r20, 0x01	; 1
     c10:	50 e0       	ldi	r21, 0x00	; 0
     c12:	4f 5f       	subi	r20, 0xFF	; 255
     c14:	5f 4f       	sbci	r21, 0xFF	; 255
     c16:	64 0f       	add	r22, r20
     c18:	75 1f       	adc	r23, r21
     c1a:	a5 e2       	ldi	r26, 0x25	; 37
     c1c:	bd e2       	ldi	r27, 0x2D	; 45
     c1e:	8c 91       	ld	r24, X
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	21 91       	ld	r18, Z+
     c24:	ec 01       	movw	r28, r24
     c26:	cb 55       	subi	r28, 0x5B	; 91
     c28:	d3 4d       	sbci	r29, 0xD3	; 211
     c2a:	28 83       	st	Y, r18
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	8f 77       	andi	r24, 0x7F	; 127
     c30:	90 78       	andi	r25, 0x80	; 128
     c32:	99 23       	and	r25, r25
     c34:	24 f4       	brge	.+8      	; 0xc3e <send_USART+0x98>
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	80 68       	ori	r24, 0x80	; 128
     c3a:	9f 6f       	ori	r25, 0xFF	; 255
     c3c:	01 96       	adiw	r24, 0x01	; 1
     c3e:	8c 93       	st	X, r24
     c40:	6e 17       	cp	r22, r30
     c42:	7f 07       	cpc	r23, r31
     c44:	61 f7       	brne	.-40     	; 0xc1e <send_USART+0x78>
     c46:	e0 e2       	ldi	r30, 0x20	; 32
     c48:	f8 e0       	ldi	r31, 0x08	; 8
     c4a:	85 81       	ldd	r24, Z+5	; 0x05
     c4c:	80 62       	ori	r24, 0x20	; 32
     c4e:	85 83       	std	Z+5, r24	; 0x05
     c50:	22 c0       	rjmp	.+68     	; 0xc96 <send_USART+0xf0>
     c52:	fb 01       	movw	r30, r22
     c54:	41 50       	subi	r20, 0x01	; 1
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	4f 5f       	subi	r20, 0xFF	; 255
     c5a:	5f 4f       	sbci	r21, 0xFF	; 255
     c5c:	64 0f       	add	r22, r20
     c5e:	75 1f       	adc	r23, r21
     c60:	a0 ea       	ldi	r26, 0xA0	; 160
     c62:	bc e2       	ldi	r27, 0x2C	; 44
     c64:	8c 91       	ld	r24, X
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	21 91       	ld	r18, Z+
     c6a:	ec 01       	movw	r28, r24
     c6c:	c0 5e       	subi	r28, 0xE0	; 224
     c6e:	d3 4d       	sbci	r29, 0xD3	; 211
     c70:	28 83       	st	Y, r18
     c72:	01 96       	adiw	r24, 0x01	; 1
     c74:	8f 77       	andi	r24, 0x7F	; 127
     c76:	90 78       	andi	r25, 0x80	; 128
     c78:	99 23       	and	r25, r25
     c7a:	24 f4       	brge	.+8      	; 0xc84 <send_USART+0xde>
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	80 68       	ori	r24, 0x80	; 128
     c80:	9f 6f       	ori	r25, 0xFF	; 255
     c82:	01 96       	adiw	r24, 0x01	; 1
     c84:	8c 93       	st	X, r24
     c86:	6e 17       	cp	r22, r30
     c88:	7f 07       	cpc	r23, r31
     c8a:	61 f7       	brne	.-40     	; 0xc64 <send_USART+0xbe>
     c8c:	e0 e6       	ldi	r30, 0x60	; 96
     c8e:	f8 e0       	ldi	r31, 0x08	; 8
     c90:	85 81       	ldd	r24, Z+5	; 0x05
     c92:	80 62       	ori	r24, 0x20	; 32
     c94:	85 83       	std	Z+5, r24	; 0x05
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	08 95       	ret

00000c9c <__vector_17>:
     c9c:	1f 92       	push	r1
     c9e:	0f 92       	push	r0
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	0f 92       	push	r0
     ca4:	11 24       	eor	r1, r1
     ca6:	8f 93       	push	r24
     ca8:	9f 93       	push	r25
     caa:	ef 93       	push	r30
     cac:	ff 93       	push	r31
     cae:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f4800>
     cb2:	8d 30       	cpi	r24, 0x0D	; 13
     cb4:	51 f4       	brne	.+20     	; 0xcca <__vector_17+0x2e>
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	80 93 14 2b 	sts	0x2B14, r24	; 0x802b14 <recv0_buf+0x84>
     cbc:	e0 91 10 2b 	lds	r30, 0x2B10	; 0x802b10 <recv0_buf+0x80>
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	e0 57       	subi	r30, 0x70	; 112
     cc4:	f5 4d       	sbci	r31, 0xD5	; 213
     cc6:	10 82       	st	Z, r1
     cc8:	06 c0       	rjmp	.+12     	; 0xcd6 <__vector_17+0x3a>
     cca:	e0 91 10 2b 	lds	r30, 0x2B10	; 0x802b10 <recv0_buf+0x80>
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	e0 57       	subi	r30, 0x70	; 112
     cd2:	f5 4d       	sbci	r31, 0xD5	; 213
     cd4:	80 83       	st	Z, r24
     cd6:	e0 e1       	ldi	r30, 0x10	; 16
     cd8:	fb e2       	ldi	r31, 0x2B	; 43
     cda:	80 81       	ld	r24, Z
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	01 96       	adiw	r24, 0x01	; 1
     ce0:	8f 77       	andi	r24, 0x7F	; 127
     ce2:	90 78       	andi	r25, 0x80	; 128
     ce4:	99 23       	and	r25, r25
     ce6:	24 f4       	brge	.+8      	; 0xcf0 <__vector_17+0x54>
     ce8:	01 97       	sbiw	r24, 0x01	; 1
     cea:	80 68       	ori	r24, 0x80	; 128
     cec:	9f 6f       	ori	r25, 0xFF	; 255
     cee:	01 96       	adiw	r24, 0x01	; 1
     cf0:	80 83       	st	Z, r24
     cf2:	ff 91       	pop	r31
     cf4:	ef 91       	pop	r30
     cf6:	9f 91       	pop	r25
     cf8:	8f 91       	pop	r24
     cfa:	0f 90       	pop	r0
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	0f 90       	pop	r0
     d00:	1f 90       	pop	r1
     d02:	18 95       	reti

00000d04 <__vector_18>:
     d04:	1f 92       	push	r1
     d06:	0f 92       	push	r0
     d08:	0f b6       	in	r0, 0x3f	; 63
     d0a:	0f 92       	push	r0
     d0c:	11 24       	eor	r1, r1
     d0e:	8f 93       	push	r24
     d10:	9f 93       	push	r25
     d12:	ef 93       	push	r30
     d14:	ff 93       	push	r31
     d16:	e0 e0       	ldi	r30, 0x00	; 0
     d18:	f8 e0       	ldi	r31, 0x08	; 8
     d1a:	85 81       	ldd	r24, Z+5	; 0x05
     d1c:	8f 7d       	andi	r24, 0xDF	; 223
     d1e:	85 83       	std	Z+5, r24	; 0x05
     d20:	e0 91 96 2b 	lds	r30, 0x2B96	; 0x802b96 <send0_buf+0x81>
     d24:	80 91 95 2b 	lds	r24, 0x2B95	; 0x802b95 <send0_buf+0x80>
     d28:	8e 17       	cp	r24, r30
     d2a:	81 f0       	breq	.+32     	; 0xd4c <__vector_18+0x48>
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	8e 0f       	add	r24, r30
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	eb 5e       	subi	r30, 0xEB	; 235
     d34:	f4 4d       	sbci	r31, 0xD4	; 212
     d36:	90 81       	ld	r25, Z
     d38:	e0 e0       	ldi	r30, 0x00	; 0
     d3a:	f8 e0       	ldi	r31, 0x08	; 8
     d3c:	92 83       	std	Z+2, r25	; 0x02
     d3e:	8f 77       	andi	r24, 0x7F	; 127
     d40:	80 93 96 2b 	sts	0x2B96, r24	; 0x802b96 <send0_buf+0x81>
     d44:	85 81       	ldd	r24, Z+5	; 0x05
     d46:	80 62       	ori	r24, 0x20	; 32
     d48:	85 83       	std	Z+5, r24	; 0x05
     d4a:	03 c0       	rjmp	.+6      	; 0xd52 <__vector_18+0x4e>
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	80 93 99 2b 	sts	0x2B99, r24	; 0x802b99 <send0_buf+0x84>
     d52:	ff 91       	pop	r31
     d54:	ef 91       	pop	r30
     d56:	9f 91       	pop	r25
     d58:	8f 91       	pop	r24
     d5a:	0f 90       	pop	r0
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	0f 90       	pop	r0
     d60:	1f 90       	pop	r1
     d62:	18 95       	reti

00000d64 <__vector_26>:
     d64:	1f 92       	push	r1
     d66:	0f 92       	push	r0
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	0f 92       	push	r0
     d6c:	11 24       	eor	r1, r1
     d6e:	8f 93       	push	r24
     d70:	9f 93       	push	r25
     d72:	af 93       	push	r26
     d74:	bf 93       	push	r27
     d76:	ef 93       	push	r30
     d78:	ff 93       	push	r31
     d7a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7f4820>
     d7e:	8d 30       	cpi	r24, 0x0D	; 13
     d80:	21 f0       	breq	.+8      	; 0xd8a <__vector_26+0x26>
     d82:	e0 91 8e 2a 	lds	r30, 0x2A8E	; 0x802a8e <recv1_buf+0x83>
     d86:	ef 37       	cpi	r30, 0x7F	; 127
     d88:	78 f0       	brcs	.+30     	; 0xda8 <__vector_26+0x44>
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	80 93 8f 2a 	sts	0x2A8F, r24	; 0x802a8f <recv1_buf+0x84>
     d90:	ae e8       	ldi	r26, 0x8E	; 142
     d92:	ba e2       	ldi	r27, 0x2A	; 42
     d94:	8c 91       	ld	r24, X
     d96:	e8 2f       	mov	r30, r24
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	e5 5f       	subi	r30, 0xF5	; 245
     d9c:	f5 4d       	sbci	r31, 0xD5	; 213
     d9e:	10 82       	st	Z, r1
     da0:	80 93 8d 2a 	sts	0x2A8D, r24	; 0x802a8d <recv1_buf+0x82>
     da4:	1c 92       	st	X, r1
     da6:	08 c0       	rjmp	.+16     	; 0xdb8 <__vector_26+0x54>
     da8:	91 e0       	ldi	r25, 0x01	; 1
     daa:	9e 0f       	add	r25, r30
     dac:	90 93 8e 2a 	sts	0x2A8E, r25	; 0x802a8e <recv1_buf+0x83>
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	e5 5f       	subi	r30, 0xF5	; 245
     db4:	f5 4d       	sbci	r31, 0xD5	; 213
     db6:	80 83       	st	Z, r24
     db8:	ff 91       	pop	r31
     dba:	ef 91       	pop	r30
     dbc:	bf 91       	pop	r27
     dbe:	af 91       	pop	r26
     dc0:	9f 91       	pop	r25
     dc2:	8f 91       	pop	r24
     dc4:	0f 90       	pop	r0
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	0f 90       	pop	r0
     dca:	1f 90       	pop	r1
     dcc:	18 95       	reti

00000dce <__vector_27>:
     dce:	1f 92       	push	r1
     dd0:	0f 92       	push	r0
     dd2:	0f b6       	in	r0, 0x3f	; 63
     dd4:	0f 92       	push	r0
     dd6:	11 24       	eor	r1, r1
     dd8:	8f 93       	push	r24
     dda:	9f 93       	push	r25
     ddc:	af 93       	push	r26
     dde:	bf 93       	push	r27
     de0:	ef 93       	push	r30
     de2:	ff 93       	push	r31
     de4:	a8 e2       	ldi	r26, 0x28	; 40
     de6:	bd e2       	ldi	r27, 0x2D	; 45
     de8:	ec 91       	ld	r30, X
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	8e 0f       	add	r24, r30
     dee:	8c 93       	st	X, r24
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	eb 55       	subi	r30, 0x5B	; 91
     df4:	f3 4d       	sbci	r31, 0xD3	; 211
     df6:	90 81       	ld	r25, Z
     df8:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7f4822>
     dfc:	90 91 27 2d 	lds	r25, 0x2D27	; 0x802d27 <send1_buf+0x82>
     e00:	89 17       	cp	r24, r25
     e02:	40 f0       	brcs	.+16     	; 0xe14 <__vector_27+0x46>
     e04:	e0 e2       	ldi	r30, 0x20	; 32
     e06:	f8 e0       	ldi	r31, 0x08	; 8
     e08:	85 81       	ldd	r24, Z+5	; 0x05
     e0a:	8f 7d       	andi	r24, 0xDF	; 223
     e0c:	85 83       	std	Z+5, r24	; 0x05
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	80 93 29 2d 	sts	0x2D29, r24	; 0x802d29 <send1_buf+0x84>
     e14:	ff 91       	pop	r31
     e16:	ef 91       	pop	r30
     e18:	bf 91       	pop	r27
     e1a:	af 91       	pop	r26
     e1c:	9f 91       	pop	r25
     e1e:	8f 91       	pop	r24
     e20:	0f 90       	pop	r0
     e22:	0f be       	out	0x3f, r0	; 63
     e24:	0f 90       	pop	r0
     e26:	1f 90       	pop	r1
     e28:	18 95       	reti

00000e2a <__vector_37>:
     e2a:	1f 92       	push	r1
     e2c:	0f 92       	push	r0
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	0f 92       	push	r0
     e32:	11 24       	eor	r1, r1
     e34:	8f 93       	push	r24
     e36:	9f 93       	push	r25
     e38:	af 93       	push	r26
     e3a:	bf 93       	push	r27
     e3c:	ef 93       	push	r30
     e3e:	ff 93       	push	r31
     e40:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7f4860>
     e44:	8d 30       	cpi	r24, 0x0D	; 13
     e46:	21 f0       	breq	.+8      	; 0xe50 <__vector_37+0x26>
     e48:	e0 91 1e 2c 	lds	r30, 0x2C1E	; 0x802c1e <recv3_buf+0x83>
     e4c:	ef 37       	cpi	r30, 0x7F	; 127
     e4e:	78 f0       	brcs	.+30     	; 0xe6e <__vector_37+0x44>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	80 93 1f 2c 	sts	0x2C1F, r24	; 0x802c1f <recv3_buf+0x84>
     e56:	ae e1       	ldi	r26, 0x1E	; 30
     e58:	bc e2       	ldi	r27, 0x2C	; 44
     e5a:	8c 91       	ld	r24, X
     e5c:	e8 2f       	mov	r30, r24
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	e5 56       	subi	r30, 0x65	; 101
     e62:	f4 4d       	sbci	r31, 0xD4	; 212
     e64:	10 82       	st	Z, r1
     e66:	80 93 1d 2c 	sts	0x2C1D, r24	; 0x802c1d <recv3_buf+0x82>
     e6a:	1c 92       	st	X, r1
     e6c:	08 c0       	rjmp	.+16     	; 0xe7e <__vector_37+0x54>
     e6e:	91 e0       	ldi	r25, 0x01	; 1
     e70:	9e 0f       	add	r25, r30
     e72:	90 93 1e 2c 	sts	0x2C1E, r25	; 0x802c1e <recv3_buf+0x83>
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	e5 56       	subi	r30, 0x65	; 101
     e7a:	f4 4d       	sbci	r31, 0xD4	; 212
     e7c:	80 83       	st	Z, r24
     e7e:	ff 91       	pop	r31
     e80:	ef 91       	pop	r30
     e82:	bf 91       	pop	r27
     e84:	af 91       	pop	r26
     e86:	9f 91       	pop	r25
     e88:	8f 91       	pop	r24
     e8a:	0f 90       	pop	r0
     e8c:	0f be       	out	0x3f, r0	; 63
     e8e:	0f 90       	pop	r0
     e90:	1f 90       	pop	r1
     e92:	18 95       	reti

00000e94 <__vector_38>:
     e94:	1f 92       	push	r1
     e96:	0f 92       	push	r0
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	0f 92       	push	r0
     e9c:	11 24       	eor	r1, r1
     e9e:	8f 93       	push	r24
     ea0:	9f 93       	push	r25
     ea2:	af 93       	push	r26
     ea4:	bf 93       	push	r27
     ea6:	ef 93       	push	r30
     ea8:	ff 93       	push	r31
     eaa:	a3 ea       	ldi	r26, 0xA3	; 163
     eac:	bc e2       	ldi	r27, 0x2C	; 44
     eae:	ec 91       	ld	r30, X
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	8e 0f       	add	r24, r30
     eb4:	8c 93       	st	X, r24
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	e0 5e       	subi	r30, 0xE0	; 224
     eba:	f3 4d       	sbci	r31, 0xD3	; 211
     ebc:	90 81       	ld	r25, Z
     ebe:	90 93 62 08 	sts	0x0862, r25	; 0x800862 <__TEXT_REGION_LENGTH__+0x7f4862>
     ec2:	90 91 a2 2c 	lds	r25, 0x2CA2	; 0x802ca2 <send3_buf+0x82>
     ec6:	89 17       	cp	r24, r25
     ec8:	40 f0       	brcs	.+16     	; 0xeda <__vector_38+0x46>
     eca:	e0 e6       	ldi	r30, 0x60	; 96
     ecc:	f8 e0       	ldi	r31, 0x08	; 8
     ece:	85 81       	ldd	r24, Z+5	; 0x05
     ed0:	8f 7d       	andi	r24, 0xDF	; 223
     ed2:	85 83       	std	Z+5, r24	; 0x05
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	80 93 a4 2c 	sts	0x2CA4, r24	; 0x802ca4 <send3_buf+0x84>
     eda:	ff 91       	pop	r31
     edc:	ef 91       	pop	r30
     ede:	bf 91       	pop	r27
     ee0:	af 91       	pop	r26
     ee2:	9f 91       	pop	r25
     ee4:	8f 91       	pop	r24
     ee6:	0f 90       	pop	r0
     ee8:	0f be       	out	0x3f, r0	; 63
     eea:	0f 90       	pop	r0
     eec:	1f 90       	pop	r1
     eee:	18 95       	reti

00000ef0 <read_FRAM>:
     ef0:	af 92       	push	r10
     ef2:	bf 92       	push	r11
     ef4:	cf 92       	push	r12
     ef6:	df 92       	push	r13
     ef8:	ef 92       	push	r14
     efa:	ff 92       	push	r15
     efc:	0f 93       	push	r16
     efe:	1f 93       	push	r17
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	c8 2f       	mov	r28, r24
     f06:	e6 2e       	mov	r14, r22
     f08:	d7 2f       	mov	r29, r23
     f0a:	8a 01       	movw	r16, r20
     f0c:	f2 2e       	mov	r15, r18
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     f14:	81 11       	cpse	r24, r1
     f16:	33 c0       	rjmp	.+102    	; 0xf7e <read_FRAM+0x8e>
     f18:	8d 2f       	mov	r24, r29
     f1a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     f1e:	81 11       	cpse	r24, r1
     f20:	2e c0       	rjmp	.+92     	; 0xf7e <read_FRAM+0x8e>
     f22:	8e 2d       	mov	r24, r14
     f24:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     f28:	81 11       	cpse	r24, r1
     f2a:	29 c0       	rjmp	.+82     	; 0xf7e <read_FRAM+0x8e>
     f2c:	61 e0       	ldi	r22, 0x01	; 1
     f2e:	8c 2f       	mov	r24, r28
     f30:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     f34:	81 11       	cpse	r24, r1
     f36:	23 c0       	rjmp	.+70     	; 0xf7e <read_FRAM+0x8e>
     f38:	af 2c       	mov	r10, r15
     f3a:	b1 2c       	mov	r11, r1
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	a8 1a       	sub	r10, r24
     f40:	b1 08       	sbc	r11, r1
     f42:	1a 14       	cp	r1, r10
     f44:	1b 04       	cpc	r1, r11
     f46:	74 f4       	brge	.+28     	; 0xf64 <read_FRAM+0x74>
     f48:	c0 e0       	ldi	r28, 0x00	; 0
     f4a:	68 01       	movw	r12, r16
     f4c:	cc 0e       	add	r12, r28
     f4e:	d1 1c       	adc	r13, r1
     f50:	0e 94 8a 01 	call	0x314	; 0x314 <read_TWI>
     f54:	f6 01       	movw	r30, r12
     f56:	80 83       	st	Z, r24
     f58:	cf 5f       	subi	r28, 0xFF	; 255
     f5a:	8c 2f       	mov	r24, r28
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	8a 15       	cp	r24, r10
     f60:	9b 05       	cpc	r25, r11
     f62:	9c f3       	brlt	.-26     	; 0xf4a <read_FRAM+0x5a>
     f64:	8f 2d       	mov	r24, r15
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	e8 01       	movw	r28, r16
     f6c:	c8 0f       	add	r28, r24
     f6e:	d9 1f       	adc	r29, r25
     f70:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
     f74:	88 83       	st	Y, r24
     f76:	87 e0       	ldi	r24, 0x07	; 7
     f78:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	ff 90       	pop	r15
     f88:	ef 90       	pop	r14
     f8a:	df 90       	pop	r13
     f8c:	cf 90       	pop	r12
     f8e:	bf 90       	pop	r11
     f90:	af 90       	pop	r10
     f92:	08 95       	ret

00000f94 <write_FRAM>:
     f94:	ef 92       	push	r14
     f96:	ff 92       	push	r15
     f98:	0f 93       	push	r16
     f9a:	1f 93       	push	r17
     f9c:	cf 93       	push	r28
     f9e:	df 93       	push	r29
     fa0:	d6 2f       	mov	r29, r22
     fa2:	c7 2f       	mov	r28, r23
     fa4:	7a 01       	movw	r14, r20
     fa6:	02 2f       	mov	r16, r18
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
     fae:	81 11       	cpse	r24, r1
     fb0:	1f c0       	rjmp	.+62     	; 0xff0 <write_FRAM+0x5c>
     fb2:	8c 2f       	mov	r24, r28
     fb4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     fb8:	81 11       	cpse	r24, r1
     fba:	1a c0       	rjmp	.+52     	; 0xff0 <write_FRAM+0x5c>
     fbc:	8d 2f       	mov	r24, r29
     fbe:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     fc2:	81 11       	cpse	r24, r1
     fc4:	15 c0       	rjmp	.+42     	; 0xff0 <write_FRAM+0x5c>
     fc6:	00 23       	and	r16, r16
     fc8:	79 f0       	breq	.+30     	; 0xfe8 <write_FRAM+0x54>
     fca:	e7 01       	movw	r28, r14
     fcc:	01 50       	subi	r16, 0x01	; 1
     fce:	10 e0       	ldi	r17, 0x00	; 0
     fd0:	0f 5f       	subi	r16, 0xFF	; 255
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	0e 0d       	add	r16, r14
     fd6:	1f 1d       	adc	r17, r15
     fd8:	89 91       	ld	r24, Y+
     fda:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
     fde:	81 11       	cpse	r24, r1
     fe0:	07 c0       	rjmp	.+14     	; 0xff0 <write_FRAM+0x5c>
     fe2:	c0 17       	cp	r28, r16
     fe4:	d1 07       	cpc	r29, r17
     fe6:	c1 f7       	brne	.-16     	; 0xfd8 <write_FRAM+0x44>
     fe8:	87 e0       	ldi	r24, 0x07	; 7
     fea:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	df 91       	pop	r29
     ff2:	cf 91       	pop	r28
     ff4:	1f 91       	pop	r17
     ff6:	0f 91       	pop	r16
     ff8:	ff 90       	pop	r15
     ffa:	ef 90       	pop	r14
     ffc:	08 95       	ret

00000ffe <convert_ds2iso>:
     ffe:	fb 01       	movw	r30, r22
    1000:	20 81       	ld	r18, Z
    1002:	1f 92       	push	r1
    1004:	2f 93       	push	r18
    1006:	21 81       	ldd	r18, Z+1	; 0x01
    1008:	1f 92       	push	r1
    100a:	2f 93       	push	r18
    100c:	22 81       	ldd	r18, Z+2	; 0x02
    100e:	1f 92       	push	r1
    1010:	2f 93       	push	r18
    1012:	24 81       	ldd	r18, Z+4	; 0x04
    1014:	1f 92       	push	r1
    1016:	2f 93       	push	r18
    1018:	25 81       	ldd	r18, Z+5	; 0x05
    101a:	1f 92       	push	r1
    101c:	2f 93       	push	r18
    101e:	26 81       	ldd	r18, Z+6	; 0x06
    1020:	1f 92       	push	r1
    1022:	2f 93       	push	r18
    1024:	20 e8       	ldi	r18, 0x80	; 128
    1026:	35 e7       	ldi	r19, 0x75	; 117
    1028:	3f 93       	push	r19
    102a:	2f 93       	push	r18
    102c:	9f 93       	push	r25
    102e:	8f 93       	push	r24
    1030:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
    1034:	8d b7       	in	r24, 0x3d	; 61
    1036:	9e b7       	in	r25, 0x3e	; 62
    1038:	40 96       	adiw	r24, 0x10	; 16
    103a:	8d bf       	out	0x3d, r24	; 61
    103c:	9e bf       	out	0x3e, r25	; 62
    103e:	08 95       	ret

00001040 <convert_iso2ds>:
    1040:	dc 01       	movw	r26, r24
    1042:	fb 01       	movw	r30, r22
    1044:	81 89       	ldd	r24, Z+17	; 0x11
    1046:	98 2f       	mov	r25, r24
    1048:	92 95       	swap	r25
    104a:	90 7f       	andi	r25, 0xF0	; 240
    104c:	82 89       	ldd	r24, Z+18	; 0x12
    104e:	80 53       	subi	r24, 0x30	; 48
    1050:	89 2b       	or	r24, r25
    1052:	8c 93       	st	X, r24
    1054:	86 85       	ldd	r24, Z+14	; 0x0e
    1056:	98 2f       	mov	r25, r24
    1058:	92 95       	swap	r25
    105a:	90 7f       	andi	r25, 0xF0	; 240
    105c:	87 85       	ldd	r24, Z+15	; 0x0f
    105e:	80 53       	subi	r24, 0x30	; 48
    1060:	89 2b       	or	r24, r25
    1062:	11 96       	adiw	r26, 0x01	; 1
    1064:	8c 93       	st	X, r24
    1066:	11 97       	sbiw	r26, 0x01	; 1
    1068:	83 85       	ldd	r24, Z+11	; 0x0b
    106a:	98 2f       	mov	r25, r24
    106c:	92 95       	swap	r25
    106e:	90 7f       	andi	r25, 0xF0	; 240
    1070:	84 85       	ldd	r24, Z+12	; 0x0c
    1072:	80 53       	subi	r24, 0x30	; 48
    1074:	89 2b       	or	r24, r25
    1076:	12 96       	adiw	r26, 0x02	; 2
    1078:	8c 93       	st	X, r24
    107a:	12 97       	sbiw	r26, 0x02	; 2
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	13 96       	adiw	r26, 0x03	; 3
    1080:	8c 93       	st	X, r24
    1082:	13 97       	sbiw	r26, 0x03	; 3
    1084:	80 85       	ldd	r24, Z+8	; 0x08
    1086:	98 2f       	mov	r25, r24
    1088:	92 95       	swap	r25
    108a:	90 7f       	andi	r25, 0xF0	; 240
    108c:	81 85       	ldd	r24, Z+9	; 0x09
    108e:	80 53       	subi	r24, 0x30	; 48
    1090:	89 2b       	or	r24, r25
    1092:	14 96       	adiw	r26, 0x04	; 4
    1094:	8c 93       	st	X, r24
    1096:	14 97       	sbiw	r26, 0x04	; 4
    1098:	85 81       	ldd	r24, Z+5	; 0x05
    109a:	98 2f       	mov	r25, r24
    109c:	92 95       	swap	r25
    109e:	90 7f       	andi	r25, 0xF0	; 240
    10a0:	86 81       	ldd	r24, Z+6	; 0x06
    10a2:	80 53       	subi	r24, 0x30	; 48
    10a4:	89 2b       	or	r24, r25
    10a6:	15 96       	adiw	r26, 0x05	; 5
    10a8:	8c 93       	st	X, r24
    10aa:	15 97       	sbiw	r26, 0x05	; 5
    10ac:	82 81       	ldd	r24, Z+2	; 0x02
    10ae:	98 2f       	mov	r25, r24
    10b0:	92 95       	swap	r25
    10b2:	90 7f       	andi	r25, 0xF0	; 240
    10b4:	83 81       	ldd	r24, Z+3	; 0x03
    10b6:	80 53       	subi	r24, 0x30	; 48
    10b8:	89 2b       	or	r24, r25
    10ba:	16 96       	adiw	r26, 0x06	; 6
    10bc:	8c 93       	st	X, r24
    10be:	08 95       	ret

000010c0 <read_DS3231>:
    10c0:	ef 92       	push	r14
    10c2:	ff 92       	push	r15
    10c4:	0f 93       	push	r16
    10c6:	1f 93       	push	r17
    10c8:	cf 93       	push	r28
    10ca:	df 93       	push	r29
    10cc:	7b 01       	movw	r14, r22
    10ce:	60 e0       	ldi	r22, 0x00	; 0
    10d0:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    10d4:	88 23       	and	r24, r24
    10d6:	21 f0       	breq	.+8      	; 0x10e0 <read_DS3231+0x20>
    10d8:	97 e0       	ldi	r25, 0x07	; 7
    10da:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    10de:	25 c0       	rjmp	.+74     	; 0x112a <read_DS3231+0x6a>
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    10e6:	88 23       	and	r24, r24
    10e8:	21 f0       	breq	.+8      	; 0x10f2 <read_DS3231+0x32>
    10ea:	97 e0       	ldi	r25, 0x07	; 7
    10ec:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    10f0:	1c c0       	rjmp	.+56     	; 0x112a <read_DS3231+0x6a>
    10f2:	61 e0       	ldi	r22, 0x01	; 1
    10f4:	80 ed       	ldi	r24, 0xD0	; 208
    10f6:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    10fa:	88 23       	and	r24, r24
    10fc:	21 f0       	breq	.+8      	; 0x1106 <read_DS3231+0x46>
    10fe:	97 e0       	ldi	r25, 0x07	; 7
    1100:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    1104:	12 c0       	rjmp	.+36     	; 0x112a <read_DS3231+0x6a>
    1106:	e7 01       	movw	r28, r14
    1108:	87 01       	movw	r16, r14
    110a:	0a 5f       	subi	r16, 0xFA	; 250
    110c:	1f 4f       	sbci	r17, 0xFF	; 255
    110e:	0e 94 8a 01 	call	0x314	; 0x314 <read_TWI>
    1112:	89 93       	st	Y+, r24
    1114:	c0 17       	cp	r28, r16
    1116:	d1 07       	cpc	r29, r17
    1118:	d1 f7       	brne	.-12     	; 0x110e <read_DS3231+0x4e>
    111a:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
    111e:	f7 01       	movw	r30, r14
    1120:	86 83       	std	Z+6, r24	; 0x06
    1122:	87 e0       	ldi	r24, 0x07	; 7
    1124:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	df 91       	pop	r29
    112c:	cf 91       	pop	r28
    112e:	1f 91       	pop	r17
    1130:	0f 91       	pop	r16
    1132:	ff 90       	pop	r15
    1134:	ef 90       	pop	r14
    1136:	08 95       	ret

00001138 <get_time>:
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	27 97       	sbiw	r28, 0x07	; 7
    1146:	cd bf       	out	0x3d, r28	; 61
    1148:	de bf       	out	0x3e, r29	; 62
    114a:	8c 01       	movw	r16, r24
    114c:	be 01       	movw	r22, r28
    114e:	6f 5f       	subi	r22, 0xFF	; 255
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	80 ed       	ldi	r24, 0xD0	; 208
    1154:	0e 94 60 08 	call	0x10c0	; 0x10c0 <read_DS3231>
    1158:	88 23       	and	r24, r24
    115a:	49 f0       	breq	.+18     	; 0x116e <get_time+0x36>
    115c:	92 e1       	ldi	r25, 0x12	; 18
    115e:	e0 ea       	ldi	r30, 0xA0	; 160
    1160:	f5 e7       	ldi	r31, 0x75	; 117
    1162:	d8 01       	movw	r26, r16
    1164:	01 90       	ld	r0, Z+
    1166:	0d 92       	st	X+, r0
    1168:	9a 95       	dec	r25
    116a:	e1 f7       	brne	.-8      	; 0x1164 <get_time+0x2c>
    116c:	07 c0       	rjmp	.+14     	; 0x117c <get_time+0x44>
    116e:	be 01       	movw	r22, r28
    1170:	6f 5f       	subi	r22, 0xFF	; 255
    1172:	7f 4f       	sbci	r23, 0xFF	; 255
    1174:	c8 01       	movw	r24, r16
    1176:	0e 94 ff 07 	call	0xffe	; 0xffe <convert_ds2iso>
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	27 96       	adiw	r28, 0x07	; 7
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	de bf       	out	0x3e, r29	; 62
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	08 95       	ret

0000118c <write_DS3231>:
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	8b 01       	movw	r16, r22
    1196:	60 e0       	ldi	r22, 0x00	; 0
    1198:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    119c:	88 23       	and	r24, r24
    119e:	21 f0       	breq	.+8      	; 0x11a8 <write_DS3231+0x1c>
    11a0:	97 e0       	ldi	r25, 0x07	; 7
    11a2:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    11a6:	1c c0       	rjmp	.+56     	; 0x11e0 <write_DS3231+0x54>
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    11ae:	88 23       	and	r24, r24
    11b0:	21 f0       	breq	.+8      	; 0x11ba <write_DS3231+0x2e>
    11b2:	97 e0       	ldi	r25, 0x07	; 7
    11b4:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    11b8:	13 c0       	rjmp	.+38     	; 0x11e0 <write_DS3231+0x54>
    11ba:	e8 01       	movw	r28, r16
    11bc:	09 5f       	subi	r16, 0xF9	; 249
    11be:	1f 4f       	sbci	r17, 0xFF	; 255
    11c0:	89 91       	ld	r24, Y+
    11c2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    11c6:	88 23       	and	r24, r24
    11c8:	21 f0       	breq	.+8      	; 0x11d2 <write_DS3231+0x46>
    11ca:	97 e0       	ldi	r25, 0x07	; 7
    11cc:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    11d0:	07 c0       	rjmp	.+14     	; 0x11e0 <write_DS3231+0x54>
    11d2:	0c 17       	cp	r16, r28
    11d4:	1d 07       	cpc	r17, r29
    11d6:	a1 f7       	brne	.-24     	; 0x11c0 <write_DS3231+0x34>
    11d8:	87 e0       	ldi	r24, 0x07	; 7
    11da:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	1f 91       	pop	r17
    11e6:	0f 91       	pop	r16
    11e8:	08 95       	ret

000011ea <put_time>:
    11ea:	cf 93       	push	r28
    11ec:	df 93       	push	r29
    11ee:	cd b7       	in	r28, 0x3d	; 61
    11f0:	de b7       	in	r29, 0x3e	; 62
    11f2:	27 97       	sbiw	r28, 0x07	; 7
    11f4:	cd bf       	out	0x3d, r28	; 61
    11f6:	de bf       	out	0x3e, r29	; 62
    11f8:	bc 01       	movw	r22, r24
    11fa:	ce 01       	movw	r24, r28
    11fc:	01 96       	adiw	r24, 0x01	; 1
    11fe:	0e 94 20 08 	call	0x1040	; 0x1040 <convert_iso2ds>
    1202:	be 01       	movw	r22, r28
    1204:	6f 5f       	subi	r22, 0xFF	; 255
    1206:	7f 4f       	sbci	r23, 0xFF	; 255
    1208:	80 ed       	ldi	r24, 0xD0	; 208
    120a:	0e 94 c6 08 	call	0x118c	; 0x118c <write_DS3231>
    120e:	27 96       	adiw	r28, 0x07	; 7
    1210:	cd bf       	out	0x3d, r28	; 61
    1212:	de bf       	out	0x3e, r29	; 62
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	08 95       	ret

0000121a <read_MMA8451>:
    121a:	ef 92       	push	r14
    121c:	ff 92       	push	r15
    121e:	0f 93       	push	r16
    1220:	1f 93       	push	r17
    1222:	cf 93       	push	r28
    1224:	df 93       	push	r29
    1226:	c8 2f       	mov	r28, r24
    1228:	d6 2f       	mov	r29, r22
    122a:	8a 01       	movw	r16, r20
    122c:	f2 2e       	mov	r15, r18
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    1234:	81 11       	cpse	r24, r1
    1236:	26 c0       	rjmp	.+76     	; 0x1284 <read_MMA8451+0x6a>
    1238:	8d 2f       	mov	r24, r29
    123a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    123e:	81 11       	cpse	r24, r1
    1240:	21 c0       	rjmp	.+66     	; 0x1284 <read_MMA8451+0x6a>
    1242:	61 e0       	ldi	r22, 0x01	; 1
    1244:	8c 2f       	mov	r24, r28
    1246:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    124a:	81 11       	cpse	r24, r1
    124c:	1b c0       	rjmp	.+54     	; 0x1284 <read_MMA8451+0x6a>
    124e:	81 e0       	ldi	r24, 0x01	; 1
    1250:	8f 15       	cp	r24, r15
    1252:	80 f4       	brcc	.+32     	; 0x1274 <read_MMA8451+0x5a>
    1254:	e8 01       	movw	r28, r16
    1256:	fa 94       	dec	r15
    1258:	fa 94       	dec	r15
    125a:	2f 2d       	mov	r18, r15
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	2f 5f       	subi	r18, 0xFF	; 255
    1260:	3f 4f       	sbci	r19, 0xFF	; 255
    1262:	02 0f       	add	r16, r18
    1264:	13 1f       	adc	r17, r19
    1266:	78 01       	movw	r14, r16
    1268:	0e 94 8a 01 	call	0x314	; 0x314 <read_TWI>
    126c:	89 93       	st	Y+, r24
    126e:	ce 15       	cp	r28, r14
    1270:	df 05       	cpc	r29, r15
    1272:	d1 f7       	brne	.-12     	; 0x1268 <read_MMA8451+0x4e>
    1274:	0e 94 9e 01 	call	0x33c	; 0x33c <readlast_TWI>
    1278:	f8 01       	movw	r30, r16
    127a:	80 83       	st	Z, r24
    127c:	87 e0       	ldi	r24, 0x07	; 7
    127e:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	df 91       	pop	r29
    1286:	cf 91       	pop	r28
    1288:	1f 91       	pop	r17
    128a:	0f 91       	pop	r16
    128c:	ff 90       	pop	r15
    128e:	ef 90       	pop	r14
    1290:	08 95       	ret

00001292 <get_orientation>:
    1292:	cf 92       	push	r12
    1294:	df 92       	push	r13
    1296:	ef 92       	push	r14
    1298:	ff 92       	push	r15
    129a:	0f 93       	push	r16
    129c:	1f 93       	push	r17
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	26 97       	sbiw	r28, 0x06	; 6
    12a8:	cd bf       	out	0x3d, r28	; 61
    12aa:	de bf       	out	0x3e, r29	; 62
    12ac:	6b 01       	movw	r12, r22
    12ae:	7a 01       	movw	r14, r20
    12b0:	89 01       	movw	r16, r18
    12b2:	4a e9       	ldi	r20, 0x9A	; 154
    12b4:	5f e3       	ldi	r21, 0x3F	; 63
    12b6:	6c e1       	ldi	r22, 0x1C	; 28
    12b8:	76 ec       	ldi	r23, 0xC6	; 198
    12ba:	f9 01       	movw	r30, r18
    12bc:	40 83       	st	Z, r20
    12be:	51 83       	std	Z+1, r21	; 0x01
    12c0:	62 83       	std	Z+2, r22	; 0x02
    12c2:	73 83       	std	Z+3, r23	; 0x03
    12c4:	f7 01       	movw	r30, r14
    12c6:	40 83       	st	Z, r20
    12c8:	51 83       	std	Z+1, r21	; 0x01
    12ca:	62 83       	std	Z+2, r22	; 0x02
    12cc:	73 83       	std	Z+3, r23	; 0x03
    12ce:	f6 01       	movw	r30, r12
    12d0:	40 83       	st	Z, r20
    12d2:	51 83       	std	Z+1, r21	; 0x01
    12d4:	62 83       	std	Z+2, r22	; 0x02
    12d6:	73 83       	std	Z+3, r23	; 0x03
    12d8:	26 e0       	ldi	r18, 0x06	; 6
    12da:	ae 01       	movw	r20, r28
    12dc:	4f 5f       	subi	r20, 0xFF	; 255
    12de:	5f 4f       	sbci	r21, 0xFF	; 255
    12e0:	61 e0       	ldi	r22, 0x01	; 1
    12e2:	0e 94 0d 09 	call	0x121a	; 0x121a <read_MMA8451>
    12e6:	89 81       	ldd	r24, Y+1	; 0x01
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	98 2f       	mov	r25, r24
    12ec:	88 27       	eor	r24, r24
    12ee:	2a 81       	ldd	r18, Y+2	; 0x02
    12f0:	82 2b       	or	r24, r18
    12f2:	bc 01       	movw	r22, r24
    12f4:	77 23       	and	r23, r23
    12f6:	14 f4       	brge	.+4      	; 0x12fc <get_orientation+0x6a>
    12f8:	6d 5f       	subi	r22, 0xFD	; 253
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	75 95       	asr	r23
    12fe:	67 95       	ror	r22
    1300:	75 95       	asr	r23
    1302:	67 95       	ror	r22
    1304:	07 2e       	mov	r0, r23
    1306:	00 0c       	add	r0, r0
    1308:	88 0b       	sbc	r24, r24
    130a:	99 0b       	sbc	r25, r25
    130c:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatsisf>
    1310:	26 e6       	ldi	r18, 0x66	; 102
    1312:	36 e2       	ldi	r19, 0x26	; 38
    1314:	45 e7       	ldi	r20, 0x75	; 117
    1316:	5e e3       	ldi	r21, 0x3E	; 62
    1318:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
    131c:	f6 01       	movw	r30, r12
    131e:	60 83       	st	Z, r22
    1320:	71 83       	std	Z+1, r23	; 0x01
    1322:	82 83       	std	Z+2, r24	; 0x02
    1324:	93 83       	std	Z+3, r25	; 0x03
    1326:	8b 81       	ldd	r24, Y+3	; 0x03
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	98 2f       	mov	r25, r24
    132c:	88 27       	eor	r24, r24
    132e:	2c 81       	ldd	r18, Y+4	; 0x04
    1330:	82 2b       	or	r24, r18
    1332:	bc 01       	movw	r22, r24
    1334:	77 23       	and	r23, r23
    1336:	14 f4       	brge	.+4      	; 0x133c <get_orientation+0xaa>
    1338:	6d 5f       	subi	r22, 0xFD	; 253
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	75 95       	asr	r23
    133e:	67 95       	ror	r22
    1340:	75 95       	asr	r23
    1342:	67 95       	ror	r22
    1344:	07 2e       	mov	r0, r23
    1346:	00 0c       	add	r0, r0
    1348:	88 0b       	sbc	r24, r24
    134a:	99 0b       	sbc	r25, r25
    134c:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatsisf>
    1350:	26 e6       	ldi	r18, 0x66	; 102
    1352:	36 e2       	ldi	r19, 0x26	; 38
    1354:	45 e7       	ldi	r20, 0x75	; 117
    1356:	5e e3       	ldi	r21, 0x3E	; 62
    1358:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
    135c:	f7 01       	movw	r30, r14
    135e:	60 83       	st	Z, r22
    1360:	71 83       	std	Z+1, r23	; 0x01
    1362:	82 83       	std	Z+2, r24	; 0x02
    1364:	93 83       	std	Z+3, r25	; 0x03
    1366:	8d 81       	ldd	r24, Y+5	; 0x05
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	98 2f       	mov	r25, r24
    136c:	88 27       	eor	r24, r24
    136e:	2e 81       	ldd	r18, Y+6	; 0x06
    1370:	82 2b       	or	r24, r18
    1372:	bc 01       	movw	r22, r24
    1374:	77 23       	and	r23, r23
    1376:	14 f4       	brge	.+4      	; 0x137c <get_orientation+0xea>
    1378:	6d 5f       	subi	r22, 0xFD	; 253
    137a:	7f 4f       	sbci	r23, 0xFF	; 255
    137c:	75 95       	asr	r23
    137e:	67 95       	ror	r22
    1380:	75 95       	asr	r23
    1382:	67 95       	ror	r22
    1384:	07 2e       	mov	r0, r23
    1386:	00 0c       	add	r0, r0
    1388:	88 0b       	sbc	r24, r24
    138a:	99 0b       	sbc	r25, r25
    138c:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatsisf>
    1390:	26 e6       	ldi	r18, 0x66	; 102
    1392:	36 e2       	ldi	r19, 0x26	; 38
    1394:	45 e7       	ldi	r20, 0x75	; 117
    1396:	5e e3       	ldi	r21, 0x3E	; 62
    1398:	0e 94 75 14 	call	0x28ea	; 0x28ea <__mulsf3>
    139c:	f8 01       	movw	r30, r16
    139e:	60 83       	st	Z, r22
    13a0:	71 83       	std	Z+1, r23	; 0x01
    13a2:	82 83       	std	Z+2, r24	; 0x02
    13a4:	93 83       	std	Z+3, r25	; 0x03
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	26 96       	adiw	r28, 0x06	; 6
    13aa:	cd bf       	out	0x3d, r28	; 61
    13ac:	de bf       	out	0x3e, r29	; 62
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	1f 91       	pop	r17
    13b4:	0f 91       	pop	r16
    13b6:	ff 90       	pop	r15
    13b8:	ef 90       	pop	r14
    13ba:	df 90       	pop	r13
    13bc:	cf 90       	pop	r12
    13be:	08 95       	ret

000013c0 <write_MMA8451>:
    13c0:	cf 93       	push	r28
    13c2:	df 93       	push	r29
    13c4:	c6 2f       	mov	r28, r22
    13c6:	d4 2f       	mov	r29, r20
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    13ce:	88 23       	and	r24, r24
    13d0:	21 f0       	breq	.+8      	; 0x13da <write_MMA8451+0x1a>
    13d2:	97 e0       	ldi	r25, 0x07	; 7
    13d4:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    13d8:	16 c0       	rjmp	.+44     	; 0x1406 <write_MMA8451+0x46>
    13da:	8c 2f       	mov	r24, r28
    13dc:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    13e0:	88 23       	and	r24, r24
    13e2:	21 f0       	breq	.+8      	; 0x13ec <write_MMA8451+0x2c>
    13e4:	97 e0       	ldi	r25, 0x07	; 7
    13e6:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    13ea:	0d c0       	rjmp	.+26     	; 0x1406 <write_MMA8451+0x46>
    13ec:	8d 2f       	mov	r24, r29
    13ee:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    13f2:	88 23       	and	r24, r24
    13f4:	21 f0       	breq	.+8      	; 0x13fe <write_MMA8451+0x3e>
    13f6:	97 e0       	ldi	r25, 0x07	; 7
    13f8:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    13fc:	04 c0       	rjmp	.+8      	; 0x1406 <write_MMA8451+0x46>
    13fe:	87 e0       	ldi	r24, 0x07	; 7
    1400:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	df 91       	pop	r29
    1408:	cf 91       	pop	r28
    140a:	08 95       	ret

0000140c <init_MMA8451>:
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	1f 92       	push	r1
    1412:	cd b7       	in	r28, 0x3d	; 61
    1414:	de b7       	in	r29, 0x3e	; 62
    1416:	40 e4       	ldi	r20, 0x40	; 64
    1418:	6b e2       	ldi	r22, 0x2B	; 43
    141a:	8a e3       	ldi	r24, 0x3A	; 58
    141c:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <write_MMA8451>
    1420:	21 e0       	ldi	r18, 0x01	; 1
    1422:	ae 01       	movw	r20, r28
    1424:	4f 5f       	subi	r20, 0xFF	; 255
    1426:	5f 4f       	sbci	r21, 0xFF	; 255
    1428:	6b e2       	ldi	r22, 0x2B	; 43
    142a:	8a e3       	ldi	r24, 0x3A	; 58
    142c:	0e 94 0d 09 	call	0x121a	; 0x121a <read_MMA8451>
    1430:	89 81       	ldd	r24, Y+1	; 0x01
    1432:	86 ff       	sbrs	r24, 6
    1434:	0b c0       	rjmp	.+22     	; 0x144c <init_MMA8451+0x40>
    1436:	21 e0       	ldi	r18, 0x01	; 1
    1438:	ae 01       	movw	r20, r28
    143a:	4f 5f       	subi	r20, 0xFF	; 255
    143c:	5f 4f       	sbci	r21, 0xFF	; 255
    143e:	6b e2       	ldi	r22, 0x2B	; 43
    1440:	8a e3       	ldi	r24, 0x3A	; 58
    1442:	0e 94 0d 09 	call	0x121a	; 0x121a <read_MMA8451>
    1446:	89 81       	ldd	r24, Y+1	; 0x01
    1448:	86 fd       	sbrc	r24, 6
    144a:	f5 cf       	rjmp	.-22     	; 0x1436 <init_MMA8451+0x2a>
    144c:	40 ec       	ldi	r20, 0xC0	; 192
    144e:	6f e0       	ldi	r22, 0x0F	; 15
    1450:	8a e3       	ldi	r24, 0x3A	; 58
    1452:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <write_MMA8451>
    1456:	42 e0       	ldi	r20, 0x02	; 2
    1458:	6b e2       	ldi	r22, 0x2B	; 43
    145a:	8a e3       	ldi	r24, 0x3A	; 58
    145c:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <write_MMA8451>
    1460:	4d e3       	ldi	r20, 0x3D	; 61
    1462:	6a e2       	ldi	r22, 0x2A	; 42
    1464:	8a e3       	ldi	r24, 0x3A	; 58
    1466:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <write_MMA8451>
    146a:	89 81       	ldd	r24, Y+1	; 0x01
    146c:	0f 90       	pop	r0
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	08 95       	ret

00001474 <checksum_NMEA>:
    1474:	ef 92       	push	r14
    1476:	ff 92       	push	r15
    1478:	0f 93       	push	r16
    147a:	1f 93       	push	r17
    147c:	cf 93       	push	r28
    147e:	df 93       	push	r29
    1480:	cd b7       	in	r28, 0x3d	; 61
    1482:	de b7       	in	r29, 0x3e	; 62
    1484:	2e 97       	sbiw	r28, 0x0e	; 14
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	de bf       	out	0x3e, r29	; 62
    148a:	8c 01       	movw	r16, r24
    148c:	88 e0       	ldi	r24, 0x08	; 8
    148e:	e2 eb       	ldi	r30, 0xB2	; 178
    1490:	f5 e7       	ldi	r31, 0x75	; 117
    1492:	de 01       	movw	r26, r28
    1494:	11 96       	adiw	r26, 0x01	; 1
    1496:	01 90       	ld	r0, Z+
    1498:	0d 92       	st	X+, r0
    149a:	8a 95       	dec	r24
    149c:	e1 f7       	brne	.-8      	; 0x1496 <checksum_NMEA+0x22>
    149e:	f8 01       	movw	r30, r16
    14a0:	01 90       	ld	r0, Z+
    14a2:	00 20       	and	r0, r0
    14a4:	e9 f7       	brne	.-6      	; 0x14a0 <checksum_NMEA+0x2c>
    14a6:	31 97       	sbiw	r30, 0x01	; 1
    14a8:	3e 2f       	mov	r19, r30
    14aa:	30 1b       	sub	r19, r16
    14ac:	32 30       	cpi	r19, 0x02	; 2
    14ae:	50 f0       	brcs	.+20     	; 0x14c4 <checksum_NMEA+0x50>
    14b0:	f8 01       	movw	r30, r16
    14b2:	31 96       	adiw	r30, 0x01	; 1
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	21 91       	ld	r18, Z+
    14ba:	92 27       	eor	r25, r18
    14bc:	8f 5f       	subi	r24, 0xFF	; 255
    14be:	38 13       	cpse	r19, r24
    14c0:	fb cf       	rjmp	.-10     	; 0x14b8 <checksum_NMEA+0x44>
    14c2:	01 c0       	rjmp	.+2      	; 0x14c6 <checksum_NMEA+0x52>
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	1f 92       	push	r1
    14c8:	9f 93       	push	r25
    14ca:	ce 01       	movw	r24, r28
    14cc:	01 96       	adiw	r24, 0x01	; 1
    14ce:	9f 93       	push	r25
    14d0:	8f 93       	push	r24
    14d2:	7e 01       	movw	r14, r28
    14d4:	89 e0       	ldi	r24, 0x09	; 9
    14d6:	e8 0e       	add	r14, r24
    14d8:	f1 1c       	adc	r15, r1
    14da:	ff 92       	push	r15
    14dc:	ef 92       	push	r14
    14de:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
    14e2:	b7 01       	movw	r22, r14
    14e4:	c8 01       	movw	r24, r16
    14e6:	0e 94 a1 19 	call	0x3342	; 0x3342 <strcat>
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	0f 90       	pop	r0
    14f0:	0f 90       	pop	r0
    14f2:	0f 90       	pop	r0
    14f4:	0f 90       	pop	r0
    14f6:	2e 96       	adiw	r28, 0x0e	; 14
    14f8:	cd bf       	out	0x3d, r28	; 61
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	df 91       	pop	r29
    14fe:	cf 91       	pop	r28
    1500:	1f 91       	pop	r17
    1502:	0f 91       	pop	r16
    1504:	ff 90       	pop	r15
    1506:	ef 90       	pop	r14
    1508:	08 95       	ret

0000150a <format_ERR>:
    150a:	ef 92       	push	r14
    150c:	ff 92       	push	r15
    150e:	0f 93       	push	r16
    1510:	1f 93       	push	r17
    1512:	cf 93       	push	r28
    1514:	df 93       	push	r29
    1516:	cd b7       	in	r28, 0x3d	; 61
    1518:	de b7       	in	r29, 0x3e	; 62
    151a:	28 97       	sbiw	r28, 0x08	; 8
    151c:	cd bf       	out	0x3d, r28	; 61
    151e:	de bf       	out	0x3e, r29	; 62
    1520:	08 2f       	mov	r16, r24
    1522:	19 2f       	mov	r17, r25
    1524:	88 e0       	ldi	r24, 0x08	; 8
    1526:	ea eb       	ldi	r30, 0xBA	; 186
    1528:	f5 e7       	ldi	r31, 0x75	; 117
    152a:	9e 01       	movw	r18, r28
    152c:	2f 5f       	subi	r18, 0xFF	; 255
    152e:	3f 4f       	sbci	r19, 0xFF	; 255
    1530:	79 01       	movw	r14, r18
    1532:	d9 01       	movw	r26, r18
    1534:	01 90       	ld	r0, Z+
    1536:	0d 92       	st	X+, r0
    1538:	8a 95       	dec	r24
    153a:	e1 f7       	brne	.-8      	; 0x1534 <format_ERR+0x2a>
    153c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    1540:	1f 92       	push	r1
    1542:	8f 93       	push	r24
    1544:	ff 92       	push	r15
    1546:	ef 92       	push	r14
    1548:	1f 93       	push	r17
    154a:	0f 93       	push	r16
    154c:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
    1550:	80 2f       	mov	r24, r16
    1552:	91 2f       	mov	r25, r17
    1554:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
    1558:	0f 90       	pop	r0
    155a:	0f 90       	pop	r0
    155c:	0f 90       	pop	r0
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
    1562:	0f 90       	pop	r0
    1564:	28 96       	adiw	r28, 0x08	; 8
    1566:	cd bf       	out	0x3d, r28	; 61
    1568:	de bf       	out	0x3e, r29	; 62
    156a:	df 91       	pop	r29
    156c:	cf 91       	pop	r28
    156e:	1f 91       	pop	r17
    1570:	0f 91       	pop	r16
    1572:	ff 90       	pop	r15
    1574:	ef 90       	pop	r14
    1576:	08 95       	ret

00001578 <write_OLED>:
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	d6 2f       	mov	r29, r22
    157e:	c4 2f       	mov	r28, r20
    1580:	60 e0       	ldi	r22, 0x00	; 0
    1582:	0e 94 af 01 	call	0x35e	; 0x35e <start_TWI>
    1586:	8d 2f       	mov	r24, r29
    1588:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    158c:	8c 2f       	mov	r24, r28
    158e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write_TWI>
    1592:	87 e0       	ldi	r24, 0x07	; 7
    1594:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    1598:	df 91       	pop	r29
    159a:	cf 91       	pop	r28
    159c:	08 95       	ret

0000159e <init_OLED>:
    159e:	cf 93       	push	r28
    15a0:	e0 e6       	ldi	r30, 0x60	; 96
    15a2:	f4 e0       	ldi	r31, 0x04	; 4
    15a4:	90 e4       	ldi	r25, 0x40	; 64
    15a6:	96 83       	std	Z+6, r25	; 0x06
    15a8:	91 83       	std	Z+1, r25	; 0x01
    15aa:	a1 e4       	ldi	r26, 0x41	; 65
    15ac:	b3 e0       	ldi	r27, 0x03	; 3
    15ae:	11 97       	sbiw	r26, 0x01	; 1
    15b0:	f1 f7       	brne	.-4      	; 0x15ae <init_OLED+0x10>
    15b2:	00 00       	nop
    15b4:	95 83       	std	Z+5, r25	; 0x05
    15b6:	88 23       	and	r24, r24
    15b8:	11 f0       	breq	.+4      	; 0x15be <init_OLED+0x20>
    15ba:	ca e7       	ldi	r28, 0x7A	; 122
    15bc:	01 c0       	rjmp	.+2      	; 0x15c0 <init_OLED+0x22>
    15be:	c8 e7       	ldi	r28, 0x78	; 120
    15c0:	4a e2       	ldi	r20, 0x2A	; 42
    15c2:	60 e0       	ldi	r22, 0x00	; 0
    15c4:	8c 2f       	mov	r24, r28
    15c6:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15ca:	41 e7       	ldi	r20, 0x71	; 113
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	8c 2f       	mov	r24, r28
    15d0:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15d4:	4c e5       	ldi	r20, 0x5C	; 92
    15d6:	60 e4       	ldi	r22, 0x40	; 64
    15d8:	8c 2f       	mov	r24, r28
    15da:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15de:	48 e2       	ldi	r20, 0x28	; 40
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	8c 2f       	mov	r24, r28
    15e4:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15e8:	48 e0       	ldi	r20, 0x08	; 8
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	8c 2f       	mov	r24, r28
    15ee:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15f2:	4a e2       	ldi	r20, 0x2A	; 42
    15f4:	60 e0       	ldi	r22, 0x00	; 0
    15f6:	8c 2f       	mov	r24, r28
    15f8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    15fc:	49 e7       	ldi	r20, 0x79	; 121
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	8c 2f       	mov	r24, r28
    1602:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1606:	45 ed       	ldi	r20, 0xD5	; 213
    1608:	60 e0       	ldi	r22, 0x00	; 0
    160a:	8c 2f       	mov	r24, r28
    160c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1610:	40 e7       	ldi	r20, 0x70	; 112
    1612:	60 e0       	ldi	r22, 0x00	; 0
    1614:	8c 2f       	mov	r24, r28
    1616:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    161a:	48 e7       	ldi	r20, 0x78	; 120
    161c:	60 e0       	ldi	r22, 0x00	; 0
    161e:	8c 2f       	mov	r24, r28
    1620:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1624:	48 e0       	ldi	r20, 0x08	; 8
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	8c 2f       	mov	r24, r28
    162a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    162e:	46 e0       	ldi	r20, 0x06	; 6
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	8c 2f       	mov	r24, r28
    1634:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1638:	42 e7       	ldi	r20, 0x72	; 114
    163a:	60 e0       	ldi	r22, 0x00	; 0
    163c:	8c 2f       	mov	r24, r28
    163e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1642:	4a e2       	ldi	r20, 0x2A	; 42
    1644:	60 e0       	ldi	r22, 0x00	; 0
    1646:	8c 2f       	mov	r24, r28
    1648:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    164c:	49 e7       	ldi	r20, 0x79	; 121
    164e:	60 e0       	ldi	r22, 0x00	; 0
    1650:	8c 2f       	mov	r24, r28
    1652:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1656:	4a ed       	ldi	r20, 0xDA	; 218
    1658:	60 e0       	ldi	r22, 0x00	; 0
    165a:	8c 2f       	mov	r24, r28
    165c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1660:	40 e0       	ldi	r20, 0x00	; 0
    1662:	60 e0       	ldi	r22, 0x00	; 0
    1664:	8c 2f       	mov	r24, r28
    1666:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    166a:	4c ed       	ldi	r20, 0xDC	; 220
    166c:	60 e0       	ldi	r22, 0x00	; 0
    166e:	8c 2f       	mov	r24, r28
    1670:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1674:	40 e0       	ldi	r20, 0x00	; 0
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	8c 2f       	mov	r24, r28
    167a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    167e:	41 e8       	ldi	r20, 0x81	; 129
    1680:	60 e0       	ldi	r22, 0x00	; 0
    1682:	8c 2f       	mov	r24, r28
    1684:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1688:	4f e7       	ldi	r20, 0x7F	; 127
    168a:	60 e0       	ldi	r22, 0x00	; 0
    168c:	8c 2f       	mov	r24, r28
    168e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1692:	49 ed       	ldi	r20, 0xD9	; 217
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	8c 2f       	mov	r24, r28
    1698:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    169c:	41 ef       	ldi	r20, 0xF1	; 241
    169e:	60 e0       	ldi	r22, 0x00	; 0
    16a0:	8c 2f       	mov	r24, r28
    16a2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16a6:	4b ed       	ldi	r20, 0xDB	; 219
    16a8:	60 e0       	ldi	r22, 0x00	; 0
    16aa:	8c 2f       	mov	r24, r28
    16ac:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16b0:	40 e4       	ldi	r20, 0x40	; 64
    16b2:	60 e0       	ldi	r22, 0x00	; 0
    16b4:	8c 2f       	mov	r24, r28
    16b6:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16ba:	48 e7       	ldi	r20, 0x78	; 120
    16bc:	60 e0       	ldi	r22, 0x00	; 0
    16be:	8c 2f       	mov	r24, r28
    16c0:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16c4:	48 e2       	ldi	r20, 0x28	; 40
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	8c 2f       	mov	r24, r28
    16ca:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16ce:	41 e0       	ldi	r20, 0x01	; 1
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	8c 2f       	mov	r24, r28
    16d4:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16d8:	40 e8       	ldi	r20, 0x80	; 128
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	8c 2f       	mov	r24, r28
    16de:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16e2:	4c e0       	ldi	r20, 0x0C	; 12
    16e4:	60 e0       	ldi	r22, 0x00	; 0
    16e6:	8c 2f       	mov	r24, r28
    16e8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    16ec:	ba e6       	ldi	r27, 0x6A	; 106
    16ee:	24 e0       	ldi	r18, 0x04	; 4
    16f0:	81 e0       	ldi	r24, 0x01	; 1
    16f2:	b1 50       	subi	r27, 0x01	; 1
    16f4:	20 40       	sbci	r18, 0x00	; 0
    16f6:	80 40       	sbci	r24, 0x00	; 0
    16f8:	e1 f7       	brne	.-8      	; 0x16f2 <init_OLED+0x154>
    16fa:	00 c0       	rjmp	.+0      	; 0x16fc <init_OLED+0x15e>
    16fc:	cf 91       	pop	r28
    16fe:	08 95       	ret

00001700 <on_OLED>:
void on_OLED(uint8_t displaynumber)
{

	uint8_t twiaddr;

	twiaddr = (displaynumber == 0) ? OLEDADDR0 : OLEDADDR1;
    1700:	88 23       	and	r24, r24
    1702:	11 f0       	breq	.+4      	; 0x1708 <on_OLED+0x8>
    1704:	8a e7       	ldi	r24, 0x7A	; 122
    1706:	01 c0       	rjmp	.+2      	; 0x170a <on_OLED+0xa>
    1708:	88 e7       	ldi	r24, 0x78	; 120
	write_OLED(twiaddr, OLEDCMD, 0x0C);	// Display ON
    170a:	4c e0       	ldi	r20, 0x0C	; 12
    170c:	60 e0       	ldi	r22, 0x00	; 0
    170e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1712:	08 95       	ret

00001714 <writestr_OLED>:
	This routine positions the cursor at the beginning of a line (1 or 2) pads
	the string with blanks, then writes the full 16 characters to the display.

------------------------------------------------------------------------------*/
void writestr_OLED(uint8_t displaynumber, char *str, uint8_t lineno)
{
    1714:	cf 92       	push	r12
    1716:	df 92       	push	r13
    1718:	ff 92       	push	r15
    171a:	0f 93       	push	r16
    171c:	1f 93       	push	r17
    171e:	cf 93       	push	r28
    1720:	df 93       	push	r29
    1722:	cd b7       	in	r28, 0x3d	; 61
    1724:	de b7       	in	r29, 0x3e	; 62
    1726:	e2 97       	sbiw	r28, 0x32	; 50
    1728:	cd bf       	out	0x3d, r28	; 61
    172a:	de bf       	out	0x3e, r29	; 62
    172c:	14 2f       	mov	r17, r20

	uint8_t i, twiaddr;
	char strbuf[33];
	const char blanks[] = "                ";
    172e:	91 e1       	ldi	r25, 0x11	; 17
    1730:	e2 ec       	ldi	r30, 0xC2	; 194
    1732:	f5 e7       	ldi	r31, 0x75	; 117
    1734:	de 01       	movw	r26, r28
    1736:	92 96       	adiw	r26, 0x22	; 34
    1738:	01 90       	ld	r0, Z+
    173a:	0d 92       	st	X+, r0
    173c:	9a 95       	dec	r25
    173e:	e1 f7       	brne	.-8      	; 0x1738 <writestr_OLED+0x24>

	if (displaynumber == 0) {
    1740:	88 23       	and	r24, r24
    1742:	29 f0       	breq	.+10     	; 0x174e <writestr_OLED+0x3a>
		twiaddr = OLEDADDR0;
	} else {
		twiaddr = OLEDADDR1;
    1744:	0f 2e       	mov	r0, r31
    1746:	fa e7       	ldi	r31, 0x7A	; 122
    1748:	ff 2e       	mov	r15, r31
    174a:	f0 2d       	mov	r31, r0
    174c:	04 c0       	rjmp	.+8      	; 0x1756 <writestr_OLED+0x42>
	uint8_t i, twiaddr;
	char strbuf[33];
	const char blanks[] = "                ";

	if (displaynumber == 0) {
		twiaddr = OLEDADDR0;
    174e:	0f 2e       	mov	r0, r31
    1750:	f8 e7       	ldi	r31, 0x78	; 120
    1752:	ff 2e       	mov	r15, r31
    1754:	f0 2d       	mov	r31, r0
	} else {
		twiaddr = OLEDADDR1;
	}

	strcpy(strbuf, str);
    1756:	ce 01       	movw	r24, r28
    1758:	01 96       	adiw	r24, 0x01	; 1
    175a:	0e 94 ac 19 	call	0x3358	; 0x3358 <strcpy>
	strcat(strbuf, blanks);		// pad with blanks
    175e:	be 01       	movw	r22, r28
    1760:	6e 5d       	subi	r22, 0xDE	; 222
    1762:	7f 4f       	sbci	r23, 0xFF	; 255
    1764:	ce 01       	movw	r24, r28
    1766:	01 96       	adiw	r24, 0x01	; 1
    1768:	0e 94 a1 19 	call	0x3342	; 0x3342 <strcat>

	if (lineno == 1) {
    176c:	11 30       	cpi	r17, 0x01	; 1
    176e:	31 f4       	brne	.+12     	; 0x177c <writestr_OLED+0x68>
		write_OLED(twiaddr, OLEDCMD, OLEDLINE1);
    1770:	40 e8       	ldi	r20, 0x80	; 128
    1772:	60 e0       	ldi	r22, 0x00	; 0
    1774:	8f 2d       	mov	r24, r15
    1776:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    177a:	11 c0       	rjmp	.+34     	; 0x179e <writestr_OLED+0x8a>

	} else {
		write_OLED(twiaddr, OLEDCMD, OLEDLINE2);
    177c:	40 ec       	ldi	r20, 0xC0	; 192
    177e:	60 e0       	ldi	r22, 0x00	; 0
    1780:	8f 2d       	mov	r24, r15
    1782:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>
    1786:	0b c0       	rjmp	.+22     	; 0x179e <writestr_OLED+0x8a>
	}

	for (i = 0; i < 16; i++) {
		write_OLED(twiaddr, OLEDDATA, strbuf[i]);
    1788:	f8 01       	movw	r30, r16
    178a:	41 91       	ld	r20, Z+
    178c:	8f 01       	movw	r16, r30
    178e:	60 e4       	ldi	r22, 0x40	; 64
    1790:	8f 2d       	mov	r24, r15
    1792:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_OLED>

	} else {
		write_OLED(twiaddr, OLEDCMD, OLEDLINE2);
	}

	for (i = 0; i < 16; i++) {
    1796:	0c 15       	cp	r16, r12
    1798:	1d 05       	cpc	r17, r13
    179a:	b1 f7       	brne	.-20     	; 0x1788 <writestr_OLED+0x74>
    179c:	08 c0       	rjmp	.+16     	; 0x17ae <writestr_OLED+0x9a>
    179e:	8e 01       	movw	r16, r28
    17a0:	0f 5f       	subi	r16, 0xFF	; 255
    17a2:	1f 4f       	sbci	r17, 0xFF	; 255
    17a4:	6e 01       	movw	r12, r28
    17a6:	f1 e1       	ldi	r31, 0x11	; 17
    17a8:	cf 0e       	add	r12, r31
    17aa:	d1 1c       	adc	r13, r1
    17ac:	ed cf       	rjmp	.-38     	; 0x1788 <writestr_OLED+0x74>
		write_OLED(twiaddr, OLEDDATA, strbuf[i]);
	}

}
    17ae:	e2 96       	adiw	r28, 0x32	; 50
    17b0:	cd bf       	out	0x3d, r28	; 61
    17b2:	de bf       	out	0x3e, r29	; 62
    17b4:	df 91       	pop	r29
    17b6:	cf 91       	pop	r28
    17b8:	1f 91       	pop	r17
    17ba:	0f 91       	pop	r16
    17bc:	ff 90       	pop	r15
    17be:	df 90       	pop	r13
    17c0:	cf 90       	pop	r12
    17c2:	08 95       	ret

000017c4 <clear_OLED>:
/*------------------------------------------------------------------------------
void clear_OLED(uint8_t displaynumber)
	Clears the OLED screen by writing blank spaces to both lines.
------------------------------------------------------------------------------*/
void clear_OLED(uint8_t displaynumber)
{
    17c4:	1f 93       	push	r17
    17c6:	cf 93       	push	r28
    17c8:	df 93       	push	r29
    17ca:	cd b7       	in	r28, 0x3d	; 61
    17cc:	de b7       	in	r29, 0x3e	; 62
    17ce:	61 97       	sbiw	r28, 0x11	; 17
    17d0:	cd bf       	out	0x3d, r28	; 61
    17d2:	de bf       	out	0x3e, r29	; 62
    17d4:	18 2f       	mov	r17, r24

	char blanks[] = "                ";	// Does const put this in flash?
    17d6:	81 e1       	ldi	r24, 0x11	; 17
    17d8:	e2 ec       	ldi	r30, 0xC2	; 194
    17da:	f5 e7       	ldi	r31, 0x75	; 117
    17dc:	de 01       	movw	r26, r28
    17de:	11 96       	adiw	r26, 0x01	; 1
    17e0:	01 90       	ld	r0, Z+
    17e2:	0d 92       	st	X+, r0
    17e4:	8a 95       	dec	r24
    17e6:	e1 f7       	brne	.-8      	; 0x17e0 <clear_OLED+0x1c>

	writestr_OLED(displaynumber, blanks, 1);
    17e8:	41 e0       	ldi	r20, 0x01	; 1
    17ea:	be 01       	movw	r22, r28
    17ec:	6f 5f       	subi	r22, 0xFF	; 255
    17ee:	7f 4f       	sbci	r23, 0xFF	; 255
    17f0:	81 2f       	mov	r24, r17
    17f2:	0e 94 8a 0b 	call	0x1714	; 0x1714 <writestr_OLED>
	writestr_OLED(displaynumber, blanks, 2);
    17f6:	42 e0       	ldi	r20, 0x02	; 2
    17f8:	be 01       	movw	r22, r28
    17fa:	6f 5f       	subi	r22, 0xFF	; 255
    17fc:	7f 4f       	sbci	r23, 0xFF	; 255
    17fe:	81 2f       	mov	r24, r17
    1800:	0e 94 8a 0b 	call	0x1714	; 0x1714 <writestr_OLED>

}
    1804:	61 96       	adiw	r28, 0x11	; 17
    1806:	cd bf       	out	0x3d, r28	; 61
    1808:	de bf       	out	0x3e, r29	; 62
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	1f 91       	pop	r17
    1810:	08 95       	ret

00001812 <get_BOOTTIME>:
void update_VERSION(void);

void get_BOOTTIME(char *boottime)
{

	eeprom_read_block((void *)boottime, (const void *)BOOTTIMEADDR, BOOTTIMESIZE);
    1812:	45 e1       	ldi	r20, 0x15	; 21
    1814:	50 e0       	ldi	r21, 0x00	; 0
    1816:	6b e0       	ldi	r22, 0x0B	; 11
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <eeprom_read_block>
    181e:	08 95       	ret

00001820 <get_VERSION>:
}

void get_VERSION(char *version)
{

	eeprom_read_block((void *)version, (const void *)VERSIONADDR, VERSIONSIZE);
    1820:	4b e0       	ldi	r20, 0x0B	; 11
    1822:	50 e0       	ldi	r21, 0x00	; 0
    1824:	60 e0       	ldi	r22, 0x00	; 0
    1826:	70 e0       	ldi	r23, 0x00	; 0
    1828:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <eeprom_read_block>
    182c:	08 95       	ret

0000182e <update_BOOTTIME>:
	update_VERSION();

}

void update_BOOTTIME(void)
{
    182e:	cf 93       	push	r28
    1830:	df 93       	push	r29
    1832:	cd b7       	in	r28, 0x3d	; 61
    1834:	de b7       	in	r29, 0x3e	; 62
    1836:	65 97       	sbiw	r28, 0x15	; 21
    1838:	cd bf       	out	0x3d, r28	; 61
    183a:	de bf       	out	0x3e, r29	; 62

	char boottime[21];

	get_time(boottime);
    183c:	ce 01       	movw	r24, r28
    183e:	01 96       	adiw	r24, 0x01	; 1
    1840:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
	eeprom_update_block((const void *)boottime, (void *)BOOTTIMEADDR, BOOTTIMESIZE);
    1844:	45 e1       	ldi	r20, 0x15	; 21
    1846:	50 e0       	ldi	r21, 0x00	; 0
    1848:	6b e0       	ldi	r22, 0x0B	; 11
    184a:	70 e0       	ldi	r23, 0x00	; 0
    184c:	ce 01       	movw	r24, r28
    184e:	01 96       	adiw	r24, 0x01	; 1
    1850:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <eeprom_update_block>

}
    1854:	65 96       	adiw	r28, 0x15	; 21
    1856:	cd bf       	out	0x3d, r28	; 61
    1858:	de bf       	out	0x3e, r29	; 62
    185a:	df 91       	pop	r29
    185c:	cf 91       	pop	r28
    185e:	08 95       	ret

00001860 <update_VERSION>:

void update_VERSION(void)
{
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	cd b7       	in	r28, 0x3d	; 61
    1866:	de b7       	in	r29, 0x3e	; 62
    1868:	2b 97       	sbiw	r28, 0x0b	; 11
    186a:	cd bf       	out	0x3d, r28	; 61
    186c:	de bf       	out	0x3e, r29	; 62

	char version[11];

	strcpy(version, VERSION);
    186e:	8b e0       	ldi	r24, 0x0B	; 11
    1870:	e3 ed       	ldi	r30, 0xD3	; 211
    1872:	f5 e7       	ldi	r31, 0x75	; 117
    1874:	de 01       	movw	r26, r28
    1876:	11 96       	adiw	r26, 0x01	; 1
    1878:	01 90       	ld	r0, Z+
    187a:	0d 92       	st	X+, r0
    187c:	8a 95       	dec	r24
    187e:	e1 f7       	brne	.-8      	; 0x1878 <update_VERSION+0x18>
	eeprom_update_block((const void *)version, (void *)VERSIONADDR, VERSIONSIZE);
    1880:	4b e0       	ldi	r20, 0x0B	; 11
    1882:	50 e0       	ldi	r21, 0x00	; 0
    1884:	60 e0       	ldi	r22, 0x00	; 0
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	ce 01       	movw	r24, r28
    188a:	01 96       	adiw	r24, 0x01	; 1
    188c:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <eeprom_update_block>

}
    1890:	2b 96       	adiw	r28, 0x0b	; 11
    1892:	cd bf       	out	0x3d, r28	; 61
    1894:	de bf       	out	0x3e, r29	; 62
    1896:	df 91       	pop	r29
    1898:	cf 91       	pop	r28
    189a:	08 95       	ret

0000189c <init_EEPROM>:
}

void init_EEPROM(void)
{

	update_BOOTTIME();
    189c:	0e 94 17 0c 	call	0x182e	; 0x182e <update_BOOTTIME>
	update_VERSION();
    18a0:	0e 94 30 0c 	call	0x1860	; 0x1860 <update_VERSION>
    18a4:	08 95       	ret

000018a6 <reboot>:
void reboot(void);

void reboot(void)
{

	CPU_CCP = CCP_IOREG_gc;
    18a6:	88 ed       	ldi	r24, 0xD8	; 216
    18a8:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = WDT_PERIOD_8CLK_gc;
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f4100>
    18b0:	08 95       	ret

000018b2 <__vector_29>:

/*----------------------------------------------------------------------
	Curiosity Nano on-board pushbutton reboots the system
----------------------------------------------------------------------*/
ISR(PORTF_PORT_vect)
{
    18b2:	1f 92       	push	r1
    18b4:	0f 92       	push	r0
    18b6:	0f b6       	in	r0, 0x3f	; 63
    18b8:	0f 92       	push	r0
    18ba:	11 24       	eor	r1, r1
    18bc:	2f 93       	push	r18
    18be:	3f 93       	push	r19
    18c0:	4f 93       	push	r20
    18c2:	5f 93       	push	r21
    18c4:	6f 93       	push	r22
    18c6:	7f 93       	push	r23
    18c8:	8f 93       	push	r24
    18ca:	9f 93       	push	r25
    18cc:	af 93       	push	r26
    18ce:	bf 93       	push	r27
    18d0:	ef 93       	push	r30
    18d2:	ff 93       	push	r31

	if (PORTF.INTFLAGS & PIN6_bm) {		// Curiosity Nano button
    18d4:	80 91 a9 04 	lds	r24, 0x04A9	; 0x8004a9 <__TEXT_REGION_LENGTH__+0x7f44a9>
    18d8:	86 ff       	sbrs	r24, 6
    18da:	05 c0       	rjmp	.+10     	; 0x18e6 <__vector_29+0x34>
		PORTF.INTFLAGS = PIN6_bm;		// Clear the interrupt flag
    18dc:	80 e4       	ldi	r24, 0x40	; 64
    18de:	80 93 a9 04 	sts	0x04A9, r24	; 0x8004a9 <__TEXT_REGION_LENGTH__+0x7f44a9>
		reboot();
    18e2:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <reboot>
	}

}
    18e6:	ff 91       	pop	r31
    18e8:	ef 91       	pop	r30
    18ea:	bf 91       	pop	r27
    18ec:	af 91       	pop	r26
    18ee:	9f 91       	pop	r25
    18f0:	8f 91       	pop	r24
    18f2:	7f 91       	pop	r23
    18f4:	6f 91       	pop	r22
    18f6:	5f 91       	pop	r21
    18f8:	4f 91       	pop	r20
    18fa:	3f 91       	pop	r19
    18fc:	2f 91       	pop	r18
    18fe:	0f 90       	pop	r0
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	0f 90       	pop	r0
    1904:	1f 90       	pop	r1
    1906:	18 95       	reti

00001908 <echo_cmd>:
/*------------------------------------------------------------------------------
void echo_cmd(char *cmdline)
	Echo the command line back to the user, adding the NMEA header and checksum.
------------------------------------------------------------------------------*/
void echo_cmd(char *cmdline)
{
    1908:	ef 92       	push	r14
    190a:	ff 92       	push	r15
    190c:	0f 93       	push	r16
    190e:	1f 93       	push	r17
    1910:	cf 93       	push	r28
    1912:	df 93       	push	r29
    1914:	cd b7       	in	r28, 0x3d	; 61
    1916:	de b7       	in	r29, 0x3e	; 62
    1918:	c5 59       	subi	r28, 0x95	; 149
    191a:	d1 09       	sbc	r29, r1
    191c:	cd bf       	out	0x3d, r28	; 61
    191e:	de bf       	out	0x3e, r29	; 62
    1920:	e8 2e       	mov	r14, r24
    1922:	f9 2e       	mov	r15, r25

	char format_CMD[] = "$S%dCMD,%s";
    1924:	8b e0       	ldi	r24, 0x0B	; 11
    1926:	ee ed       	ldi	r30, 0xDE	; 222
    1928:	f5 e7       	ldi	r31, 0x75	; 117
    192a:	8e 01       	movw	r16, r28
    192c:	0f 5f       	subi	r16, 0xFF	; 255
    192e:	1f 4f       	sbci	r17, 0xFF	; 255
    1930:	d8 01       	movw	r26, r16
    1932:	01 90       	ld	r0, Z+
    1934:	0d 92       	st	X+, r0
    1936:	8a 95       	dec	r24
    1938:	e1 f7       	brne	.-8      	; 0x1932 <echo_cmd+0x2a>
	char strbuf[BUFSIZE+10];		// Add $SXCMD, and *HH checksum

		// Format and echo the command line
	sprintf(strbuf, format_CMD, get_specID(), cmdline);
    193a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    193e:	ff 92       	push	r15
    1940:	ef 92       	push	r14
    1942:	1f 92       	push	r1
    1944:	8f 93       	push	r24
    1946:	1f 93       	push	r17
    1948:	0f 93       	push	r16
    194a:	05 5f       	subi	r16, 0xF5	; 245
    194c:	1f 4f       	sbci	r17, 0xFF	; 255
    194e:	1f 93       	push	r17
    1950:	0f 93       	push	r16
    1952:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
	checksum_NMEA(strbuf);
    1956:	c8 01       	movw	r24, r16
    1958:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
	send_USART(0, (uint8_t*) strbuf, strlen(strbuf));
    195c:	f8 01       	movw	r30, r16
    195e:	01 90       	ld	r0, Z+
    1960:	00 20       	and	r0, r0
    1962:	e9 f7       	brne	.-6      	; 0x195e <echo_cmd+0x56>
    1964:	31 97       	sbiw	r30, 0x01	; 1
    1966:	af 01       	movw	r20, r30
    1968:	40 1b       	sub	r20, r16
    196a:	51 0b       	sbc	r21, r17
    196c:	b8 01       	movw	r22, r16
    196e:	80 e0       	ldi	r24, 0x00	; 0
    1970:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>

		// Put it on the display
	clear_OLED(1);
    1974:	81 e0       	ldi	r24, 0x01	; 1
    1976:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <clear_OLED>
	on_OLED(1);
    197a:	81 e0       	ldi	r24, 0x01	; 1
    197c:	0e 94 80 0b 	call	0x1700	; 0x1700 <on_OLED>
	writestr_OLED(1, cmdline, 1);
    1980:	41 e0       	ldi	r20, 0x01	; 1
    1982:	6e 2d       	mov	r22, r14
    1984:	7f 2d       	mov	r23, r15
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	0e 94 8a 0b 	call	0x1714	; 0x1714 <writestr_OLED>

}
    198c:	cd bf       	out	0x3d, r28	; 61
    198e:	de bf       	out	0x3e, r29	; 62
    1990:	cb 56       	subi	r28, 0x6B	; 107
    1992:	df 4f       	sbci	r29, 0xFF	; 255
    1994:	cd bf       	out	0x3d, r28	; 61
    1996:	de bf       	out	0x3e, r29	; 62
    1998:	df 91       	pop	r29
    199a:	cf 91       	pop	r28
    199c:	1f 91       	pop	r17
    199e:	0f 91       	pop	r16
    19a0:	ff 90       	pop	r15
    19a2:	ef 90       	pop	r14
    19a4:	08 95       	ret

000019a6 <isaletter>:
/*------------------------------------------------------------------------------
uint8_t isaletter(char c)
	Checks if the character is in the range A-Z and a-z
------------------------------------------------------------------------------*/
uint8_t isaletter(char c)
{
    19a6:	8f 7d       	andi	r24, 0xDF	; 223
    19a8:	9f eb       	ldi	r25, 0xBF	; 191
    19aa:	98 0f       	add	r25, r24
    19ac:	81 e0       	ldi	r24, 0x01	; 1
    19ae:	9a 31       	cpi	r25, 0x1A	; 26
    19b0:	08 f0       	brcs	.+2      	; 0x19b4 <isaletter+0xe>
    19b2:	80 e0       	ldi	r24, 0x00	; 0
		return(1);
	}

	return(0);

}
    19b4:	08 95       	ret

000019b6 <parse_cmd>:
		ID - An identifier selected by the user, a character string.
	These components are in the ParsedCMD structure defined in main.c. The pcmd
	variable is a ParsedCMD array.
------------------------------------------------------------------------------*/
void parse_cmd(char *ptr, uint8_t n)
{
    19b6:	cf 92       	push	r12
    19b8:	df 92       	push	r13
    19ba:	ef 92       	push	r14
    19bc:	ff 92       	push	r15
    19be:	0f 93       	push	r16
    19c0:	1f 93       	push	r17
    19c2:	cf 93       	push	r28
    19c4:	df 93       	push	r29
    19c6:	06 2f       	mov	r16, r22

	uint8_t i;

		// Clear the command parts
	pcmd[n].cverb = '?';
    19c8:	c6 2e       	mov	r12, r22
    19ca:	d1 2c       	mov	r13, r1
    19cc:	24 e3       	ldi	r18, 0x34	; 52
    19ce:	62 9f       	mul	r22, r18
    19d0:	f0 01       	movw	r30, r0
    19d2:	11 24       	eor	r1, r1
    19d4:	ed 5f       	subi	r30, 0xFD	; 253
    19d6:	f7 4d       	sbci	r31, 0xD7	; 215
    19d8:	2f e3       	ldi	r18, 0x3F	; 63
    19da:	20 83       	st	Z, r18
	pcmd[n].cobject = '?';
    19dc:	21 83       	std	Z+1, r18	; 0x01
	pcmd[n].cvalue[0] = '\0';
    19de:	12 82       	std	Z+2, r1	; 0x02
	pcmd[n].cid[0] = '\0';
    19e0:	13 a6       	std	Z+43, r1	; 0x2b
    19e2:	ec 01       	movw	r28, r24

		// Find the verb
	while (!isaletter(*ptr)) {
    19e4:	03 c0       	rjmp	.+6      	; 0x19ec <parse_cmd+0x36>
		if (*ptr == '\0') {
    19e6:	11 23       	and	r17, r17
    19e8:	09 f4       	brne	.+2      	; 0x19ec <parse_cmd+0x36>
    19ea:	94 c0       	rjmp	.+296    	; 0x1b14 <parse_cmd+0x15e>
    19ec:	7e 01       	movw	r14, r28
	pcmd[n].cobject = '?';
	pcmd[n].cvalue[0] = '\0';
	pcmd[n].cid[0] = '\0';

		// Find the verb
	while (!isaletter(*ptr)) {
    19ee:	19 91       	ld	r17, Y+
    19f0:	81 2f       	mov	r24, r17
    19f2:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <isaletter>
    19f6:	88 23       	and	r24, r24
    19f8:	b1 f3       	breq	.-20     	; 0x19e6 <parse_cmd+0x30>
		if (*ptr == '\0') {
			return;
		}
		ptr++;
	}
	pcmd[n].cverb = *ptr++;
    19fa:	84 e3       	ldi	r24, 0x34	; 52
    19fc:	8c 9d       	mul	r24, r12
    19fe:	f0 01       	movw	r30, r0
    1a00:	8d 9d       	mul	r24, r13
    1a02:	f0 0d       	add	r31, r0
    1a04:	11 24       	eor	r1, r1
    1a06:	ed 5f       	subi	r30, 0xFD	; 253
    1a08:	f7 4d       	sbci	r31, 0xD7	; 215
    1a0a:	10 83       	st	Z, r17
    1a0c:	e7 01       	movw	r28, r14
    1a0e:	21 96       	adiw	r28, 0x01	; 1

		// Find the object
	while (!isaletter(*ptr)) {
    1a10:	03 c0       	rjmp	.+6      	; 0x1a18 <parse_cmd+0x62>
		if (*ptr == '\0') {
    1a12:	11 23       	and	r17, r17
    1a14:	09 f4       	brne	.+2      	; 0x1a18 <parse_cmd+0x62>
    1a16:	7e c0       	rjmp	.+252    	; 0x1b14 <parse_cmd+0x15e>
    1a18:	7e 01       	movw	r14, r28
		ptr++;
	}
	pcmd[n].cverb = *ptr++;

		// Find the object
	while (!isaletter(*ptr)) {
    1a1a:	19 91       	ld	r17, Y+
    1a1c:	81 2f       	mov	r24, r17
    1a1e:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <isaletter>
    1a22:	88 23       	and	r24, r24
    1a24:	b1 f3       	breq	.-20     	; 0x1a12 <parse_cmd+0x5c>
		if (*ptr == '\0') {
			return;
		}
		ptr++;
	}
	pcmd[n].cobject = *ptr++;
    1a26:	84 e3       	ldi	r24, 0x34	; 52
    1a28:	8c 9d       	mul	r24, r12
    1a2a:	f0 01       	movw	r30, r0
    1a2c:	8d 9d       	mul	r24, r13
    1a2e:	f0 0d       	add	r31, r0
    1a30:	11 24       	eor	r1, r1
    1a32:	ed 5f       	subi	r30, 0xFD	; 253
    1a34:	f7 4d       	sbci	r31, 0xD7	; 215
    1a36:	11 83       	std	Z+1, r17	; 0x01

		// Get the value, if there is one
	for (i = 0; i < CVALUESIZE; i++) {
		if (*ptr == '\0') {
    1a38:	f7 01       	movw	r30, r14
    1a3a:	81 81       	ldd	r24, Z+1	; 0x01
    1a3c:	88 23       	and	r24, r24
    1a3e:	59 f0       	breq	.+22     	; 0x1a56 <parse_cmd+0xa0>
			pcmd[n].cvalue[i] = '\0';
			return;
		}
		if (*ptr == ';') {
    1a40:	8b 33       	cpi	r24, 0x3B	; 59
    1a42:	09 f0       	breq	.+2      	; 0x1a46 <parse_cmd+0x90>
    1a44:	55 c0       	rjmp	.+170    	; 0x1af0 <parse_cmd+0x13a>
		if (*ptr == '\0') {
			return;
		}
		ptr++;
	}
	pcmd[n].cobject = *ptr++;
    1a46:	de 01       	movw	r26, r28

		// Get the value, if there is one
	for (i = 0; i < CVALUESIZE; i++) {
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	14 c0       	rjmp	.+40     	; 0x1a74 <parse_cmd+0xbe>
    1a4c:	df 01       	movw	r26, r30
		if (*ptr == '\0') {
    1a4e:	81 91       	ld	r24, Z+
    1a50:	81 11       	cpse	r24, r1
    1a52:	0e c0       	rjmp	.+28     	; 0x1a70 <parse_cmd+0xba>
    1a54:	01 c0       	rjmp	.+2      	; 0x1a58 <parse_cmd+0xa2>
		ptr++;
	}
	pcmd[n].cobject = *ptr++;

		// Get the value, if there is one
	for (i = 0; i < CVALUESIZE; i++) {
    1a56:	90 e0       	ldi	r25, 0x00	; 0
		if (*ptr == '\0') {
			pcmd[n].cvalue[i] = '\0';
    1a58:	84 e3       	ldi	r24, 0x34	; 52
    1a5a:	8c 9d       	mul	r24, r12
    1a5c:	f0 01       	movw	r30, r0
    1a5e:	8d 9d       	mul	r24, r13
    1a60:	f0 0d       	add	r31, r0
    1a62:	11 24       	eor	r1, r1
    1a64:	ed 5f       	subi	r30, 0xFD	; 253
    1a66:	f7 4d       	sbci	r31, 0xD7	; 215
    1a68:	e9 0f       	add	r30, r25
    1a6a:	f1 1d       	adc	r31, r1
    1a6c:	12 82       	std	Z+2, r1	; 0x02
			return;
    1a6e:	52 c0       	rjmp	.+164    	; 0x1b14 <parse_cmd+0x15e>
		}
		if (*ptr == ';') {
    1a70:	8b 33       	cpi	r24, 0x3B	; 59
    1a72:	61 f4       	brne	.+24     	; 0x1a8c <parse_cmd+0xd6>
			pcmd[n].cvalue[i] = '\0';
    1a74:	84 e3       	ldi	r24, 0x34	; 52
    1a76:	8c 9d       	mul	r24, r12
    1a78:	f0 01       	movw	r30, r0
    1a7a:	8d 9d       	mul	r24, r13
    1a7c:	f0 0d       	add	r31, r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	ed 5f       	subi	r30, 0xFD	; 253
    1a82:	f7 4d       	sbci	r31, 0xD7	; 215
    1a84:	e9 0f       	add	r30, r25
    1a86:	f1 1d       	adc	r31, r1
    1a88:	12 82       	std	Z+2, r1	; 0x02
			break;
    1a8a:	05 c0       	rjmp	.+10     	; 0x1a96 <parse_cmd+0xe0>
		}
		pcmd[n].cvalue[i] = *ptr++;
    1a8c:	df 01       	movw	r26, r30
    1a8e:	89 93       	st	Y+, r24
		ptr++;
	}
	pcmd[n].cobject = *ptr++;

		// Get the value, if there is one
	for (i = 0; i < CVALUESIZE; i++) {
    1a90:	9f 5f       	subi	r25, 0xFF	; 255
    1a92:	99 32       	cpi	r25, 0x29	; 41
    1a94:	d9 f6       	brne	.-74     	; 0x1a4c <parse_cmd+0x96>
	}

		// get the command ID if there is one
	ptr++;
	for (i = 0; i < CIDSIZE; i++) {
		if (*ptr == '\0') {
    1a96:	11 96       	adiw	r26, 0x01	; 1
    1a98:	8c 91       	ld	r24, X
    1a9a:	11 97       	sbiw	r26, 0x01	; 1
    1a9c:	81 11       	cpse	r24, r1
    1a9e:	17 c0       	rjmp	.+46     	; 0x1ace <parse_cmd+0x118>
    1aa0:	04 c0       	rjmp	.+8      	; 0x1aaa <parse_cmd+0xf4>
    1aa2:	9d 91       	ld	r25, X+
    1aa4:	91 11       	cpse	r25, r1
    1aa6:	0e c0       	rjmp	.+28     	; 0x1ac4 <parse_cmd+0x10e>
    1aa8:	01 c0       	rjmp	.+2      	; 0x1aac <parse_cmd+0xf6>
		pcmd[n].cvalue[i] = *ptr++;
	}

		// get the command ID if there is one
	ptr++;
	for (i = 0; i < CIDSIZE; i++) {
    1aaa:	80 e0       	ldi	r24, 0x00	; 0
		if (*ptr == '\0') {
			pcmd[n].cid[i] = '\0';
    1aac:	94 e3       	ldi	r25, 0x34	; 52
    1aae:	9c 9d       	mul	r25, r12
    1ab0:	f0 01       	movw	r30, r0
    1ab2:	9d 9d       	mul	r25, r13
    1ab4:	f0 0d       	add	r31, r0
    1ab6:	11 24       	eor	r1, r1
    1ab8:	ed 5f       	subi	r30, 0xFD	; 253
    1aba:	f7 4d       	sbci	r31, 0xD7	; 215
    1abc:	e8 0f       	add	r30, r24
    1abe:	f1 1d       	adc	r31, r1
    1ac0:	13 a6       	std	Z+43, r1	; 0x2b
			return;
    1ac2:	28 c0       	rjmp	.+80     	; 0x1b14 <parse_cmd+0x15e>
		}
		pcmd[n].cid[i] = *ptr++;
    1ac4:	91 93       	st	Z+, r25
		pcmd[n].cvalue[i] = *ptr++;
	}

		// get the command ID if there is one
	ptr++;
	for (i = 0; i < CIDSIZE; i++) {
    1ac6:	8f 5f       	subi	r24, 0xFF	; 255
    1ac8:	89 30       	cpi	r24, 0x09	; 9
    1aca:	59 f7       	brne	.-42     	; 0x1aa2 <parse_cmd+0xec>
    1acc:	23 c0       	rjmp	.+70     	; 0x1b14 <parse_cmd+0x15e>
		if (*ptr == '\0') {
			pcmd[n].cid[i] = '\0';
			return;
		}
		pcmd[n].cid[i] = *ptr++;
    1ace:	e4 e3       	ldi	r30, 0x34	; 52
    1ad0:	ec 9d       	mul	r30, r12
    1ad2:	e0 01       	movw	r28, r0
    1ad4:	ed 9d       	mul	r30, r13
    1ad6:	d0 0d       	add	r29, r0
    1ad8:	11 24       	eor	r1, r1
    1ada:	cd 5f       	subi	r28, 0xFD	; 253
    1adc:	d7 4d       	sbci	r29, 0xD7	; 215
    1ade:	8b a7       	std	Y+43, r24	; 0x2b
    1ae0:	12 96       	adiw	r26, 0x02	; 2
    1ae2:	e0 9f       	mul	r30, r16
    1ae4:	f0 01       	movw	r30, r0
    1ae6:	11 24       	eor	r1, r1
    1ae8:	e1 5d       	subi	r30, 0xD1	; 209
    1aea:	f7 4d       	sbci	r31, 0xD7	; 215
		pcmd[n].cvalue[i] = *ptr++;
	}

		// get the command ID if there is one
	ptr++;
	for (i = 0; i < CIDSIZE; i++) {
    1aec:	81 e0       	ldi	r24, 0x01	; 1
    1aee:	d9 cf       	rjmp	.-78     	; 0x1aa2 <parse_cmd+0xec>
		}
		if (*ptr == ';') {
			pcmd[n].cvalue[i] = '\0';
			break;
		}
		pcmd[n].cvalue[i] = *ptr++;
    1af0:	c4 e3       	ldi	r28, 0x34	; 52
    1af2:	cc 9d       	mul	r28, r12
    1af4:	f0 01       	movw	r30, r0
    1af6:	cd 9d       	mul	r28, r13
    1af8:	f0 0d       	add	r31, r0
    1afa:	11 24       	eor	r1, r1
    1afc:	ed 5f       	subi	r30, 0xFD	; 253
    1afe:	f7 4d       	sbci	r31, 0xD7	; 215
    1b00:	82 83       	std	Z+2, r24	; 0x02
    1b02:	f7 01       	movw	r30, r14
    1b04:	32 96       	adiw	r30, 0x02	; 2
    1b06:	c0 9f       	mul	r28, r16
    1b08:	e0 01       	movw	r28, r0
    1b0a:	11 24       	eor	r1, r1
    1b0c:	ca 5f       	subi	r28, 0xFA	; 250
    1b0e:	d7 4d       	sbci	r29, 0xD7	; 215
		ptr++;
	}
	pcmd[n].cobject = *ptr++;

		// Get the value, if there is one
	for (i = 0; i < CVALUESIZE; i++) {
    1b10:	91 e0       	ldi	r25, 0x01	; 1
    1b12:	9c cf       	rjmp	.-200    	; 0x1a4c <parse_cmd+0x96>
		pcmd[n].cid[i] = *ptr++;
	}	

	return;

}
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	1f 91       	pop	r17
    1b1a:	0f 91       	pop	r16
    1b1c:	ff 90       	pop	r15
    1b1e:	ef 90       	pop	r14
    1b20:	df 90       	pop	r13
    1b22:	cf 90       	pop	r12
    1b24:	08 95       	ret

00001b26 <report>:
	Returns
		0 - GREATERPROMPT on success
		1 - ERRORPROMPT on error (invalid command noun)
------------------------------------------------------------------------------*/
uint8_t report(uint8_t cstack)
{
    1b26:	2f 92       	push	r2
    1b28:	3f 92       	push	r3
    1b2a:	4f 92       	push	r4
    1b2c:	5f 92       	push	r5
    1b2e:	6f 92       	push	r6
    1b30:	7f 92       	push	r7
    1b32:	8f 92       	push	r8
    1b34:	9f 92       	push	r9
    1b36:	af 92       	push	r10
    1b38:	bf 92       	push	r11
    1b3a:	cf 92       	push	r12
    1b3c:	df 92       	push	r13
    1b3e:	ef 92       	push	r14
    1b40:	ff 92       	push	r15
    1b42:	0f 93       	push	r16
    1b44:	1f 93       	push	r17
    1b46:	cf 93       	push	r28
    1b48:	df 93       	push	r29
    1b4a:	cd b7       	in	r28, 0x3d	; 61
    1b4c:	de b7       	in	r29, 0x3e	; 62
    1b4e:	c9 5e       	subi	r28, 0xE9	; 233
    1b50:	d1 40       	sbci	r29, 0x01	; 1
    1b52:	cd bf       	out	0x3d, r28	; 61
    1b54:	de bf       	out	0x3e, r29	; 62

	char outbuf[BUFSIZE+10], version[11];
	char currenttime[20], lastsettime[20], boottime[20];
	const char format_BTM[] = "$S%dBTM,%s,%s";
    1b56:	9e e0       	ldi	r25, 0x0E	; 14
    1b58:	e9 ee       	ldi	r30, 0xE9	; 233
    1b5a:	f5 e7       	ldi	r31, 0x75	; 117
    1b5c:	de 01       	movw	r26, r28
    1b5e:	ae 52       	subi	r26, 0x2E	; 46
    1b60:	bf 4f       	sbci	r27, 0xFF	; 255
    1b62:	01 90       	ld	r0, Z+
    1b64:	0d 92       	st	X+, r0
    1b66:	9a 95       	dec	r25
    1b68:	e1 f7       	brne	.-8      	; 0x1b62 <report+0x3c>
	const char format_ENV[] = "$S%dENV,%s,%3.1fC,%1.0f%%,%3.1fC,%1.0f%%,%3.1fC,%1.0f%%,%3.1fC,%s";
    1b6a:	92 e4       	ldi	r25, 0x42	; 66
    1b6c:	e7 ef       	ldi	r30, 0xF7	; 247
    1b6e:	f5 e7       	ldi	r31, 0x75	; 117
    1b70:	de 01       	movw	r26, r28
    1b72:	a0 52       	subi	r26, 0x20	; 32
    1b74:	bf 4f       	sbci	r27, 0xFF	; 255
    1b76:	01 90       	ld	r0, Z+
    1b78:	0d 92       	st	X+, r0
    1b7a:	9a 95       	dec	r25
    1b7c:	e1 f7       	brne	.-8      	; 0x1b76 <report+0x50>
	const char format_ORI[] = "$S%dORI,%s,%3.1f,%3.1f,%3.1f,%s";
    1b7e:	90 e2       	ldi	r25, 0x20	; 32
    1b80:	e9 e3       	ldi	r30, 0x39	; 57
    1b82:	f6 e7       	ldi	r31, 0x76	; 118
    1b84:	de 01       	movw	r26, r28
    1b86:	ae 5d       	subi	r26, 0xDE	; 222
    1b88:	be 4f       	sbci	r27, 0xFE	; 254
    1b8a:	01 90       	ld	r0, Z+
    1b8c:	0d 92       	st	X+, r0
    1b8e:	9a 95       	dec	r25
    1b90:	e1 f7       	brne	.-8      	; 0x1b8a <report+0x64>
	const char format_PNU[] = "$S%dPNU,%s,%c,shutter,%c,left,%c,right,%c,air,%s";
    1b92:	91 e3       	ldi	r25, 0x31	; 49
    1b94:	e9 e5       	ldi	r30, 0x59	; 89
    1b96:	f6 e7       	ldi	r31, 0x76	; 118
    1b98:	de 01       	movw	r26, r28
    1b9a:	ae 5b       	subi	r26, 0xBE	; 190
    1b9c:	be 4f       	sbci	r27, 0xFE	; 254
    1b9e:	01 90       	ld	r0, Z+
    1ba0:	0d 92       	st	X+, r0
    1ba2:	9a 95       	dec	r25
    1ba4:	e1 f7       	brne	.-8      	; 0x1b9e <report+0x78>
	const char format_TIM[] = "$S%dTIM,%s,%s,set,%s,boot,%s";
    1ba6:	9d e1       	ldi	r25, 0x1D	; 29
    1ba8:	ea e8       	ldi	r30, 0x8A	; 138
    1baa:	f6 e7       	ldi	r31, 0x76	; 118
    1bac:	de 01       	movw	r26, r28
    1bae:	ad 58       	subi	r26, 0x8D	; 141
    1bb0:	be 4f       	sbci	r27, 0xFE	; 254
    1bb2:	01 90       	ld	r0, Z+
    1bb4:	0d 92       	st	X+, r0
    1bb6:	9a 95       	dec	r25
    1bb8:	e1 f7       	brne	.-8      	; 0x1bb2 <report+0x8c>
	const char format_VAC[] = "$S%dVAC,%s,%5.2f,redvac,%5.2f,bluevac,%s";
    1bba:	99 e2       	ldi	r25, 0x29	; 41
    1bbc:	e7 ea       	ldi	r30, 0xA7	; 167
    1bbe:	f6 e7       	ldi	r31, 0x76	; 118
    1bc0:	de 01       	movw	r26, r28
    1bc2:	a0 57       	subi	r26, 0x70	; 112
    1bc4:	be 4f       	sbci	r27, 0xFE	; 254
    1bc6:	01 90       	ld	r0, Z+
    1bc8:	0d 92       	st	X+, r0
    1bca:	9a 95       	dec	r25
    1bcc:	e1 f7       	brne	.-8      	; 0x1bc6 <report+0xa0>
	const char format_VER[] = "$S%dVER,%s,%s,%s";
    1bce:	91 e1       	ldi	r25, 0x11	; 17
    1bd0:	e0 ed       	ldi	r30, 0xD0	; 208
    1bd2:	f6 e7       	ldi	r31, 0x76	; 118
    1bd4:	de 01       	movw	r26, r28
    1bd6:	a7 54       	subi	r26, 0x47	; 71
    1bd8:	be 4f       	sbci	r27, 0xFE	; 254
    1bda:	01 90       	ld	r0, Z+
    1bdc:	0d 92       	st	X+, r0
    1bde:	9a 95       	dec	r25
    1be0:	e1 f7       	brne	.-8      	; 0x1bda <report+0xb4>
	float t0, t1, t2, t3, h0, h1, h2;		// temperature and humidity
	float x, y, z;							// accelerometer
	float redvac, bluvac;					// red and blue vacuum
	char shutter, left, right, air;

	switch(pcmd[cstack].cobject) {
    1be2:	08 2f       	mov	r16, r24
    1be4:	10 e0       	ldi	r17, 0x00	; 0
    1be6:	94 e3       	ldi	r25, 0x34	; 52
    1be8:	89 9f       	mul	r24, r25
    1bea:	f0 01       	movw	r30, r0
    1bec:	11 24       	eor	r1, r1
    1bee:	ed 5f       	subi	r30, 0xFD	; 253
    1bf0:	f7 4d       	sbci	r31, 0xD7	; 215
    1bf2:	e1 81       	ldd	r30, Z+1	; 0x01
    1bf4:	8e 2f       	mov	r24, r30
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	fc 01       	movw	r30, r24
    1bfa:	e2 54       	subi	r30, 0x42	; 66
    1bfc:	f1 09       	sbc	r31, r1
    1bfe:	e5 33       	cpi	r30, 0x35	; 53
    1c00:	f1 05       	cpc	r31, r1
    1c02:	08 f0       	brcs	.+2      	; 0x1c06 <report+0xe0>
    1c04:	0d c3       	rjmp	.+1562   	; 0x2220 <report+0x6fa>
    1c06:	e0 5b       	subi	r30, 0xB0	; 176
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	0c 94 73 18 	jmp	0x30e6	; 0x30e6 <__tablejump2__>

		case 'B':					// Boot time
			get_BOOTTIME(boottime);
    1c0e:	7e 01       	movw	r14, r28
    1c10:	8e eb       	ldi	r24, 0xBE	; 190
    1c12:	e8 0e       	add	r14, r24
    1c14:	f1 1c       	adc	r15, r1
    1c16:	c7 01       	movw	r24, r14
    1c18:	0e 94 09 0c 	call	0x1812	; 0x1812 <get_BOOTTIME>
			sprintf(outbuf, format_BTM, get_specID(), boottime, pcmd[cstack].cid);
    1c1c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    1c20:	94 e3       	ldi	r25, 0x34	; 52
    1c22:	90 9f       	mul	r25, r16
    1c24:	90 01       	movw	r18, r0
    1c26:	91 9f       	mul	r25, r17
    1c28:	30 0d       	add	r19, r0
    1c2a:	11 24       	eor	r1, r1
    1c2c:	22 5d       	subi	r18, 0xD2	; 210
    1c2e:	37 4d       	sbci	r19, 0xD7	; 215
    1c30:	3f 93       	push	r19
    1c32:	2f 93       	push	r18
    1c34:	ff 92       	push	r15
    1c36:	ef 92       	push	r14
    1c38:	1f 92       	push	r1
    1c3a:	8f 93       	push	r24
    1c3c:	ce 01       	movw	r24, r28
    1c3e:	8e 52       	subi	r24, 0x2E	; 46
    1c40:	9f 4f       	sbci	r25, 0xFF	; 255
    1c42:	9f 93       	push	r25
    1c44:	8f 93       	push	r24
    1c46:	8e 01       	movw	r16, r28
    1c48:	0f 5f       	subi	r16, 0xFF	; 255
    1c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c4c:	1f 93       	push	r17
    1c4e:	0f 93       	push	r16
    1c50:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
			checksum_NMEA(outbuf);
    1c54:	c8 01       	movw	r24, r16
    1c56:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    1c5a:	f8 01       	movw	r30, r16
    1c5c:	01 90       	ld	r0, Z+
    1c5e:	00 20       	and	r0, r0
    1c60:	e9 f7       	brne	.-6      	; 0x1c5c <report+0x136>
    1c62:	31 97       	sbiw	r30, 0x01	; 1
    1c64:	af 01       	movw	r20, r30
    1c66:	40 1b       	sub	r20, r16
    1c68:	51 0b       	sbc	r21, r17
    1c6a:	b8 01       	movw	r22, r16
    1c6c:	80 e0       	ldi	r24, 0x00	; 0
    1c6e:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    1c72:	cd bf       	out	0x3d, r28	; 61
    1c74:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    1c76:	80 e0       	ldi	r24, 0x00	; 0
		case 'B':					// Boot time
			get_BOOTTIME(boottime);
			sprintf(outbuf, format_BTM, get_specID(), boottime, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    1c78:	d4 c2       	rjmp	.+1448   	; 0x2222 <report+0x6fc>

	switch (sensor) {
		case 0:
		case 1:
		case 2:
			temperature = read_AD590(sensor);
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
    1c80:	c2 52       	subi	r28, 0x22	; 34
    1c82:	de 4f       	sbci	r29, 0xFE	; 254
    1c84:	68 83       	st	Y, r22
    1c86:	ce 5d       	subi	r28, 0xDE	; 222
    1c88:	d1 40       	sbci	r29, 0x01	; 1
    1c8a:	c1 52       	subi	r28, 0x21	; 33
    1c8c:	de 4f       	sbci	r29, 0xFE	; 254
    1c8e:	78 83       	st	Y, r23
    1c90:	cf 5d       	subi	r28, 0xDF	; 223
    1c92:	d1 40       	sbci	r29, 0x01	; 1
    1c94:	c0 52       	subi	r28, 0x20	; 32
    1c96:	de 4f       	sbci	r29, 0xFE	; 254
    1c98:	88 83       	st	Y, r24
    1c9a:	c0 5e       	subi	r28, 0xE0	; 224
    1c9c:	d1 40       	sbci	r29, 0x01	; 1
    1c9e:	cf 51       	subi	r28, 0x1F	; 31
    1ca0:	de 4f       	sbci	r29, 0xFE	; 254
    1ca2:	98 83       	st	Y, r25
    1ca4:	c1 5e       	subi	r28, 0xE1	; 225
    1ca6:	d1 40       	sbci	r29, 0x01	; 1

		case 'e':					// Environment (temperature & humidity)
			t0 = get_temperature(0);
			h0 = get_humidity(0);
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	0e 94 da 04 	call	0x9b4	; 0x9b4 <get_humidity>
    1cae:	c6 52       	subi	r28, 0x26	; 38
    1cb0:	de 4f       	sbci	r29, 0xFE	; 254
    1cb2:	68 83       	st	Y, r22
    1cb4:	ca 5d       	subi	r28, 0xDA	; 218
    1cb6:	d1 40       	sbci	r29, 0x01	; 1
    1cb8:	c5 52       	subi	r28, 0x25	; 37
    1cba:	de 4f       	sbci	r29, 0xFE	; 254
    1cbc:	78 83       	st	Y, r23
    1cbe:	cb 5d       	subi	r28, 0xDB	; 219
    1cc0:	d1 40       	sbci	r29, 0x01	; 1
    1cc2:	c4 52       	subi	r28, 0x24	; 36
    1cc4:	de 4f       	sbci	r29, 0xFE	; 254
    1cc6:	88 83       	st	Y, r24
    1cc8:	cc 5d       	subi	r28, 0xDC	; 220
    1cca:	d1 40       	sbci	r29, 0x01	; 1
    1ccc:	c3 52       	subi	r28, 0x23	; 35
    1cce:	de 4f       	sbci	r29, 0xFE	; 254
    1cd0:	98 83       	st	Y, r25
    1cd2:	cd 5d       	subi	r28, 0xDD	; 221
    1cd4:	d1 40       	sbci	r29, 0x01	; 1
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
    1cdc:	cc 51       	subi	r28, 0x1C	; 28
    1cde:	de 4f       	sbci	r29, 0xFE	; 254
    1ce0:	68 83       	st	Y, r22
    1ce2:	c4 5e       	subi	r28, 0xE4	; 228
    1ce4:	d1 40       	sbci	r29, 0x01	; 1
    1ce6:	cb 51       	subi	r28, 0x1B	; 27
    1ce8:	de 4f       	sbci	r29, 0xFE	; 254
    1cea:	78 83       	st	Y, r23
    1cec:	c5 5e       	subi	r28, 0xE5	; 229
    1cee:	d1 40       	sbci	r29, 0x01	; 1
    1cf0:	ca 51       	subi	r28, 0x1A	; 26
    1cf2:	de 4f       	sbci	r29, 0xFE	; 254
    1cf4:	88 83       	st	Y, r24
    1cf6:	c6 5e       	subi	r28, 0xE6	; 230
    1cf8:	d1 40       	sbci	r29, 0x01	; 1
    1cfa:	c9 51       	subi	r28, 0x19	; 25
    1cfc:	de 4f       	sbci	r29, 0xFE	; 254
    1cfe:	98 83       	st	Y, r25
    1d00:	c7 5e       	subi	r28, 0xE7	; 231
    1d02:	d1 40       	sbci	r29, 0x01	; 1
			t1 = get_temperature(1);
			h1 = get_humidity(1);
    1d04:	81 e0       	ldi	r24, 0x01	; 1
    1d06:	0e 94 da 04 	call	0x9b4	; 0x9b4 <get_humidity>
    1d0a:	ce 51       	subi	r28, 0x1E	; 30
    1d0c:	de 4f       	sbci	r29, 0xFE	; 254
    1d0e:	68 83       	st	Y, r22
    1d10:	c2 5e       	subi	r28, 0xE2	; 226
    1d12:	d1 40       	sbci	r29, 0x01	; 1
    1d14:	cd 51       	subi	r28, 0x1D	; 29
    1d16:	de 4f       	sbci	r29, 0xFE	; 254
    1d18:	78 83       	st	Y, r23
    1d1a:	c3 5e       	subi	r28, 0xE3	; 227
    1d1c:	d1 40       	sbci	r29, 0x01	; 1
    1d1e:	d8 2e       	mov	r13, r24
    1d20:	c9 2e       	mov	r12, r25
    1d22:	82 e0       	ldi	r24, 0x02	; 2
    1d24:	0e 94 3a 04 	call	0x874	; 0x874 <read_AD590>
    1d28:	b6 2e       	mov	r11, r22
    1d2a:	a7 2e       	mov	r10, r23
    1d2c:	98 2e       	mov	r9, r24
    1d2e:	89 2e       	mov	r8, r25
			t2 = get_temperature(2);
			h2 = get_humidity(2);
    1d30:	82 e0       	ldi	r24, 0x02	; 2
    1d32:	0e 94 da 04 	call	0x9b4	; 0x9b4 <get_humidity>
    1d36:	76 2e       	mov	r7, r22
    1d38:	67 2e       	mov	r6, r23
    1d3a:	58 2e       	mov	r5, r24
    1d3c:	49 2e       	mov	r4, r25
			break;
		case 3:
			temperature = read_MCP9808();
    1d3e:	0e 94 8e 04 	call	0x91c	; 0x91c <read_MCP9808>
    1d42:	c8 51       	subi	r28, 0x18	; 24
    1d44:	de 4f       	sbci	r29, 0xFE	; 254
    1d46:	68 83       	st	Y, r22
    1d48:	c8 5e       	subi	r28, 0xE8	; 232
    1d4a:	d1 40       	sbci	r29, 0x01	; 1
    1d4c:	c7 51       	subi	r28, 0x17	; 23
    1d4e:	de 4f       	sbci	r29, 0xFE	; 254
    1d50:	78 83       	st	Y, r23
    1d52:	c9 5e       	subi	r28, 0xE9	; 233
    1d54:	d1 40       	sbci	r29, 0x01	; 1
    1d56:	38 2e       	mov	r3, r24
    1d58:	29 2e       	mov	r2, r25
			t3 = get_temperature(3);
			get_time(currenttime);
    1d5a:	7e 01       	movw	r14, r28
    1d5c:	96 e9       	ldi	r25, 0x96	; 150
    1d5e:	e9 0e       	add	r14, r25
    1d60:	f1 1c       	adc	r15, r1
    1d62:	c7 01       	movw	r24, r14
    1d64:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			sprintf(outbuf, format_ENV, get_specID(), currenttime, t0, h0, t1, h1, t2, h2, t3, pcmd[cstack].cid);
    1d68:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    1d6c:	94 e3       	ldi	r25, 0x34	; 52
    1d6e:	90 9f       	mul	r25, r16
    1d70:	90 01       	movw	r18, r0
    1d72:	91 9f       	mul	r25, r17
    1d74:	30 0d       	add	r19, r0
    1d76:	11 24       	eor	r1, r1
    1d78:	22 5d       	subi	r18, 0xD2	; 210
    1d7a:	37 4d       	sbci	r19, 0xD7	; 215
    1d7c:	3f 93       	push	r19
    1d7e:	2f 93       	push	r18
    1d80:	2f 92       	push	r2
    1d82:	3f 92       	push	r3
    1d84:	c7 51       	subi	r28, 0x17	; 23
    1d86:	de 4f       	sbci	r29, 0xFE	; 254
    1d88:	98 81       	ld	r25, Y
    1d8a:	c9 5e       	subi	r28, 0xE9	; 233
    1d8c:	d1 40       	sbci	r29, 0x01	; 1
    1d8e:	9f 93       	push	r25
    1d90:	c8 51       	subi	r28, 0x18	; 24
    1d92:	de 4f       	sbci	r29, 0xFE	; 254
    1d94:	98 81       	ld	r25, Y
    1d96:	c8 5e       	subi	r28, 0xE8	; 232
    1d98:	d1 40       	sbci	r29, 0x01	; 1
    1d9a:	9f 93       	push	r25
    1d9c:	4f 92       	push	r4
    1d9e:	5f 92       	push	r5
    1da0:	6f 92       	push	r6
    1da2:	7f 92       	push	r7
    1da4:	8f 92       	push	r8
    1da6:	9f 92       	push	r9
    1da8:	af 92       	push	r10
    1daa:	bf 92       	push	r11
    1dac:	cf 92       	push	r12
    1dae:	df 92       	push	r13
    1db0:	cd 51       	subi	r28, 0x1D	; 29
    1db2:	de 4f       	sbci	r29, 0xFE	; 254
    1db4:	98 81       	ld	r25, Y
    1db6:	c3 5e       	subi	r28, 0xE3	; 227
    1db8:	d1 40       	sbci	r29, 0x01	; 1
    1dba:	9f 93       	push	r25
    1dbc:	ce 51       	subi	r28, 0x1E	; 30
    1dbe:	de 4f       	sbci	r29, 0xFE	; 254
    1dc0:	98 81       	ld	r25, Y
    1dc2:	c2 5e       	subi	r28, 0xE2	; 226
    1dc4:	d1 40       	sbci	r29, 0x01	; 1
    1dc6:	9f 93       	push	r25
    1dc8:	c9 51       	subi	r28, 0x19	; 25
    1dca:	de 4f       	sbci	r29, 0xFE	; 254
    1dcc:	98 81       	ld	r25, Y
    1dce:	c7 5e       	subi	r28, 0xE7	; 231
    1dd0:	d1 40       	sbci	r29, 0x01	; 1
    1dd2:	9f 93       	push	r25
    1dd4:	ca 51       	subi	r28, 0x1A	; 26
    1dd6:	de 4f       	sbci	r29, 0xFE	; 254
    1dd8:	98 81       	ld	r25, Y
    1dda:	c6 5e       	subi	r28, 0xE6	; 230
    1ddc:	d1 40       	sbci	r29, 0x01	; 1
    1dde:	9f 93       	push	r25
    1de0:	cb 51       	subi	r28, 0x1B	; 27
    1de2:	de 4f       	sbci	r29, 0xFE	; 254
    1de4:	98 81       	ld	r25, Y
    1de6:	c5 5e       	subi	r28, 0xE5	; 229
    1de8:	d1 40       	sbci	r29, 0x01	; 1
    1dea:	9f 93       	push	r25
    1dec:	cc 51       	subi	r28, 0x1C	; 28
    1dee:	de 4f       	sbci	r29, 0xFE	; 254
    1df0:	98 81       	ld	r25, Y
    1df2:	c4 5e       	subi	r28, 0xE4	; 228
    1df4:	d1 40       	sbci	r29, 0x01	; 1
    1df6:	9f 93       	push	r25
    1df8:	c3 52       	subi	r28, 0x23	; 35
    1dfa:	de 4f       	sbci	r29, 0xFE	; 254
    1dfc:	98 81       	ld	r25, Y
    1dfe:	cd 5d       	subi	r28, 0xDD	; 221
    1e00:	d1 40       	sbci	r29, 0x01	; 1
    1e02:	9f 93       	push	r25
    1e04:	c4 52       	subi	r28, 0x24	; 36
    1e06:	de 4f       	sbci	r29, 0xFE	; 254
    1e08:	98 81       	ld	r25, Y
    1e0a:	cc 5d       	subi	r28, 0xDC	; 220
    1e0c:	d1 40       	sbci	r29, 0x01	; 1
    1e0e:	9f 93       	push	r25
    1e10:	c5 52       	subi	r28, 0x25	; 37
    1e12:	de 4f       	sbci	r29, 0xFE	; 254
    1e14:	98 81       	ld	r25, Y
    1e16:	cb 5d       	subi	r28, 0xDB	; 219
    1e18:	d1 40       	sbci	r29, 0x01	; 1
    1e1a:	9f 93       	push	r25
    1e1c:	c6 52       	subi	r28, 0x26	; 38
    1e1e:	de 4f       	sbci	r29, 0xFE	; 254
    1e20:	98 81       	ld	r25, Y
    1e22:	ca 5d       	subi	r28, 0xDA	; 218
    1e24:	d1 40       	sbci	r29, 0x01	; 1
    1e26:	9f 93       	push	r25
    1e28:	cf 51       	subi	r28, 0x1F	; 31
    1e2a:	de 4f       	sbci	r29, 0xFE	; 254
    1e2c:	98 81       	ld	r25, Y
    1e2e:	c1 5e       	subi	r28, 0xE1	; 225
    1e30:	d1 40       	sbci	r29, 0x01	; 1
    1e32:	9f 93       	push	r25
    1e34:	c0 52       	subi	r28, 0x20	; 32
    1e36:	de 4f       	sbci	r29, 0xFE	; 254
    1e38:	98 81       	ld	r25, Y
    1e3a:	c0 5e       	subi	r28, 0xE0	; 224
    1e3c:	d1 40       	sbci	r29, 0x01	; 1
    1e3e:	9f 93       	push	r25
    1e40:	c1 52       	subi	r28, 0x21	; 33
    1e42:	de 4f       	sbci	r29, 0xFE	; 254
    1e44:	98 81       	ld	r25, Y
    1e46:	cf 5d       	subi	r28, 0xDF	; 223
    1e48:	d1 40       	sbci	r29, 0x01	; 1
    1e4a:	9f 93       	push	r25
    1e4c:	c2 52       	subi	r28, 0x22	; 34
    1e4e:	de 4f       	sbci	r29, 0xFE	; 254
    1e50:	98 81       	ld	r25, Y
    1e52:	ce 5d       	subi	r28, 0xDE	; 222
    1e54:	d1 40       	sbci	r29, 0x01	; 1
    1e56:	9f 93       	push	r25
    1e58:	ff 92       	push	r15
    1e5a:	ef 92       	push	r14
    1e5c:	1f 92       	push	r1
    1e5e:	8f 93       	push	r24
    1e60:	ce 01       	movw	r24, r28
    1e62:	80 52       	subi	r24, 0x20	; 32
    1e64:	9f 4f       	sbci	r25, 0xFF	; 255
    1e66:	9f 93       	push	r25
    1e68:	8f 93       	push	r24
    1e6a:	8e 01       	movw	r16, r28
    1e6c:	0f 5f       	subi	r16, 0xFF	; 255
    1e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e70:	1f 93       	push	r17
    1e72:	0f 93       	push	r16
    1e74:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
			checksum_NMEA(outbuf);
    1e78:	cd bf       	out	0x3d, r28	; 61
    1e7a:	de bf       	out	0x3e, r29	; 62
    1e7c:	c8 01       	movw	r24, r16
    1e7e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    1e82:	f8 01       	movw	r30, r16
    1e84:	01 90       	ld	r0, Z+
    1e86:	00 20       	and	r0, r0
    1e88:	e9 f7       	brne	.-6      	; 0x1e84 <report+0x35e>
    1e8a:	31 97       	sbiw	r30, 0x01	; 1
    1e8c:	af 01       	movw	r20, r30
    1e8e:	40 1b       	sub	r20, r16
    1e90:	51 0b       	sbc	r21, r17
    1e92:	b8 01       	movw	r22, r16
    1e94:	80 e0       	ldi	r24, 0x00	; 0
    1e96:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
			t3 = get_temperature(3);
			get_time(currenttime);
			sprintf(outbuf, format_ENV, get_specID(), currenttime, t0, h0, t1, h1, t2, h2, t3, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    1e9c:	c2 c1       	rjmp	.+900    	; 0x2222 <report+0x6fc>

		case 'o':					// Orientation
			get_orientation(MMA8451ADDR, &x, &y, &z);
    1e9e:	9e 01       	movw	r18, r28
    1ea0:	2e 52       	subi	r18, 0x2E	; 46
    1ea2:	3e 4f       	sbci	r19, 0xFE	; 254
    1ea4:	ae 01       	movw	r20, r28
    1ea6:	42 53       	subi	r20, 0x32	; 50
    1ea8:	5e 4f       	sbci	r21, 0xFE	; 254
    1eaa:	be 01       	movw	r22, r28
    1eac:	66 53       	subi	r22, 0x36	; 54
    1eae:	7e 4f       	sbci	r23, 0xFE	; 254
    1eb0:	8a e3       	ldi	r24, 0x3A	; 58
    1eb2:	0e 94 49 09 	call	0x1292	; 0x1292 <get_orientation>
			get_time(currenttime);
    1eb6:	7e 01       	movw	r14, r28
    1eb8:	96 e9       	ldi	r25, 0x96	; 150
    1eba:	e9 0e       	add	r14, r25
    1ebc:	f1 1c       	adc	r15, r1
    1ebe:	c7 01       	movw	r24, r14
    1ec0:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			sprintf(outbuf, format_ORI, get_specID(), currenttime, x, y, z, pcmd[cstack].cid);
    1ec4:	ce 52       	subi	r28, 0x2E	; 46
    1ec6:	de 4f       	sbci	r29, 0xFE	; 254
    1ec8:	58 80       	ld	r5, Y
    1eca:	c2 5d       	subi	r28, 0xD2	; 210
    1ecc:	d1 40       	sbci	r29, 0x01	; 1
    1ece:	cd 52       	subi	r28, 0x2D	; 45
    1ed0:	de 4f       	sbci	r29, 0xFE	; 254
    1ed2:	48 80       	ld	r4, Y
    1ed4:	c3 5d       	subi	r28, 0xD3	; 211
    1ed6:	d1 40       	sbci	r29, 0x01	; 1
    1ed8:	cc 52       	subi	r28, 0x2C	; 44
    1eda:	de 4f       	sbci	r29, 0xFE	; 254
    1edc:	38 80       	ld	r3, Y
    1ede:	c4 5d       	subi	r28, 0xD4	; 212
    1ee0:	d1 40       	sbci	r29, 0x01	; 1
    1ee2:	cb 52       	subi	r28, 0x2B	; 43
    1ee4:	de 4f       	sbci	r29, 0xFE	; 254
    1ee6:	28 80       	ld	r2, Y
    1ee8:	c5 5d       	subi	r28, 0xD5	; 213
    1eea:	d1 40       	sbci	r29, 0x01	; 1
    1eec:	c2 53       	subi	r28, 0x32	; 50
    1eee:	de 4f       	sbci	r29, 0xFE	; 254
    1ef0:	98 80       	ld	r9, Y
    1ef2:	ce 5c       	subi	r28, 0xCE	; 206
    1ef4:	d1 40       	sbci	r29, 0x01	; 1
    1ef6:	c1 53       	subi	r28, 0x31	; 49
    1ef8:	de 4f       	sbci	r29, 0xFE	; 254
    1efa:	88 80       	ld	r8, Y
    1efc:	cf 5c       	subi	r28, 0xCF	; 207
    1efe:	d1 40       	sbci	r29, 0x01	; 1
    1f00:	c0 53       	subi	r28, 0x30	; 48
    1f02:	de 4f       	sbci	r29, 0xFE	; 254
    1f04:	78 80       	ld	r7, Y
    1f06:	c0 5d       	subi	r28, 0xD0	; 208
    1f08:	d1 40       	sbci	r29, 0x01	; 1
    1f0a:	cf 52       	subi	r28, 0x2F	; 47
    1f0c:	de 4f       	sbci	r29, 0xFE	; 254
    1f0e:	68 80       	ld	r6, Y
    1f10:	c1 5d       	subi	r28, 0xD1	; 209
    1f12:	d1 40       	sbci	r29, 0x01	; 1
    1f14:	c6 53       	subi	r28, 0x36	; 54
    1f16:	de 4f       	sbci	r29, 0xFE	; 254
    1f18:	d8 80       	ld	r13, Y
    1f1a:	ca 5c       	subi	r28, 0xCA	; 202
    1f1c:	d1 40       	sbci	r29, 0x01	; 1
    1f1e:	c5 53       	subi	r28, 0x35	; 53
    1f20:	de 4f       	sbci	r29, 0xFE	; 254
    1f22:	c8 80       	ld	r12, Y
    1f24:	cb 5c       	subi	r28, 0xCB	; 203
    1f26:	d1 40       	sbci	r29, 0x01	; 1
    1f28:	c4 53       	subi	r28, 0x34	; 52
    1f2a:	de 4f       	sbci	r29, 0xFE	; 254
    1f2c:	b8 80       	ld	r11, Y
    1f2e:	cc 5c       	subi	r28, 0xCC	; 204
    1f30:	d1 40       	sbci	r29, 0x01	; 1
    1f32:	c3 53       	subi	r28, 0x33	; 51
    1f34:	de 4f       	sbci	r29, 0xFE	; 254
    1f36:	a8 80       	ld	r10, Y
    1f38:	cd 5c       	subi	r28, 0xCD	; 205
    1f3a:	d1 40       	sbci	r29, 0x01	; 1
    1f3c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    1f40:	94 e3       	ldi	r25, 0x34	; 52
    1f42:	90 9f       	mul	r25, r16
    1f44:	90 01       	movw	r18, r0
    1f46:	91 9f       	mul	r25, r17
    1f48:	30 0d       	add	r19, r0
    1f4a:	11 24       	eor	r1, r1
    1f4c:	22 5d       	subi	r18, 0xD2	; 210
    1f4e:	37 4d       	sbci	r19, 0xD7	; 215
    1f50:	3f 93       	push	r19
    1f52:	2f 93       	push	r18
    1f54:	2f 92       	push	r2
    1f56:	3f 92       	push	r3
    1f58:	4f 92       	push	r4
    1f5a:	5f 92       	push	r5
    1f5c:	6f 92       	push	r6
    1f5e:	7f 92       	push	r7
    1f60:	8f 92       	push	r8
    1f62:	9f 92       	push	r9
    1f64:	af 92       	push	r10
    1f66:	bf 92       	push	r11
    1f68:	cf 92       	push	r12
    1f6a:	df 92       	push	r13
    1f6c:	ff 92       	push	r15
    1f6e:	ef 92       	push	r14
    1f70:	1f 92       	push	r1
    1f72:	8f 93       	push	r24
    1f74:	ce 01       	movw	r24, r28
    1f76:	8e 5d       	subi	r24, 0xDE	; 222
    1f78:	9e 4f       	sbci	r25, 0xFE	; 254
    1f7a:	9f 93       	push	r25
    1f7c:	8f 93       	push	r24
    1f7e:	8e 01       	movw	r16, r28
    1f80:	0f 5f       	subi	r16, 0xFF	; 255
    1f82:	1f 4f       	sbci	r17, 0xFF	; 255
    1f84:	1f 93       	push	r17
    1f86:	0f 93       	push	r16
    1f88:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
//			sprintf(outbuf, "x=%03.1f y=%03.1f z=%03.1f", x, y, z);
			checksum_NMEA(outbuf);
    1f8c:	c8 01       	movw	r24, r16
    1f8e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    1f92:	f8 01       	movw	r30, r16
    1f94:	01 90       	ld	r0, Z+
    1f96:	00 20       	and	r0, r0
    1f98:	e9 f7       	brne	.-6      	; 0x1f94 <report+0x46e>
    1f9a:	31 97       	sbiw	r30, 0x01	; 1
    1f9c:	af 01       	movw	r20, r30
    1f9e:	40 1b       	sub	r20, r16
    1fa0:	51 0b       	sbc	r21, r17
    1fa2:	b8 01       	movw	r22, r16
    1fa4:	80 e0       	ldi	r24, 0x00	; 0
    1fa6:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    1faa:	cd bf       	out	0x3d, r28	; 61
    1fac:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    1fae:	80 e0       	ldi	r24, 0x00	; 0
			get_time(currenttime);
			sprintf(outbuf, format_ORI, get_specID(), currenttime, x, y, z, pcmd[cstack].cid);
//			sprintf(outbuf, "x=%03.1f y=%03.1f z=%03.1f", x, y, z);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    1fb0:	38 c1       	rjmp	.+624    	; 0x2222 <report+0x6fc>

		case 'p':
			get_time(currenttime);
    1fb2:	7e 01       	movw	r14, r28
    1fb4:	96 e9       	ldi	r25, 0x96	; 150
    1fb6:	e9 0e       	add	r14, r25
    1fb8:	f1 1c       	adc	r15, r1
    1fba:	c7 01       	movw	r24, r14
    1fbc:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			read_pneusensors(&shutter, &left, &right, &air);
    1fc0:	9e 01       	movw	r18, r28
    1fc2:	27 52       	subi	r18, 0x27	; 39
    1fc4:	3e 4f       	sbci	r19, 0xFE	; 254
    1fc6:	ae 01       	movw	r20, r28
    1fc8:	48 52       	subi	r20, 0x28	; 40
    1fca:	5e 4f       	sbci	r21, 0xFE	; 254
    1fcc:	be 01       	movw	r22, r28
    1fce:	69 52       	subi	r22, 0x29	; 41
    1fd0:	7e 4f       	sbci	r23, 0xFE	; 254
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	8a 52       	subi	r24, 0x2A	; 42
    1fd6:	9e 4f       	sbci	r25, 0xFE	; 254
    1fd8:	0e 94 4a 02 	call	0x494	; 0x494 <read_pneusensors>
			sprintf(outbuf, format_PNU, get_specID(), currenttime, shutter, left, right, air, pcmd[cstack].cid);
    1fdc:	c7 52       	subi	r28, 0x27	; 39
    1fde:	de 4f       	sbci	r29, 0xFE	; 254
    1fe0:	a8 80       	ld	r10, Y
    1fe2:	c9 5d       	subi	r28, 0xD9	; 217
    1fe4:	d1 40       	sbci	r29, 0x01	; 1
    1fe6:	c8 52       	subi	r28, 0x28	; 40
    1fe8:	de 4f       	sbci	r29, 0xFE	; 254
    1fea:	b8 80       	ld	r11, Y
    1fec:	c8 5d       	subi	r28, 0xD8	; 216
    1fee:	d1 40       	sbci	r29, 0x01	; 1
    1ff0:	c9 52       	subi	r28, 0x29	; 41
    1ff2:	de 4f       	sbci	r29, 0xFE	; 254
    1ff4:	c8 80       	ld	r12, Y
    1ff6:	c7 5d       	subi	r28, 0xD7	; 215
    1ff8:	d1 40       	sbci	r29, 0x01	; 1
    1ffa:	ca 52       	subi	r28, 0x2A	; 42
    1ffc:	de 4f       	sbci	r29, 0xFE	; 254
    1ffe:	d8 80       	ld	r13, Y
    2000:	c6 5d       	subi	r28, 0xD6	; 214
    2002:	d1 40       	sbci	r29, 0x01	; 1
    2004:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    2008:	94 e3       	ldi	r25, 0x34	; 52
    200a:	90 9f       	mul	r25, r16
    200c:	90 01       	movw	r18, r0
    200e:	91 9f       	mul	r25, r17
    2010:	30 0d       	add	r19, r0
    2012:	11 24       	eor	r1, r1
    2014:	22 5d       	subi	r18, 0xD2	; 210
    2016:	37 4d       	sbci	r19, 0xD7	; 215
    2018:	3f 93       	push	r19
    201a:	2f 93       	push	r18
    201c:	1f 92       	push	r1
    201e:	af 92       	push	r10
    2020:	1f 92       	push	r1
    2022:	bf 92       	push	r11
    2024:	1f 92       	push	r1
    2026:	cf 92       	push	r12
    2028:	1f 92       	push	r1
    202a:	df 92       	push	r13
    202c:	ff 92       	push	r15
    202e:	ef 92       	push	r14
    2030:	1f 92       	push	r1
    2032:	8f 93       	push	r24
    2034:	ce 01       	movw	r24, r28
    2036:	8e 5b       	subi	r24, 0xBE	; 190
    2038:	9e 4f       	sbci	r25, 0xFE	; 254
    203a:	9f 93       	push	r25
    203c:	8f 93       	push	r24
    203e:	8e 01       	movw	r16, r28
    2040:	0f 5f       	subi	r16, 0xFF	; 255
    2042:	1f 4f       	sbci	r17, 0xFF	; 255
    2044:	1f 93       	push	r17
    2046:	0f 93       	push	r16
    2048:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
			checksum_NMEA(outbuf);
    204c:	c8 01       	movw	r24, r16
    204e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    2052:	f8 01       	movw	r30, r16
    2054:	01 90       	ld	r0, Z+
    2056:	00 20       	and	r0, r0
    2058:	e9 f7       	brne	.-6      	; 0x2054 <report+0x52e>
    205a:	31 97       	sbiw	r30, 0x01	; 1
    205c:	af 01       	movw	r20, r30
    205e:	40 1b       	sub	r20, r16
    2060:	51 0b       	sbc	r21, r17
    2062:	b8 01       	movw	r22, r16
    2064:	80 e0       	ldi	r24, 0x00	; 0
    2066:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    206a:	cd bf       	out	0x3d, r28	; 61
    206c:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    206e:	80 e0       	ldi	r24, 0x00	; 0
			get_time(currenttime);
			read_pneusensors(&shutter, &left, &right, &air);
			sprintf(outbuf, format_PNU, get_specID(), currenttime, shutter, left, right, air, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    2070:	d8 c0       	rjmp	.+432    	; 0x2222 <report+0x6fc>

		case 't':					// Report current time on specMech clock
			get_time(currenttime);
    2072:	7e 01       	movw	r14, r28
    2074:	96 e9       	ldi	r25, 0x96	; 150
    2076:	e9 0e       	add	r14, r25
    2078:	f1 1c       	adc	r15, r1
    207a:	c7 01       	movw	r24, r14
    207c:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			read_FRAM(FRAMADDR, SETTIMEADDR, (uint8_t*) lastsettime, 20);
    2080:	6e 01       	movw	r12, r28
    2082:	8a ea       	ldi	r24, 0xAA	; 170
    2084:	c8 0e       	add	r12, r24
    2086:	d1 1c       	adc	r13, r1
    2088:	24 e1       	ldi	r18, 0x14	; 20
    208a:	a6 01       	movw	r20, r12
    208c:	60 e0       	ldi	r22, 0x00	; 0
    208e:	70 e0       	ldi	r23, 0x00	; 0
    2090:	80 ea       	ldi	r24, 0xA0	; 160
    2092:	0e 94 78 07 	call	0xef0	; 0xef0 <read_FRAM>
			get_BOOTTIME(boottime);
    2096:	5e 01       	movw	r10, r28
    2098:	9e eb       	ldi	r25, 0xBE	; 190
    209a:	a9 0e       	add	r10, r25
    209c:	b1 1c       	adc	r11, r1
    209e:	c5 01       	movw	r24, r10
    20a0:	0e 94 09 0c 	call	0x1812	; 0x1812 <get_BOOTTIME>
			sprintf(outbuf, format_TIM, get_specID(), currenttime, lastsettime,
    20a4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    20a8:	94 e3       	ldi	r25, 0x34	; 52
    20aa:	90 9f       	mul	r25, r16
    20ac:	90 01       	movw	r18, r0
    20ae:	91 9f       	mul	r25, r17
    20b0:	30 0d       	add	r19, r0
    20b2:	11 24       	eor	r1, r1
    20b4:	22 5d       	subi	r18, 0xD2	; 210
    20b6:	37 4d       	sbci	r19, 0xD7	; 215
    20b8:	3f 93       	push	r19
    20ba:	2f 93       	push	r18
    20bc:	bf 92       	push	r11
    20be:	af 92       	push	r10
    20c0:	df 92       	push	r13
    20c2:	cf 92       	push	r12
    20c4:	ff 92       	push	r15
    20c6:	ef 92       	push	r14
    20c8:	1f 92       	push	r1
    20ca:	8f 93       	push	r24
    20cc:	ce 01       	movw	r24, r28
    20ce:	8d 58       	subi	r24, 0x8D	; 141
    20d0:	9e 4f       	sbci	r25, 0xFE	; 254
    20d2:	9f 93       	push	r25
    20d4:	8f 93       	push	r24
    20d6:	8e 01       	movw	r16, r28
    20d8:	0f 5f       	subi	r16, 0xFF	; 255
    20da:	1f 4f       	sbci	r17, 0xFF	; 255
    20dc:	1f 93       	push	r17
    20de:	0f 93       	push	r16
    20e0:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
				boottime, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
    20e4:	c8 01       	movw	r24, r16
    20e6:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    20ea:	f8 01       	movw	r30, r16
    20ec:	01 90       	ld	r0, Z+
    20ee:	00 20       	and	r0, r0
    20f0:	e9 f7       	brne	.-6      	; 0x20ec <report+0x5c6>
    20f2:	31 97       	sbiw	r30, 0x01	; 1
    20f4:	af 01       	movw	r20, r30
    20f6:	40 1b       	sub	r20, r16
    20f8:	51 0b       	sbc	r21, r17
    20fa:	b8 01       	movw	r22, r16
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    2102:	cd bf       	out	0x3d, r28	; 61
    2104:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    2106:	80 e0       	ldi	r24, 0x00	; 0
			get_BOOTTIME(boottime);
			sprintf(outbuf, format_TIM, get_specID(), currenttime, lastsettime,
				boottime, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    2108:	8c c0       	rjmp	.+280    	; 0x2222 <report+0x6fc>

		case 'v':
			redvac = read_ionpump(REDPUMP);
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	0e 94 3e 05 	call	0xa7c	; 0xa7c <read_ionpump>
    2110:	d6 2e       	mov	r13, r22
    2112:	c7 2e       	mov	r12, r23
    2114:	b8 2e       	mov	r11, r24
    2116:	a9 2e       	mov	r10, r25
			bluvac = read_ionpump(BLUEPUMP);
    2118:	82 e0       	ldi	r24, 0x02	; 2
    211a:	0e 94 3e 05 	call	0xa7c	; 0xa7c <read_ionpump>
    211e:	96 2e       	mov	r9, r22
    2120:	87 2e       	mov	r8, r23
    2122:	78 2e       	mov	r7, r24
    2124:	69 2e       	mov	r6, r25
			get_time(currenttime);
    2126:	7e 01       	movw	r14, r28
    2128:	96 e9       	ldi	r25, 0x96	; 150
    212a:	e9 0e       	add	r14, r25
    212c:	f1 1c       	adc	r15, r1
    212e:	c7 01       	movw	r24, r14
    2130:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			sprintf(outbuf, format_VAC, get_specID(), currenttime, redvac, bluvac, pcmd[cstack].cid);
    2134:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    2138:	94 e3       	ldi	r25, 0x34	; 52
    213a:	90 9f       	mul	r25, r16
    213c:	90 01       	movw	r18, r0
    213e:	91 9f       	mul	r25, r17
    2140:	30 0d       	add	r19, r0
    2142:	11 24       	eor	r1, r1
    2144:	22 5d       	subi	r18, 0xD2	; 210
    2146:	37 4d       	sbci	r19, 0xD7	; 215
    2148:	3f 93       	push	r19
    214a:	2f 93       	push	r18
    214c:	6f 92       	push	r6
    214e:	7f 92       	push	r7
    2150:	8f 92       	push	r8
    2152:	9f 92       	push	r9
    2154:	af 92       	push	r10
    2156:	bf 92       	push	r11
    2158:	cf 92       	push	r12
    215a:	df 92       	push	r13
    215c:	ff 92       	push	r15
    215e:	ef 92       	push	r14
    2160:	1f 92       	push	r1
    2162:	8f 93       	push	r24
    2164:	ce 01       	movw	r24, r28
    2166:	80 57       	subi	r24, 0x70	; 112
    2168:	9e 4f       	sbci	r25, 0xFE	; 254
    216a:	9f 93       	push	r25
    216c:	8f 93       	push	r24
    216e:	8e 01       	movw	r16, r28
    2170:	0f 5f       	subi	r16, 0xFF	; 255
    2172:	1f 4f       	sbci	r17, 0xFF	; 255
    2174:	1f 93       	push	r17
    2176:	0f 93       	push	r16
    2178:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
			checksum_NMEA(outbuf);
    217c:	c8 01       	movw	r24, r16
    217e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    2182:	f8 01       	movw	r30, r16
    2184:	01 90       	ld	r0, Z+
    2186:	00 20       	and	r0, r0
    2188:	e9 f7       	brne	.-6      	; 0x2184 <report+0x65e>
    218a:	31 97       	sbiw	r30, 0x01	; 1
    218c:	af 01       	movw	r20, r30
    218e:	40 1b       	sub	r20, r16
    2190:	51 0b       	sbc	r21, r17
    2192:	b8 01       	movw	r22, r16
    2194:	80 e0       	ldi	r24, 0x00	; 0
    2196:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    219a:	cd bf       	out	0x3d, r28	; 61
    219c:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    219e:	80 e0       	ldi	r24, 0x00	; 0
			bluvac = read_ionpump(BLUEPUMP);
			get_time(currenttime);
			sprintf(outbuf, format_VAC, get_specID(), currenttime, redvac, bluvac, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    21a0:	40 c0       	rjmp	.+128    	; 0x2222 <report+0x6fc>

		case 'V':
			get_VERSION(version);	// Send the specMech version
    21a2:	6e 01       	movw	r12, r28
    21a4:	9b e8       	ldi	r25, 0x8B	; 139
    21a6:	c9 0e       	add	r12, r25
    21a8:	d1 1c       	adc	r13, r1
    21aa:	c6 01       	movw	r24, r12
    21ac:	0e 94 10 0c 	call	0x1820	; 0x1820 <get_VERSION>
			get_time(currenttime);
    21b0:	7e 01       	movw	r14, r28
    21b2:	86 e9       	ldi	r24, 0x96	; 150
    21b4:	e8 0e       	add	r14, r24
    21b6:	f1 1c       	adc	r15, r1
    21b8:	c7 01       	movw	r24, r14
    21ba:	0e 94 9c 08 	call	0x1138	; 0x1138 <get_time>
			sprintf(outbuf, format_VER, get_specID(), currenttime, version, pcmd[cstack].cid);
    21be:	0e 94 73 01 	call	0x2e6	; 0x2e6 <get_specID>
    21c2:	94 e3       	ldi	r25, 0x34	; 52
    21c4:	90 9f       	mul	r25, r16
    21c6:	90 01       	movw	r18, r0
    21c8:	91 9f       	mul	r25, r17
    21ca:	30 0d       	add	r19, r0
    21cc:	11 24       	eor	r1, r1
    21ce:	22 5d       	subi	r18, 0xD2	; 210
    21d0:	37 4d       	sbci	r19, 0xD7	; 215
    21d2:	3f 93       	push	r19
    21d4:	2f 93       	push	r18
    21d6:	df 92       	push	r13
    21d8:	cf 92       	push	r12
    21da:	ff 92       	push	r15
    21dc:	ef 92       	push	r14
    21de:	1f 92       	push	r1
    21e0:	8f 93       	push	r24
    21e2:	ce 01       	movw	r24, r28
    21e4:	87 54       	subi	r24, 0x47	; 71
    21e6:	9e 4f       	sbci	r25, 0xFE	; 254
    21e8:	9f 93       	push	r25
    21ea:	8f 93       	push	r24
    21ec:	8e 01       	movw	r16, r28
    21ee:	0f 5f       	subi	r16, 0xFF	; 255
    21f0:	1f 4f       	sbci	r17, 0xFF	; 255
    21f2:	1f 93       	push	r17
    21f4:	0f 93       	push	r16
    21f6:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <sprintf>
			checksum_NMEA(outbuf);
    21fa:	c8 01       	movw	r24, r16
    21fc:	0e 94 3a 0a 	call	0x1474	; 0x1474 <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
    2200:	f8 01       	movw	r30, r16
    2202:	01 90       	ld	r0, Z+
    2204:	00 20       	and	r0, r0
    2206:	e9 f7       	brne	.-6      	; 0x2202 <report+0x6dc>
    2208:	31 97       	sbiw	r30, 0x01	; 1
    220a:	af 01       	movw	r20, r30
    220c:	40 1b       	sub	r20, r16
    220e:	51 0b       	sbc	r21, r17
    2210:	b8 01       	movw	r22, r16
    2212:	80 e0       	ldi	r24, 0x00	; 0
    2214:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    2218:	cd bf       	out	0x3d, r28	; 61
    221a:	de bf       	out	0x3e, r29	; 62
		default:
			return(ERRORPROMPT);
			break;
	}

	return(GREATERPROMPT);
    221c:	80 e0       	ldi	r24, 0x00	; 0
			get_VERSION(version);	// Send the specMech version
			get_time(currenttime);
			sprintf(outbuf, format_VER, get_specID(), currenttime, version, pcmd[cstack].cid);
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
    221e:	01 c0       	rjmp	.+2      	; 0x2222 <report+0x6fc>

		default:
			return(ERRORPROMPT);
    2220:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}

	return(GREATERPROMPT);

}
    2222:	c7 51       	subi	r28, 0x17	; 23
    2224:	de 4f       	sbci	r29, 0xFE	; 254
    2226:	cd bf       	out	0x3d, r28	; 61
    2228:	de bf       	out	0x3e, r29	; 62
    222a:	df 91       	pop	r29
    222c:	cf 91       	pop	r28
    222e:	1f 91       	pop	r17
    2230:	0f 91       	pop	r16
    2232:	ff 90       	pop	r15
    2234:	ef 90       	pop	r14
    2236:	df 90       	pop	r13
    2238:	cf 90       	pop	r12
    223a:	bf 90       	pop	r11
    223c:	af 90       	pop	r10
    223e:	9f 90       	pop	r9
    2240:	8f 90       	pop	r8
    2242:	7f 90       	pop	r7
    2244:	6f 90       	pop	r6
    2246:	5f 90       	pop	r5
    2248:	4f 90       	pop	r4
    224a:	3f 90       	pop	r3
    224c:	2f 90       	pop	r2
    224e:	08 95       	ret

00002250 <send_prompt>:

	If specMech is rebooted, it will only prompt with a single exclamation
	point (!) until it receives an acknowledgment in the form of a single !.
------------------------------------------------------------------------------*/
void send_prompt(uint8_t prompt_flag)
{
    2250:	0f 93       	push	r16
    2252:	1f 93       	push	r17
    2254:	cf 93       	push	r28
    2256:	df 93       	push	r29
    2258:	cd b7       	in	r28, 0x3d	; 61
    225a:	de b7       	in	r29, 0x3e	; 62
    225c:	6d 97       	sbiw	r28, 0x1d	; 29
    225e:	cd bf       	out	0x3d, r28	; 61
    2260:	de bf       	out	0x3e, r29	; 62

	const char str0[] = ">";
    2262:	2e e3       	ldi	r18, 0x3E	; 62
    2264:	30 e0       	ldi	r19, 0x00	; 0
    2266:	29 83       	std	Y+1, r18	; 0x01
    2268:	3a 83       	std	Y+2, r19	; 0x02
	const char str1[] = "!";
    226a:	21 e2       	ldi	r18, 0x21	; 33
    226c:	30 e0       	ldi	r19, 0x00	; 0
    226e:	2b 83       	std	Y+3, r18	; 0x03
    2270:	3c 83       	std	Y+4, r19	; 0x04

	char prompt_str[25];

	switch (prompt_flag) {
    2272:	81 30       	cpi	r24, 0x01	; 1
    2274:	09 f4       	brne	.+2      	; 0x2278 <send_prompt+0x28>
    2276:	3f c0       	rjmp	.+126    	; 0x22f6 <send_prompt+0xa6>
    2278:	18 f0       	brcs	.+6      	; 0x2280 <send_prompt+0x30>
    227a:	82 30       	cpi	r24, 0x02	; 2
    227c:	b9 f0       	breq	.+46     	; 0x22ac <send_prompt+0x5c>
    227e:	51 c0       	rjmp	.+162    	; 0x2322 <send_prompt+0xd2>
		case GREATERPROMPT:
			strcpy(prompt_str, str0);
    2280:	8e 01       	movw	r16, r28
    2282:	0b 5f       	subi	r16, 0xFB	; 251
    2284:	1f 4f       	sbci	r17, 0xFF	; 255
    2286:	be 01       	movw	r22, r28
    2288:	6f 5f       	subi	r22, 0xFF	; 255
    228a:	7f 4f       	sbci	r23, 0xFF	; 255
    228c:	c8 01       	movw	r24, r16
    228e:	0e 94 ac 19 	call	0x3358	; 0x3358 <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    2292:	f8 01       	movw	r30, r16
    2294:	01 90       	ld	r0, Z+
    2296:	00 20       	and	r0, r0
    2298:	e9 f7       	brne	.-6      	; 0x2294 <send_prompt+0x44>
    229a:	31 97       	sbiw	r30, 0x01	; 1
    229c:	af 01       	movw	r20, r30
    229e:	40 1b       	sub	r20, r16
    22a0:	51 0b       	sbc	r21, r17
    22a2:	b8 01       	movw	r22, r16
    22a4:	80 e0       	ldi	r24, 0x00	; 0
    22a6:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    22aa:	50 c0       	rjmp	.+160    	; 0x234c <send_prompt+0xfc>

		case ERRORPROMPT:
			format_ERR(prompt_str);
    22ac:	8e 01       	movw	r16, r28
    22ae:	0b 5f       	subi	r16, 0xFB	; 251
    22b0:	1f 4f       	sbci	r17, 0xFF	; 255
    22b2:	c8 01       	movw	r24, r16
    22b4:	0e 94 85 0a 	call	0x150a	; 0x150a <format_ERR>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    22b8:	f8 01       	movw	r30, r16
    22ba:	01 90       	ld	r0, Z+
    22bc:	00 20       	and	r0, r0
    22be:	e9 f7       	brne	.-6      	; 0x22ba <send_prompt+0x6a>
    22c0:	31 97       	sbiw	r30, 0x01	; 1
    22c2:	af 01       	movw	r20, r30
    22c4:	40 1b       	sub	r20, r16
    22c6:	51 0b       	sbc	r21, r17
    22c8:	b8 01       	movw	r22, r16
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			strcpy(prompt_str, str0);
    22d0:	be 01       	movw	r22, r28
    22d2:	6f 5f       	subi	r22, 0xFF	; 255
    22d4:	7f 4f       	sbci	r23, 0xFF	; 255
    22d6:	c8 01       	movw	r24, r16
    22d8:	0e 94 ac 19 	call	0x3358	; 0x3358 <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    22dc:	f8 01       	movw	r30, r16
    22de:	01 90       	ld	r0, Z+
    22e0:	00 20       	and	r0, r0
    22e2:	e9 f7       	brne	.-6      	; 0x22de <send_prompt+0x8e>
    22e4:	31 97       	sbiw	r30, 0x01	; 1
    22e6:	af 01       	movw	r20, r30
    22e8:	40 1b       	sub	r20, r16
    22ea:	51 0b       	sbc	r21, r17
    22ec:	b8 01       	movw	r22, r16
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    22f4:	2b c0       	rjmp	.+86     	; 0x234c <send_prompt+0xfc>

		case EXCLAIMPROMPT:
			strcpy(prompt_str, str1);
    22f6:	8e 01       	movw	r16, r28
    22f8:	0b 5f       	subi	r16, 0xFB	; 251
    22fa:	1f 4f       	sbci	r17, 0xFF	; 255
    22fc:	be 01       	movw	r22, r28
    22fe:	6d 5f       	subi	r22, 0xFD	; 253
    2300:	7f 4f       	sbci	r23, 0xFF	; 255
    2302:	c8 01       	movw	r24, r16
    2304:	0e 94 ac 19 	call	0x3358	; 0x3358 <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    2308:	f8 01       	movw	r30, r16
    230a:	01 90       	ld	r0, Z+
    230c:	00 20       	and	r0, r0
    230e:	e9 f7       	brne	.-6      	; 0x230a <send_prompt+0xba>
    2310:	31 97       	sbiw	r30, 0x01	; 1
    2312:	af 01       	movw	r20, r30
    2314:	40 1b       	sub	r20, r16
    2316:	51 0b       	sbc	r21, r17
    2318:	b8 01       	movw	r22, r16
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;
    2320:	15 c0       	rjmp	.+42     	; 0x234c <send_prompt+0xfc>

		default:
			strcpy(prompt_str, str1);
    2322:	8e 01       	movw	r16, r28
    2324:	0b 5f       	subi	r16, 0xFB	; 251
    2326:	1f 4f       	sbci	r17, 0xFF	; 255
    2328:	be 01       	movw	r22, r28
    232a:	6d 5f       	subi	r22, 0xFD	; 253
    232c:	7f 4f       	sbci	r23, 0xFF	; 255
    232e:	c8 01       	movw	r24, r16
    2330:	0e 94 ac 19 	call	0x3358	; 0x3358 <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    2334:	f8 01       	movw	r30, r16
    2336:	01 90       	ld	r0, Z+
    2338:	00 20       	and	r0, r0
    233a:	e9 f7       	brne	.-6      	; 0x2336 <send_prompt+0xe6>
    233c:	31 97       	sbiw	r30, 0x01	; 1
    233e:	af 01       	movw	r20, r30
    2340:	40 1b       	sub	r20, r16
    2342:	51 0b       	sbc	r21, r17
    2344:	b8 01       	movw	r22, r16
    2346:	80 e0       	ldi	r24, 0x00	; 0
    2348:	0e 94 d3 05 	call	0xba6	; 0xba6 <send_USART>
			break;

	}

}
    234c:	6d 96       	adiw	r28, 0x1d	; 29
    234e:	cd bf       	out	0x3d, r28	; 61
    2350:	de bf       	out	0x3e, r29	; 62
    2352:	df 91       	pop	r29
    2354:	cf 91       	pop	r28
    2356:	1f 91       	pop	r17
    2358:	0f 91       	pop	r16
    235a:	08 95       	ret

0000235c <set>:
	Returns:
		GREATERPROMPT on success
		ERRORPROMPT if an invalid object was requested.
------------------------------------------------------------------------------*/
uint8_t set(uint8_t cstack)
{
    235c:	cf 93       	push	r28
    235e:	df 93       	push	r29

	char object;

	object = pcmd[cstack].cobject;
    2360:	28 2f       	mov	r18, r24
    2362:	30 e0       	ldi	r19, 0x00	; 0
    2364:	94 e3       	ldi	r25, 0x34	; 52
    2366:	89 9f       	mul	r24, r25
    2368:	f0 01       	movw	r30, r0
    236a:	11 24       	eor	r1, r1
    236c:	ed 5f       	subi	r30, 0xFD	; 253
    236e:	f7 4d       	sbci	r31, 0xD7	; 215

	switch(object) {
    2370:	81 81       	ldd	r24, Z+1	; 0x01
    2372:	84 37       	cpi	r24, 0x74	; 116
    2374:	e9 f4       	brne	.+58     	; 0x23b0 <set+0x54>
		case 't':
			if (strlen(pcmd[cstack].cvalue) != 19) {
    2376:	84 e3       	ldi	r24, 0x34	; 52
    2378:	82 9f       	mul	r24, r18
    237a:	e0 01       	movw	r28, r0
    237c:	83 9f       	mul	r24, r19
    237e:	d0 0d       	add	r29, r0
    2380:	11 24       	eor	r1, r1
    2382:	cb 5f       	subi	r28, 0xFB	; 251
    2384:	d7 4d       	sbci	r29, 0xD7	; 215
    2386:	fe 01       	movw	r30, r28
    2388:	01 90       	ld	r0, Z+
    238a:	00 20       	and	r0, r0
    238c:	e9 f7       	brne	.-6      	; 0x2388 <set+0x2c>
    238e:	cf 01       	movw	r24, r30
    2390:	44 97       	sbiw	r24, 0x14	; 20
    2392:	8c 17       	cp	r24, r28
    2394:	9d 07       	cpc	r25, r29
    2396:	71 f4       	brne	.+28     	; 0x23b4 <set+0x58>
				return(ERRORPROMPT);
			}
			put_time(pcmd[cstack].cvalue);
    2398:	ce 01       	movw	r24, r28
    239a:	0e 94 f5 08 	call	0x11ea	; 0x11ea <put_time>
			write_FRAM(FRAMADDR, SETTIMEADDR, (uint8_t*) pcmd[cstack].cvalue, 20);
    239e:	24 e1       	ldi	r18, 0x14	; 20
    23a0:	ae 01       	movw	r20, r28
    23a2:	60 e0       	ldi	r22, 0x00	; 0
    23a4:	70 e0       	ldi	r23, 0x00	; 0
    23a6:	80 ea       	ldi	r24, 0xA0	; 160
    23a8:	0e 94 ca 07 	call	0xf94	; 0xf94 <write_FRAM>
			break;

		default:
			return(ERRORPROMPT);
	}
	return(GREATERPROMPT);
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	03 c0       	rjmp	.+6      	; 0x23b6 <set+0x5a>
			put_time(pcmd[cstack].cvalue);
			write_FRAM(FRAMADDR, SETTIMEADDR, (uint8_t*) pcmd[cstack].cvalue, 20);
			break;

		default:
			return(ERRORPROMPT);
    23b0:	82 e0       	ldi	r24, 0x02	; 2
    23b2:	01 c0       	rjmp	.+2      	; 0x23b6 <set+0x5a>
	object = pcmd[cstack].cobject;

	switch(object) {
		case 't':
			if (strlen(pcmd[cstack].cvalue) != 19) {
				return(ERRORPROMPT);
    23b4:	82 e0       	ldi	r24, 0x02	; 2

		default:
			return(ERRORPROMPT);
	}
	return(GREATERPROMPT);
}
    23b6:	df 91       	pop	r29
    23b8:	cf 91       	pop	r28
    23ba:	08 95       	ret

000023bc <commands>:
/*------------------------------------------------------------------------------
void commands(void)
	Command loop
------------------------------------------------------------------------------*/
void commands(void)
{
    23bc:	1f 93       	push	r17
    23be:	cf 93       	push	r28
    23c0:	df 93       	push	r29
    23c2:	cd b7       	in	r28, 0x3d	; 61
    23c4:	de b7       	in	r29, 0x3e	; 62
    23c6:	c0 58       	subi	r28, 0x80	; 128
    23c8:	d1 09       	sbc	r29, r1
    23ca:	cd bf       	out	0x3d, r28	; 61
    23cc:	de bf       	out	0x3e, r29	; 62
	PORTB.OUTCLR = PIN2_bm;
}

void on_BEEPER(void)
{
	PORTB.OUTSET = PIN2_bm;
    23ce:	e0 e2       	ldi	r30, 0x20	; 32
    23d0:	f4 e0       	ldi	r31, 0x04	; 4
    23d2:	84 e0       	ldi	r24, 0x04	; 4
    23d4:	85 83       	std	Z+5, r24	; 0x05
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    23d6:	a2 ec       	ldi	r26, 0xC2	; 194
    23d8:	b2 ea       	ldi	r27, 0xA2	; 162
    23da:	11 97       	sbiw	r26, 0x01	; 1
    23dc:	f1 f7       	brne	.-4      	; 0x23da <commands+0x1e>
    23de:	00 c0       	rjmp	.+0      	; 0x23e0 <commands+0x24>

}

void off_BEEPER(void)
{
	PORTB.OUTCLR = PIN2_bm;
    23e0:	86 83       	std	Z+6, r24	; 0x06
_delay_ms(50);
off_BEEPER();

	// Copy the command string to cmdline
	for (i = 0; i < BUFSIZE; i++) {
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
    23e2:	20 91 11 2b 	lds	r18, 0x2B11	; 0x802b11 <recv0_buf+0x81>
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	f9 01       	movw	r30, r18
    23ea:	e0 57       	subi	r30, 0x70	; 112
    23ec:	f5 4d       	sbci	r31, 0xD5	; 213
    23ee:	90 81       	ld	r25, Z
    23f0:	99 83       	std	Y+1, r25	; 0x01
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
    23f2:	2f 5f       	subi	r18, 0xFF	; 255
    23f4:	3f 4f       	sbci	r19, 0xFF	; 255
    23f6:	2f 77       	andi	r18, 0x7F	; 127
    23f8:	30 78       	andi	r19, 0x80	; 128
    23fa:	33 23       	and	r19, r19
    23fc:	34 f4       	brge	.+12     	; 0x240a <commands+0x4e>
    23fe:	21 50       	subi	r18, 0x01	; 1
    2400:	31 09       	sbc	r19, r1
    2402:	20 68       	ori	r18, 0x80	; 128
    2404:	3f 6f       	ori	r19, 0xFF	; 255
    2406:	2f 5f       	subi	r18, 0xFF	; 255
    2408:	3f 4f       	sbci	r19, 0xFF	; 255
    240a:	82 2f       	mov	r24, r18
    240c:	20 93 11 2b 	sts	0x2B11, r18	; 0x802b11 <recv0_buf+0x81>
		if (cmdline[i] == '\0') {
    2410:	99 23       	and	r25, r25
    2412:	09 f4       	brne	.+2      	; 0x2416 <commands+0x5a>
    2414:	85 c0       	rjmp	.+266    	; 0x2520 <commands+0x164>
on_BEEPER();
_delay_ms(50);
off_BEEPER();

	// Copy the command string to cmdline
	for (i = 0; i < BUFSIZE; i++) {
    2416:	21 e0       	ldi	r18, 0x01	; 1
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
    2418:	90 e0       	ldi	r25, 0x00	; 0
    241a:	fc 01       	movw	r30, r24
    241c:	e0 57       	subi	r30, 0x70	; 112
    241e:	f5 4d       	sbci	r31, 0xD5	; 213
    2420:	30 81       	ld	r19, Z
    2422:	e1 e0       	ldi	r30, 0x01	; 1
    2424:	f0 e0       	ldi	r31, 0x00	; 0
    2426:	ec 0f       	add	r30, r28
    2428:	fd 1f       	adc	r31, r29
    242a:	e2 0f       	add	r30, r18
    242c:	f1 1d       	adc	r31, r1
    242e:	30 83       	st	Z, r19
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
    2430:	01 96       	adiw	r24, 0x01	; 1
    2432:	8f 77       	andi	r24, 0x7F	; 127
    2434:	90 78       	andi	r25, 0x80	; 128
    2436:	99 23       	and	r25, r25
    2438:	24 f4       	brge	.+8      	; 0x2442 <commands+0x86>
    243a:	01 97       	sbiw	r24, 0x01	; 1
    243c:	80 68       	ori	r24, 0x80	; 128
    243e:	9f 6f       	ori	r25, 0xFF	; 255
    2440:	01 96       	adiw	r24, 0x01	; 1
		if (cmdline[i] == '\0') {
    2442:	31 11       	cpse	r19, r1
    2444:	03 c0       	rjmp	.+6      	; 0x244c <commands+0x90>
    2446:	80 93 11 2b 	sts	0x2B11, r24	; 0x802b11 <recv0_buf+0x81>
    244a:	04 c0       	rjmp	.+8      	; 0x2454 <commands+0x98>
on_BEEPER();
_delay_ms(50);
off_BEEPER();

	// Copy the command string to cmdline
	for (i = 0; i < BUFSIZE; i++) {
    244c:	2f 5f       	subi	r18, 0xFF	; 255
    244e:	22 f7       	brpl	.-56     	; 0x2418 <commands+0x5c>
    2450:	80 93 11 2b 	sts	0x2B11, r24	; 0x802b11 <recv0_buf+0x81>
			break;
		}
	}

	// Check if rebooted
	if (rebootnack) {
    2454:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    2458:	88 23       	and	r24, r24
    245a:	69 f0       	breq	.+26     	; 0x2476 <commands+0xba>
		if (cmdline[0] != '!') {
    245c:	89 81       	ldd	r24, Y+1	; 0x01
    245e:	81 32       	cpi	r24, 0x21	; 33
    2460:	21 f0       	breq	.+8      	; 0x246a <commands+0xae>
			send_prompt(EXCLAIMPROMPT);		
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	0e 94 28 11 	call	0x2250	; 0x2250 <send_prompt>
			return;
    2468:	60 c0       	rjmp	.+192    	; 0x252a <commands+0x16e>
		} else {
			send_prompt(GREATERPROMPT);
    246a:	80 e0       	ldi	r24, 0x00	; 0
    246c:	0e 94 28 11 	call	0x2250	; 0x2250 <send_prompt>
			rebootnack = 0;
    2470:	10 92 00 28 	sts	0x2800, r1	; 0x802800 <__DATA_REGION_ORIGIN__>
			return;
    2474:	5a c0       	rjmp	.+180    	; 0x252a <commands+0x16e>
		}
	}

	// Echo the command back to the user
	echo_cmd(cmdline);
    2476:	ce 01       	movw	r24, r28
    2478:	01 96       	adiw	r24, 0x01	; 1
    247a:	0e 94 84 0c 	call	0x1908	; 0x1908 <echo_cmd>

	if (strlen(cmdline) == 0) {		// Catch a terminal cr
    247e:	89 81       	ldd	r24, Y+1	; 0x01
    2480:	81 11       	cpse	r24, r1
    2482:	03 c0       	rjmp	.+6      	; 0x248a <commands+0xce>
		send_prompt(GREATERPROMPT);
    2484:	0e 94 28 11 	call	0x2250	; 0x2250 <send_prompt>
		return;
    2488:	50 c0       	rjmp	.+160    	; 0x252a <commands+0x16e>
	}

	parse_cmd(cmdline, cstack);
    248a:	10 91 02 28 	lds	r17, 0x2802	; 0x802802 <__data_end>
    248e:	61 2f       	mov	r22, r17
    2490:	ce 01       	movw	r24, r28
    2492:	01 96       	adiw	r24, 0x01	; 1
    2494:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <parse_cmd>
	verb = pcmd[cstack].cverb;
	object = pcmd[cstack].cobject;
    2498:	b4 e3       	ldi	r27, 0x34	; 52
    249a:	1b 9f       	mul	r17, r27
    249c:	f0 01       	movw	r30, r0
    249e:	11 24       	eor	r1, r1
    24a0:	ed 5f       	subi	r30, 0xFD	; 253
    24a2:	f7 4d       	sbci	r31, 0xD7	; 215
    24a4:	81 81       	ldd	r24, Z+1	; 0x01

	switch (verb) {
    24a6:	90 81       	ld	r25, Z
    24a8:	9f 36       	cpi	r25, 0x6F	; 111
    24aa:	79 f0       	breq	.+30     	; 0x24ca <commands+0x10e>
    24ac:	28 f4       	brcc	.+10     	; 0x24b8 <commands+0xfc>
    24ae:	92 35       	cpi	r25, 0x52	; 82
    24b0:	d1 f0       	breq	.+52     	; 0x24e6 <commands+0x12a>
    24b2:	93 36       	cpi	r25, 0x63	; 99
    24b4:	31 f0       	breq	.+12     	; 0x24c2 <commands+0x106>
    24b6:	25 c0       	rjmp	.+74     	; 0x2502 <commands+0x146>
    24b8:	92 37       	cpi	r25, 0x72	; 114
    24ba:	59 f0       	breq	.+22     	; 0x24d2 <commands+0x116>
    24bc:	93 37       	cpi	r25, 0x73	; 115
    24be:	71 f0       	breq	.+28     	; 0x24dc <commands+0x120>
    24c0:	20 c0       	rjmp	.+64     	; 0x2502 <commands+0x146>
		case 'c':				// close
			prompt_flag = close_pneu(object);
    24c2:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <close_pneu>
    24c6:	28 2f       	mov	r18, r24
			break;
    24c8:	1d c0       	rjmp	.+58     	; 0x2504 <commands+0x148>

		case 'o':				// open
			prompt_flag = open_pneu(object);
    24ca:	0e 94 19 03 	call	0x632	; 0x632 <open_pneu>
    24ce:	28 2f       	mov	r18, r24
			break;
    24d0:	19 c0       	rjmp	.+50     	; 0x2504 <commands+0x148>

		case 'r':				// Report
			prompt_flag = report(cstack);
    24d2:	81 2f       	mov	r24, r17
    24d4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <report>
    24d8:	28 2f       	mov	r18, r24
			break;
    24da:	14 c0       	rjmp	.+40     	; 0x2504 <commands+0x148>

		case 's':				// Set
			prompt_flag = set(cstack);
    24dc:	81 2f       	mov	r24, r17
    24de:	0e 94 ae 11 	call	0x235c	; 0x235c <set>
    24e2:	28 2f       	mov	r18, r24
			break;
    24e4:	0f c0       	rjmp	.+30     	; 0x2504 <commands+0x148>

		case 'R':				// Reboot
			send_prompt(GREATERPROMPT);
    24e6:	80 e0       	ldi	r24, 0x00	; 0
    24e8:	0e 94 28 11 	call	0x2250	; 0x2250 <send_prompt>
    24ec:	2a e6       	ldi	r18, 0x6A	; 106
    24ee:	84 e0       	ldi	r24, 0x04	; 4
    24f0:	91 e0       	ldi	r25, 0x01	; 1
    24f2:	21 50       	subi	r18, 0x01	; 1
    24f4:	80 40       	sbci	r24, 0x00	; 0
    24f6:	90 40       	sbci	r25, 0x00	; 0
    24f8:	e1 f7       	brne	.-8      	; 0x24f2 <commands+0x136>
    24fa:	00 c0       	rjmp	.+0      	; 0x24fc <commands+0x140>
			_delay_ms(100);		// Avoid finishing the command loop before reboot
			reboot();
    24fc:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <reboot>
			return;
    2500:	14 c0       	rjmp	.+40     	; 0x252a <commands+0x16e>

		default:
			prompt_flag = ERRORPROMPT;
    2502:	22 e0       	ldi	r18, 0x02	; 2
			break;			
	}

	cstack = (cstack + 1) % CSTACKSIZE;
    2504:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <__data_end>
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	01 96       	adiw	r24, 0x01	; 1
    250c:	6a e0       	ldi	r22, 0x0A	; 10
    250e:	70 e0       	ldi	r23, 0x00	; 0
    2510:	0e 94 5f 18 	call	0x30be	; 0x30be <__divmodhi4>
    2514:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <__data_end>
	send_prompt(prompt_flag);
    2518:	82 2f       	mov	r24, r18
    251a:	0e 94 28 11 	call	0x2250	; 0x2250 <send_prompt>
    251e:	05 c0       	rjmp	.+10     	; 0x252a <commands+0x16e>
			break;
		}
	}

	// Check if rebooted
	if (rebootnack) {
    2520:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    2524:	81 11       	cpse	r24, r1
    2526:	9d cf       	rjmp	.-198    	; 0x2462 <commands+0xa6>
    2528:	a6 cf       	rjmp	.-180    	; 0x2476 <commands+0xba>
	}

	cstack = (cstack + 1) % CSTACKSIZE;
	send_prompt(prompt_flag);

}
    252a:	c0 58       	subi	r28, 0x80	; 128
    252c:	df 4f       	sbci	r29, 0xFF	; 255
    252e:	cd bf       	out	0x3d, r28	; 61
    2530:	de bf       	out	0x3e, r29	; 62
    2532:	df 91       	pop	r29
    2534:	cf 91       	pop	r28
    2536:	1f 91       	pop	r17
    2538:	08 95       	ret

0000253a <main>:
ParsedCMD pcmd[CSTACKSIZE];	// Split the command line into its parts

uint8_t specMechErrors;

int main(void)
{
    253a:	cf 93       	push	r28
    253c:	df 93       	push	r29
    253e:	cd b7       	in	r28, 0x3d	; 61
    2540:	de b7       	in	r29, 0x3e	; 62
    2542:	2b 97       	sbiw	r28, 0x0b	; 11
    2544:	cd bf       	out	0x3d, r28	; 61
    2546:	de bf       	out	0x3e, r29	; 62
	char strbuf[11];
	init_PORTS();
    2548:	0e 94 25 01 	call	0x24a	; 0x24a <init_PORTS>
	init_LED();
    254c:	0e 94 5e 01 	call	0x2bc	; 0x2bc <init_LED>
	init_BEEPER();
    2550:	0e 94 64 01 	call	0x2c8	; 0x2c8 <init_BEEPER>
	init_SPECID();
    2554:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <init_SPECID>
	init_TWI();
    2558:	0e 94 7f 01 	call	0x2fe	; 0x2fe <init_TWI>
	init_PNEU();
    255c:	0e 94 c4 02 	call	0x588	; 0x588 <init_PNEU>
	init_USART();
    2560:	0e 94 8c 05 	call	0xb18	; 0xb18 <init_USART>
	init_OLED(0);
    2564:	80 e0       	ldi	r24, 0x00	; 0
    2566:	0e 94 cf 0a 	call	0x159e	; 0x159e <init_OLED>
	init_OLED(1);
    256a:	81 e0       	ldi	r24, 0x01	; 1
    256c:	0e 94 cf 0a 	call	0x159e	; 0x159e <init_OLED>
	init_EEPROM();
    2570:	0e 94 4e 0c 	call	0x189c	; 0x189c <init_EEPROM>
	init_MMA8451();
    2574:	0e 94 06 0a 	call	0x140c	; 0x140c <init_MMA8451>

	writestr_OLED(1, "specMech Version", 1);
    2578:	41 e0       	ldi	r20, 0x01	; 1
    257a:	61 ee       	ldi	r22, 0xE1	; 225
    257c:	76 e7       	ldi	r23, 0x76	; 118
    257e:	81 e0       	ldi	r24, 0x01	; 1
    2580:	0e 94 8a 0b 	call	0x1714	; 0x1714 <writestr_OLED>
	get_VERSION(strbuf);
    2584:	ce 01       	movw	r24, r28
    2586:	01 96       	adiw	r24, 0x01	; 1
    2588:	0e 94 10 0c 	call	0x1820	; 0x1820 <get_VERSION>
	writestr_OLED(1, strbuf, 2);
    258c:	42 e0       	ldi	r20, 0x02	; 2
    258e:	be 01       	movw	r22, r28
    2590:	6f 5f       	subi	r22, 0xFF	; 255
    2592:	7f 4f       	sbci	r23, 0xFF	; 255
    2594:	81 e0       	ldi	r24, 0x01	; 1
    2596:	0e 94 8a 0b 	call	0x1714	; 0x1714 <writestr_OLED>
	sei();
    259a:	78 94       	sei

	specMechErrors = 0;
    259c:	10 92 9a 2b 	sts	0x2B9A, r1	; 0x802b9a <specMechErrors>
	for (;;) {
		if (recv0_buf.done) {
    25a0:	04 e1       	ldi	r16, 0x14	; 20
    25a2:	1b e2       	ldi	r17, 0x2B	; 43
    25a4:	f8 01       	movw	r30, r16
    25a6:	80 81       	ld	r24, Z
    25a8:	88 23       	and	r24, r24
    25aa:	e1 f3       	breq	.-8      	; 0x25a4 <main+0x6a>
			recv0_buf.done = NO;
    25ac:	10 82       	st	Z, r1
			commands();
    25ae:	0e 94 de 11 	call	0x23bc	; 0x23bc <commands>
    25b2:	f8 cf       	rjmp	.-16     	; 0x25a4 <main+0x6a>

000025b4 <__subsf3>:
    25b4:	50 58       	subi	r21, 0x80	; 128

000025b6 <__addsf3>:
    25b6:	bb 27       	eor	r27, r27
    25b8:	aa 27       	eor	r26, r26
    25ba:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <__addsf3x>
    25be:	0c 94 36 14 	jmp	0x286c	; 0x286c <__fp_round>
    25c2:	0e 94 28 14 	call	0x2850	; 0x2850 <__fp_pscA>
    25c6:	38 f0       	brcs	.+14     	; 0x25d6 <__addsf3+0x20>
    25c8:	0e 94 2f 14 	call	0x285e	; 0x285e <__fp_pscB>
    25cc:	20 f0       	brcs	.+8      	; 0x25d6 <__addsf3+0x20>
    25ce:	39 f4       	brne	.+14     	; 0x25de <__addsf3+0x28>
    25d0:	9f 3f       	cpi	r25, 0xFF	; 255
    25d2:	19 f4       	brne	.+6      	; 0x25da <__addsf3+0x24>
    25d4:	26 f4       	brtc	.+8      	; 0x25de <__addsf3+0x28>
    25d6:	0c 94 25 14 	jmp	0x284a	; 0x284a <__fp_nan>
    25da:	0e f4       	brtc	.+2      	; 0x25de <__addsf3+0x28>
    25dc:	e0 95       	com	r30
    25de:	e7 fb       	bst	r30, 7
    25e0:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__fp_inf>

000025e4 <__addsf3x>:
    25e4:	e9 2f       	mov	r30, r25
    25e6:	0e 94 47 14 	call	0x288e	; 0x288e <__fp_split3>
    25ea:	58 f3       	brcs	.-42     	; 0x25c2 <__addsf3+0xc>
    25ec:	ba 17       	cp	r27, r26
    25ee:	62 07       	cpc	r22, r18
    25f0:	73 07       	cpc	r23, r19
    25f2:	84 07       	cpc	r24, r20
    25f4:	95 07       	cpc	r25, r21
    25f6:	20 f0       	brcs	.+8      	; 0x2600 <__addsf3x+0x1c>
    25f8:	79 f4       	brne	.+30     	; 0x2618 <__addsf3x+0x34>
    25fa:	a6 f5       	brtc	.+104    	; 0x2664 <__addsf3x+0x80>
    25fc:	0c 94 69 14 	jmp	0x28d2	; 0x28d2 <__fp_zero>
    2600:	0e f4       	brtc	.+2      	; 0x2604 <__addsf3x+0x20>
    2602:	e0 95       	com	r30
    2604:	0b 2e       	mov	r0, r27
    2606:	ba 2f       	mov	r27, r26
    2608:	a0 2d       	mov	r26, r0
    260a:	0b 01       	movw	r0, r22
    260c:	b9 01       	movw	r22, r18
    260e:	90 01       	movw	r18, r0
    2610:	0c 01       	movw	r0, r24
    2612:	ca 01       	movw	r24, r20
    2614:	a0 01       	movw	r20, r0
    2616:	11 24       	eor	r1, r1
    2618:	ff 27       	eor	r31, r31
    261a:	59 1b       	sub	r21, r25
    261c:	99 f0       	breq	.+38     	; 0x2644 <__addsf3x+0x60>
    261e:	59 3f       	cpi	r21, 0xF9	; 249
    2620:	50 f4       	brcc	.+20     	; 0x2636 <__addsf3x+0x52>
    2622:	50 3e       	cpi	r21, 0xE0	; 224
    2624:	68 f1       	brcs	.+90     	; 0x2680 <__addsf3x+0x9c>
    2626:	1a 16       	cp	r1, r26
    2628:	f0 40       	sbci	r31, 0x00	; 0
    262a:	a2 2f       	mov	r26, r18
    262c:	23 2f       	mov	r18, r19
    262e:	34 2f       	mov	r19, r20
    2630:	44 27       	eor	r20, r20
    2632:	58 5f       	subi	r21, 0xF8	; 248
    2634:	f3 cf       	rjmp	.-26     	; 0x261c <__addsf3x+0x38>
    2636:	46 95       	lsr	r20
    2638:	37 95       	ror	r19
    263a:	27 95       	ror	r18
    263c:	a7 95       	ror	r26
    263e:	f0 40       	sbci	r31, 0x00	; 0
    2640:	53 95       	inc	r21
    2642:	c9 f7       	brne	.-14     	; 0x2636 <__addsf3x+0x52>
    2644:	7e f4       	brtc	.+30     	; 0x2664 <__addsf3x+0x80>
    2646:	1f 16       	cp	r1, r31
    2648:	ba 0b       	sbc	r27, r26
    264a:	62 0b       	sbc	r22, r18
    264c:	73 0b       	sbc	r23, r19
    264e:	84 0b       	sbc	r24, r20
    2650:	ba f0       	brmi	.+46     	; 0x2680 <__addsf3x+0x9c>
    2652:	91 50       	subi	r25, 0x01	; 1
    2654:	a1 f0       	breq	.+40     	; 0x267e <__addsf3x+0x9a>
    2656:	ff 0f       	add	r31, r31
    2658:	bb 1f       	adc	r27, r27
    265a:	66 1f       	adc	r22, r22
    265c:	77 1f       	adc	r23, r23
    265e:	88 1f       	adc	r24, r24
    2660:	c2 f7       	brpl	.-16     	; 0x2652 <__addsf3x+0x6e>
    2662:	0e c0       	rjmp	.+28     	; 0x2680 <__addsf3x+0x9c>
    2664:	ba 0f       	add	r27, r26
    2666:	62 1f       	adc	r22, r18
    2668:	73 1f       	adc	r23, r19
    266a:	84 1f       	adc	r24, r20
    266c:	48 f4       	brcc	.+18     	; 0x2680 <__addsf3x+0x9c>
    266e:	87 95       	ror	r24
    2670:	77 95       	ror	r23
    2672:	67 95       	ror	r22
    2674:	b7 95       	ror	r27
    2676:	f7 95       	ror	r31
    2678:	9e 3f       	cpi	r25, 0xFE	; 254
    267a:	08 f0       	brcs	.+2      	; 0x267e <__addsf3x+0x9a>
    267c:	b0 cf       	rjmp	.-160    	; 0x25de <__addsf3+0x28>
    267e:	93 95       	inc	r25
    2680:	88 0f       	add	r24, r24
    2682:	08 f0       	brcs	.+2      	; 0x2686 <__addsf3x+0xa2>
    2684:	99 27       	eor	r25, r25
    2686:	ee 0f       	add	r30, r30
    2688:	97 95       	ror	r25
    268a:	87 95       	ror	r24
    268c:	08 95       	ret

0000268e <__cmpsf2>:
    268e:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <__fp_cmp>
    2692:	08 f4       	brcc	.+2      	; 0x2696 <__cmpsf2+0x8>
    2694:	81 e0       	ldi	r24, 0x01	; 1
    2696:	08 95       	ret

00002698 <__divsf3>:
    2698:	0e 94 60 13 	call	0x26c0	; 0x26c0 <__divsf3x>
    269c:	0c 94 36 14 	jmp	0x286c	; 0x286c <__fp_round>
    26a0:	0e 94 2f 14 	call	0x285e	; 0x285e <__fp_pscB>
    26a4:	58 f0       	brcs	.+22     	; 0x26bc <__divsf3+0x24>
    26a6:	0e 94 28 14 	call	0x2850	; 0x2850 <__fp_pscA>
    26aa:	40 f0       	brcs	.+16     	; 0x26bc <__divsf3+0x24>
    26ac:	29 f4       	brne	.+10     	; 0x26b8 <__divsf3+0x20>
    26ae:	5f 3f       	cpi	r21, 0xFF	; 255
    26b0:	29 f0       	breq	.+10     	; 0x26bc <__divsf3+0x24>
    26b2:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__fp_inf>
    26b6:	51 11       	cpse	r21, r1
    26b8:	0c 94 6a 14 	jmp	0x28d4	; 0x28d4 <__fp_szero>
    26bc:	0c 94 25 14 	jmp	0x284a	; 0x284a <__fp_nan>

000026c0 <__divsf3x>:
    26c0:	0e 94 47 14 	call	0x288e	; 0x288e <__fp_split3>
    26c4:	68 f3       	brcs	.-38     	; 0x26a0 <__divsf3+0x8>

000026c6 <__divsf3_pse>:
    26c6:	99 23       	and	r25, r25
    26c8:	b1 f3       	breq	.-20     	; 0x26b6 <__divsf3+0x1e>
    26ca:	55 23       	and	r21, r21
    26cc:	91 f3       	breq	.-28     	; 0x26b2 <__divsf3+0x1a>
    26ce:	95 1b       	sub	r25, r21
    26d0:	55 0b       	sbc	r21, r21
    26d2:	bb 27       	eor	r27, r27
    26d4:	aa 27       	eor	r26, r26
    26d6:	62 17       	cp	r22, r18
    26d8:	73 07       	cpc	r23, r19
    26da:	84 07       	cpc	r24, r20
    26dc:	38 f0       	brcs	.+14     	; 0x26ec <__divsf3_pse+0x26>
    26de:	9f 5f       	subi	r25, 0xFF	; 255
    26e0:	5f 4f       	sbci	r21, 0xFF	; 255
    26e2:	22 0f       	add	r18, r18
    26e4:	33 1f       	adc	r19, r19
    26e6:	44 1f       	adc	r20, r20
    26e8:	aa 1f       	adc	r26, r26
    26ea:	a9 f3       	breq	.-22     	; 0x26d6 <__divsf3_pse+0x10>
    26ec:	35 d0       	rcall	.+106    	; 0x2758 <__divsf3_pse+0x92>
    26ee:	0e 2e       	mov	r0, r30
    26f0:	3a f0       	brmi	.+14     	; 0x2700 <__divsf3_pse+0x3a>
    26f2:	e0 e8       	ldi	r30, 0x80	; 128
    26f4:	32 d0       	rcall	.+100    	; 0x275a <__divsf3_pse+0x94>
    26f6:	91 50       	subi	r25, 0x01	; 1
    26f8:	50 40       	sbci	r21, 0x00	; 0
    26fa:	e6 95       	lsr	r30
    26fc:	00 1c       	adc	r0, r0
    26fe:	ca f7       	brpl	.-14     	; 0x26f2 <__divsf3_pse+0x2c>
    2700:	2b d0       	rcall	.+86     	; 0x2758 <__divsf3_pse+0x92>
    2702:	fe 2f       	mov	r31, r30
    2704:	29 d0       	rcall	.+82     	; 0x2758 <__divsf3_pse+0x92>
    2706:	66 0f       	add	r22, r22
    2708:	77 1f       	adc	r23, r23
    270a:	88 1f       	adc	r24, r24
    270c:	bb 1f       	adc	r27, r27
    270e:	26 17       	cp	r18, r22
    2710:	37 07       	cpc	r19, r23
    2712:	48 07       	cpc	r20, r24
    2714:	ab 07       	cpc	r26, r27
    2716:	b0 e8       	ldi	r27, 0x80	; 128
    2718:	09 f0       	breq	.+2      	; 0x271c <__divsf3_pse+0x56>
    271a:	bb 0b       	sbc	r27, r27
    271c:	80 2d       	mov	r24, r0
    271e:	bf 01       	movw	r22, r30
    2720:	ff 27       	eor	r31, r31
    2722:	93 58       	subi	r25, 0x83	; 131
    2724:	5f 4f       	sbci	r21, 0xFF	; 255
    2726:	3a f0       	brmi	.+14     	; 0x2736 <__divsf3_pse+0x70>
    2728:	9e 3f       	cpi	r25, 0xFE	; 254
    272a:	51 05       	cpc	r21, r1
    272c:	78 f0       	brcs	.+30     	; 0x274c <__divsf3_pse+0x86>
    272e:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__fp_inf>
    2732:	0c 94 6a 14 	jmp	0x28d4	; 0x28d4 <__fp_szero>
    2736:	5f 3f       	cpi	r21, 0xFF	; 255
    2738:	e4 f3       	brlt	.-8      	; 0x2732 <__divsf3_pse+0x6c>
    273a:	98 3e       	cpi	r25, 0xE8	; 232
    273c:	d4 f3       	brlt	.-12     	; 0x2732 <__divsf3_pse+0x6c>
    273e:	86 95       	lsr	r24
    2740:	77 95       	ror	r23
    2742:	67 95       	ror	r22
    2744:	b7 95       	ror	r27
    2746:	f7 95       	ror	r31
    2748:	9f 5f       	subi	r25, 0xFF	; 255
    274a:	c9 f7       	brne	.-14     	; 0x273e <__divsf3_pse+0x78>
    274c:	88 0f       	add	r24, r24
    274e:	91 1d       	adc	r25, r1
    2750:	96 95       	lsr	r25
    2752:	87 95       	ror	r24
    2754:	97 f9       	bld	r25, 7
    2756:	08 95       	ret
    2758:	e1 e0       	ldi	r30, 0x01	; 1
    275a:	66 0f       	add	r22, r22
    275c:	77 1f       	adc	r23, r23
    275e:	88 1f       	adc	r24, r24
    2760:	bb 1f       	adc	r27, r27
    2762:	62 17       	cp	r22, r18
    2764:	73 07       	cpc	r23, r19
    2766:	84 07       	cpc	r24, r20
    2768:	ba 07       	cpc	r27, r26
    276a:	20 f0       	brcs	.+8      	; 0x2774 <__divsf3_pse+0xae>
    276c:	62 1b       	sub	r22, r18
    276e:	73 0b       	sbc	r23, r19
    2770:	84 0b       	sbc	r24, r20
    2772:	ba 0b       	sbc	r27, r26
    2774:	ee 1f       	adc	r30, r30
    2776:	88 f7       	brcc	.-30     	; 0x275a <__divsf3_pse+0x94>
    2778:	e0 95       	com	r30
    277a:	08 95       	ret

0000277c <__floatunsisf>:
    277c:	e8 94       	clt
    277e:	09 c0       	rjmp	.+18     	; 0x2792 <__floatsisf+0x12>

00002780 <__floatsisf>:
    2780:	97 fb       	bst	r25, 7
    2782:	3e f4       	brtc	.+14     	; 0x2792 <__floatsisf+0x12>
    2784:	90 95       	com	r25
    2786:	80 95       	com	r24
    2788:	70 95       	com	r23
    278a:	61 95       	neg	r22
    278c:	7f 4f       	sbci	r23, 0xFF	; 255
    278e:	8f 4f       	sbci	r24, 0xFF	; 255
    2790:	9f 4f       	sbci	r25, 0xFF	; 255
    2792:	99 23       	and	r25, r25
    2794:	a9 f0       	breq	.+42     	; 0x27c0 <__floatsisf+0x40>
    2796:	f9 2f       	mov	r31, r25
    2798:	96 e9       	ldi	r25, 0x96	; 150
    279a:	bb 27       	eor	r27, r27
    279c:	93 95       	inc	r25
    279e:	f6 95       	lsr	r31
    27a0:	87 95       	ror	r24
    27a2:	77 95       	ror	r23
    27a4:	67 95       	ror	r22
    27a6:	b7 95       	ror	r27
    27a8:	f1 11       	cpse	r31, r1
    27aa:	f8 cf       	rjmp	.-16     	; 0x279c <__floatsisf+0x1c>
    27ac:	fa f4       	brpl	.+62     	; 0x27ec <__floatsisf+0x6c>
    27ae:	bb 0f       	add	r27, r27
    27b0:	11 f4       	brne	.+4      	; 0x27b6 <__floatsisf+0x36>
    27b2:	60 ff       	sbrs	r22, 0
    27b4:	1b c0       	rjmp	.+54     	; 0x27ec <__floatsisf+0x6c>
    27b6:	6f 5f       	subi	r22, 0xFF	; 255
    27b8:	7f 4f       	sbci	r23, 0xFF	; 255
    27ba:	8f 4f       	sbci	r24, 0xFF	; 255
    27bc:	9f 4f       	sbci	r25, 0xFF	; 255
    27be:	16 c0       	rjmp	.+44     	; 0x27ec <__floatsisf+0x6c>
    27c0:	88 23       	and	r24, r24
    27c2:	11 f0       	breq	.+4      	; 0x27c8 <__floatsisf+0x48>
    27c4:	96 e9       	ldi	r25, 0x96	; 150
    27c6:	11 c0       	rjmp	.+34     	; 0x27ea <__floatsisf+0x6a>
    27c8:	77 23       	and	r23, r23
    27ca:	21 f0       	breq	.+8      	; 0x27d4 <__floatsisf+0x54>
    27cc:	9e e8       	ldi	r25, 0x8E	; 142
    27ce:	87 2f       	mov	r24, r23
    27d0:	76 2f       	mov	r23, r22
    27d2:	05 c0       	rjmp	.+10     	; 0x27de <__floatsisf+0x5e>
    27d4:	66 23       	and	r22, r22
    27d6:	71 f0       	breq	.+28     	; 0x27f4 <__floatsisf+0x74>
    27d8:	96 e8       	ldi	r25, 0x86	; 134
    27da:	86 2f       	mov	r24, r22
    27dc:	70 e0       	ldi	r23, 0x00	; 0
    27de:	60 e0       	ldi	r22, 0x00	; 0
    27e0:	2a f0       	brmi	.+10     	; 0x27ec <__floatsisf+0x6c>
    27e2:	9a 95       	dec	r25
    27e4:	66 0f       	add	r22, r22
    27e6:	77 1f       	adc	r23, r23
    27e8:	88 1f       	adc	r24, r24
    27ea:	da f7       	brpl	.-10     	; 0x27e2 <__floatsisf+0x62>
    27ec:	88 0f       	add	r24, r24
    27ee:	96 95       	lsr	r25
    27f0:	87 95       	ror	r24
    27f2:	97 f9       	bld	r25, 7
    27f4:	08 95       	ret

000027f6 <__fp_cmp>:
    27f6:	99 0f       	add	r25, r25
    27f8:	00 08       	sbc	r0, r0
    27fa:	55 0f       	add	r21, r21
    27fc:	aa 0b       	sbc	r26, r26
    27fe:	e0 e8       	ldi	r30, 0x80	; 128
    2800:	fe ef       	ldi	r31, 0xFE	; 254
    2802:	16 16       	cp	r1, r22
    2804:	17 06       	cpc	r1, r23
    2806:	e8 07       	cpc	r30, r24
    2808:	f9 07       	cpc	r31, r25
    280a:	c0 f0       	brcs	.+48     	; 0x283c <__fp_cmp+0x46>
    280c:	12 16       	cp	r1, r18
    280e:	13 06       	cpc	r1, r19
    2810:	e4 07       	cpc	r30, r20
    2812:	f5 07       	cpc	r31, r21
    2814:	98 f0       	brcs	.+38     	; 0x283c <__fp_cmp+0x46>
    2816:	62 1b       	sub	r22, r18
    2818:	73 0b       	sbc	r23, r19
    281a:	84 0b       	sbc	r24, r20
    281c:	95 0b       	sbc	r25, r21
    281e:	39 f4       	brne	.+14     	; 0x282e <__fp_cmp+0x38>
    2820:	0a 26       	eor	r0, r26
    2822:	61 f0       	breq	.+24     	; 0x283c <__fp_cmp+0x46>
    2824:	23 2b       	or	r18, r19
    2826:	24 2b       	or	r18, r20
    2828:	25 2b       	or	r18, r21
    282a:	21 f4       	brne	.+8      	; 0x2834 <__fp_cmp+0x3e>
    282c:	08 95       	ret
    282e:	0a 26       	eor	r0, r26
    2830:	09 f4       	brne	.+2      	; 0x2834 <__fp_cmp+0x3e>
    2832:	a1 40       	sbci	r26, 0x01	; 1
    2834:	a6 95       	lsr	r26
    2836:	8f ef       	ldi	r24, 0xFF	; 255
    2838:	81 1d       	adc	r24, r1
    283a:	81 1d       	adc	r24, r1
    283c:	08 95       	ret

0000283e <__fp_inf>:
    283e:	97 f9       	bld	r25, 7
    2840:	9f 67       	ori	r25, 0x7F	; 127
    2842:	80 e8       	ldi	r24, 0x80	; 128
    2844:	70 e0       	ldi	r23, 0x00	; 0
    2846:	60 e0       	ldi	r22, 0x00	; 0
    2848:	08 95       	ret

0000284a <__fp_nan>:
    284a:	9f ef       	ldi	r25, 0xFF	; 255
    284c:	80 ec       	ldi	r24, 0xC0	; 192
    284e:	08 95       	ret

00002850 <__fp_pscA>:
    2850:	00 24       	eor	r0, r0
    2852:	0a 94       	dec	r0
    2854:	16 16       	cp	r1, r22
    2856:	17 06       	cpc	r1, r23
    2858:	18 06       	cpc	r1, r24
    285a:	09 06       	cpc	r0, r25
    285c:	08 95       	ret

0000285e <__fp_pscB>:
    285e:	00 24       	eor	r0, r0
    2860:	0a 94       	dec	r0
    2862:	12 16       	cp	r1, r18
    2864:	13 06       	cpc	r1, r19
    2866:	14 06       	cpc	r1, r20
    2868:	05 06       	cpc	r0, r21
    286a:	08 95       	ret

0000286c <__fp_round>:
    286c:	09 2e       	mov	r0, r25
    286e:	03 94       	inc	r0
    2870:	00 0c       	add	r0, r0
    2872:	11 f4       	brne	.+4      	; 0x2878 <__fp_round+0xc>
    2874:	88 23       	and	r24, r24
    2876:	52 f0       	brmi	.+20     	; 0x288c <__fp_round+0x20>
    2878:	bb 0f       	add	r27, r27
    287a:	40 f4       	brcc	.+16     	; 0x288c <__fp_round+0x20>
    287c:	bf 2b       	or	r27, r31
    287e:	11 f4       	brne	.+4      	; 0x2884 <__fp_round+0x18>
    2880:	60 ff       	sbrs	r22, 0
    2882:	04 c0       	rjmp	.+8      	; 0x288c <__fp_round+0x20>
    2884:	6f 5f       	subi	r22, 0xFF	; 255
    2886:	7f 4f       	sbci	r23, 0xFF	; 255
    2888:	8f 4f       	sbci	r24, 0xFF	; 255
    288a:	9f 4f       	sbci	r25, 0xFF	; 255
    288c:	08 95       	ret

0000288e <__fp_split3>:
    288e:	57 fd       	sbrc	r21, 7
    2890:	90 58       	subi	r25, 0x80	; 128
    2892:	44 0f       	add	r20, r20
    2894:	55 1f       	adc	r21, r21
    2896:	59 f0       	breq	.+22     	; 0x28ae <__fp_splitA+0x10>
    2898:	5f 3f       	cpi	r21, 0xFF	; 255
    289a:	71 f0       	breq	.+28     	; 0x28b8 <__fp_splitA+0x1a>
    289c:	47 95       	ror	r20

0000289e <__fp_splitA>:
    289e:	88 0f       	add	r24, r24
    28a0:	97 fb       	bst	r25, 7
    28a2:	99 1f       	adc	r25, r25
    28a4:	61 f0       	breq	.+24     	; 0x28be <__fp_splitA+0x20>
    28a6:	9f 3f       	cpi	r25, 0xFF	; 255
    28a8:	79 f0       	breq	.+30     	; 0x28c8 <__fp_splitA+0x2a>
    28aa:	87 95       	ror	r24
    28ac:	08 95       	ret
    28ae:	12 16       	cp	r1, r18
    28b0:	13 06       	cpc	r1, r19
    28b2:	14 06       	cpc	r1, r20
    28b4:	55 1f       	adc	r21, r21
    28b6:	f2 cf       	rjmp	.-28     	; 0x289c <__fp_split3+0xe>
    28b8:	46 95       	lsr	r20
    28ba:	f1 df       	rcall	.-30     	; 0x289e <__fp_splitA>
    28bc:	08 c0       	rjmp	.+16     	; 0x28ce <__fp_splitA+0x30>
    28be:	16 16       	cp	r1, r22
    28c0:	17 06       	cpc	r1, r23
    28c2:	18 06       	cpc	r1, r24
    28c4:	99 1f       	adc	r25, r25
    28c6:	f1 cf       	rjmp	.-30     	; 0x28aa <__fp_splitA+0xc>
    28c8:	86 95       	lsr	r24
    28ca:	71 05       	cpc	r23, r1
    28cc:	61 05       	cpc	r22, r1
    28ce:	08 94       	sec
    28d0:	08 95       	ret

000028d2 <__fp_zero>:
    28d2:	e8 94       	clt

000028d4 <__fp_szero>:
    28d4:	bb 27       	eor	r27, r27
    28d6:	66 27       	eor	r22, r22
    28d8:	77 27       	eor	r23, r23
    28da:	cb 01       	movw	r24, r22
    28dc:	97 f9       	bld	r25, 7
    28de:	08 95       	ret

000028e0 <__gesf2>:
    28e0:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <__fp_cmp>
    28e4:	08 f4       	brcc	.+2      	; 0x28e8 <__gesf2+0x8>
    28e6:	8f ef       	ldi	r24, 0xFF	; 255
    28e8:	08 95       	ret

000028ea <__mulsf3>:
    28ea:	0e 94 88 14 	call	0x2910	; 0x2910 <__mulsf3x>
    28ee:	0c 94 36 14 	jmp	0x286c	; 0x286c <__fp_round>
    28f2:	0e 94 28 14 	call	0x2850	; 0x2850 <__fp_pscA>
    28f6:	38 f0       	brcs	.+14     	; 0x2906 <__mulsf3+0x1c>
    28f8:	0e 94 2f 14 	call	0x285e	; 0x285e <__fp_pscB>
    28fc:	20 f0       	brcs	.+8      	; 0x2906 <__mulsf3+0x1c>
    28fe:	95 23       	and	r25, r21
    2900:	11 f0       	breq	.+4      	; 0x2906 <__mulsf3+0x1c>
    2902:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__fp_inf>
    2906:	0c 94 25 14 	jmp	0x284a	; 0x284a <__fp_nan>
    290a:	11 24       	eor	r1, r1
    290c:	0c 94 6a 14 	jmp	0x28d4	; 0x28d4 <__fp_szero>

00002910 <__mulsf3x>:
    2910:	0e 94 47 14 	call	0x288e	; 0x288e <__fp_split3>
    2914:	70 f3       	brcs	.-36     	; 0x28f2 <__mulsf3+0x8>

00002916 <__mulsf3_pse>:
    2916:	95 9f       	mul	r25, r21
    2918:	c1 f3       	breq	.-16     	; 0x290a <__mulsf3+0x20>
    291a:	95 0f       	add	r25, r21
    291c:	50 e0       	ldi	r21, 0x00	; 0
    291e:	55 1f       	adc	r21, r21
    2920:	62 9f       	mul	r22, r18
    2922:	f0 01       	movw	r30, r0
    2924:	72 9f       	mul	r23, r18
    2926:	bb 27       	eor	r27, r27
    2928:	f0 0d       	add	r31, r0
    292a:	b1 1d       	adc	r27, r1
    292c:	63 9f       	mul	r22, r19
    292e:	aa 27       	eor	r26, r26
    2930:	f0 0d       	add	r31, r0
    2932:	b1 1d       	adc	r27, r1
    2934:	aa 1f       	adc	r26, r26
    2936:	64 9f       	mul	r22, r20
    2938:	66 27       	eor	r22, r22
    293a:	b0 0d       	add	r27, r0
    293c:	a1 1d       	adc	r26, r1
    293e:	66 1f       	adc	r22, r22
    2940:	82 9f       	mul	r24, r18
    2942:	22 27       	eor	r18, r18
    2944:	b0 0d       	add	r27, r0
    2946:	a1 1d       	adc	r26, r1
    2948:	62 1f       	adc	r22, r18
    294a:	73 9f       	mul	r23, r19
    294c:	b0 0d       	add	r27, r0
    294e:	a1 1d       	adc	r26, r1
    2950:	62 1f       	adc	r22, r18
    2952:	83 9f       	mul	r24, r19
    2954:	a0 0d       	add	r26, r0
    2956:	61 1d       	adc	r22, r1
    2958:	22 1f       	adc	r18, r18
    295a:	74 9f       	mul	r23, r20
    295c:	33 27       	eor	r19, r19
    295e:	a0 0d       	add	r26, r0
    2960:	61 1d       	adc	r22, r1
    2962:	23 1f       	adc	r18, r19
    2964:	84 9f       	mul	r24, r20
    2966:	60 0d       	add	r22, r0
    2968:	21 1d       	adc	r18, r1
    296a:	82 2f       	mov	r24, r18
    296c:	76 2f       	mov	r23, r22
    296e:	6a 2f       	mov	r22, r26
    2970:	11 24       	eor	r1, r1
    2972:	9f 57       	subi	r25, 0x7F	; 127
    2974:	50 40       	sbci	r21, 0x00	; 0
    2976:	9a f0       	brmi	.+38     	; 0x299e <__mulsf3_pse+0x88>
    2978:	f1 f0       	breq	.+60     	; 0x29b6 <__mulsf3_pse+0xa0>
    297a:	88 23       	and	r24, r24
    297c:	4a f0       	brmi	.+18     	; 0x2990 <__mulsf3_pse+0x7a>
    297e:	ee 0f       	add	r30, r30
    2980:	ff 1f       	adc	r31, r31
    2982:	bb 1f       	adc	r27, r27
    2984:	66 1f       	adc	r22, r22
    2986:	77 1f       	adc	r23, r23
    2988:	88 1f       	adc	r24, r24
    298a:	91 50       	subi	r25, 0x01	; 1
    298c:	50 40       	sbci	r21, 0x00	; 0
    298e:	a9 f7       	brne	.-22     	; 0x297a <__mulsf3_pse+0x64>
    2990:	9e 3f       	cpi	r25, 0xFE	; 254
    2992:	51 05       	cpc	r21, r1
    2994:	80 f0       	brcs	.+32     	; 0x29b6 <__mulsf3_pse+0xa0>
    2996:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__fp_inf>
    299a:	0c 94 6a 14 	jmp	0x28d4	; 0x28d4 <__fp_szero>
    299e:	5f 3f       	cpi	r21, 0xFF	; 255
    29a0:	e4 f3       	brlt	.-8      	; 0x299a <__mulsf3_pse+0x84>
    29a2:	98 3e       	cpi	r25, 0xE8	; 232
    29a4:	d4 f3       	brlt	.-12     	; 0x299a <__mulsf3_pse+0x84>
    29a6:	86 95       	lsr	r24
    29a8:	77 95       	ror	r23
    29aa:	67 95       	ror	r22
    29ac:	b7 95       	ror	r27
    29ae:	f7 95       	ror	r31
    29b0:	e7 95       	ror	r30
    29b2:	9f 5f       	subi	r25, 0xFF	; 255
    29b4:	c1 f7       	brne	.-16     	; 0x29a6 <__mulsf3_pse+0x90>
    29b6:	fe 2b       	or	r31, r30
    29b8:	88 0f       	add	r24, r24
    29ba:	91 1d       	adc	r25, r1
    29bc:	96 95       	lsr	r25
    29be:	87 95       	ror	r24
    29c0:	97 f9       	bld	r25, 7
    29c2:	08 95       	ret

000029c4 <vfprintf>:
    29c4:	a0 e1       	ldi	r26, 0x10	; 16
    29c6:	b0 e0       	ldi	r27, 0x00	; 0
    29c8:	e8 ee       	ldi	r30, 0xE8	; 232
    29ca:	f4 e1       	ldi	r31, 0x14	; 20
    29cc:	0c 94 79 18 	jmp	0x30f2	; 0x30f2 <__prologue_saves__>
    29d0:	7c 01       	movw	r14, r24
    29d2:	1b 01       	movw	r2, r22
    29d4:	6a 01       	movw	r12, r20
    29d6:	fc 01       	movw	r30, r24
    29d8:	16 82       	std	Z+6, r1	; 0x06
    29da:	17 82       	std	Z+7, r1	; 0x07
    29dc:	83 81       	ldd	r24, Z+3	; 0x03
    29de:	81 ff       	sbrs	r24, 1
    29e0:	44 c3       	rjmp	.+1672   	; 0x306a <vfprintf+0x6a6>
    29e2:	9e 01       	movw	r18, r28
    29e4:	2f 5f       	subi	r18, 0xFF	; 255
    29e6:	3f 4f       	sbci	r19, 0xFF	; 255
    29e8:	39 01       	movw	r6, r18
    29ea:	f7 01       	movw	r30, r14
    29ec:	93 81       	ldd	r25, Z+3	; 0x03
    29ee:	f1 01       	movw	r30, r2
    29f0:	93 fd       	sbrc	r25, 3
    29f2:	85 91       	lpm	r24, Z+
    29f4:	93 ff       	sbrs	r25, 3
    29f6:	81 91       	ld	r24, Z+
    29f8:	1f 01       	movw	r2, r30
    29fa:	88 23       	and	r24, r24
    29fc:	09 f4       	brne	.+2      	; 0x2a00 <vfprintf+0x3c>
    29fe:	31 c3       	rjmp	.+1634   	; 0x3062 <vfprintf+0x69e>
    2a00:	85 32       	cpi	r24, 0x25	; 37
    2a02:	39 f4       	brne	.+14     	; 0x2a12 <vfprintf+0x4e>
    2a04:	93 fd       	sbrc	r25, 3
    2a06:	85 91       	lpm	r24, Z+
    2a08:	93 ff       	sbrs	r25, 3
    2a0a:	81 91       	ld	r24, Z+
    2a0c:	1f 01       	movw	r2, r30
    2a0e:	85 32       	cpi	r24, 0x25	; 37
    2a10:	39 f4       	brne	.+14     	; 0x2a20 <vfprintf+0x5c>
    2a12:	b7 01       	movw	r22, r14
    2a14:	90 e0       	ldi	r25, 0x00	; 0
    2a16:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2a1a:	56 01       	movw	r10, r12
    2a1c:	65 01       	movw	r12, r10
    2a1e:	e5 cf       	rjmp	.-54     	; 0x29ea <vfprintf+0x26>
    2a20:	10 e0       	ldi	r17, 0x00	; 0
    2a22:	51 2c       	mov	r5, r1
    2a24:	91 2c       	mov	r9, r1
    2a26:	ff e1       	ldi	r31, 0x1F	; 31
    2a28:	f9 15       	cp	r31, r9
    2a2a:	d8 f0       	brcs	.+54     	; 0x2a62 <vfprintf+0x9e>
    2a2c:	8b 32       	cpi	r24, 0x2B	; 43
    2a2e:	79 f0       	breq	.+30     	; 0x2a4e <vfprintf+0x8a>
    2a30:	38 f4       	brcc	.+14     	; 0x2a40 <vfprintf+0x7c>
    2a32:	80 32       	cpi	r24, 0x20	; 32
    2a34:	79 f0       	breq	.+30     	; 0x2a54 <vfprintf+0x90>
    2a36:	83 32       	cpi	r24, 0x23	; 35
    2a38:	a1 f4       	brne	.+40     	; 0x2a62 <vfprintf+0x9e>
    2a3a:	f9 2d       	mov	r31, r9
    2a3c:	f0 61       	ori	r31, 0x10	; 16
    2a3e:	2e c0       	rjmp	.+92     	; 0x2a9c <vfprintf+0xd8>
    2a40:	8d 32       	cpi	r24, 0x2D	; 45
    2a42:	61 f0       	breq	.+24     	; 0x2a5c <vfprintf+0x98>
    2a44:	80 33       	cpi	r24, 0x30	; 48
    2a46:	69 f4       	brne	.+26     	; 0x2a62 <vfprintf+0x9e>
    2a48:	29 2d       	mov	r18, r9
    2a4a:	21 60       	ori	r18, 0x01	; 1
    2a4c:	2d c0       	rjmp	.+90     	; 0x2aa8 <vfprintf+0xe4>
    2a4e:	39 2d       	mov	r19, r9
    2a50:	32 60       	ori	r19, 0x02	; 2
    2a52:	93 2e       	mov	r9, r19
    2a54:	89 2d       	mov	r24, r9
    2a56:	84 60       	ori	r24, 0x04	; 4
    2a58:	98 2e       	mov	r9, r24
    2a5a:	2a c0       	rjmp	.+84     	; 0x2ab0 <vfprintf+0xec>
    2a5c:	e9 2d       	mov	r30, r9
    2a5e:	e8 60       	ori	r30, 0x08	; 8
    2a60:	15 c0       	rjmp	.+42     	; 0x2a8c <vfprintf+0xc8>
    2a62:	97 fc       	sbrc	r9, 7
    2a64:	2d c0       	rjmp	.+90     	; 0x2ac0 <vfprintf+0xfc>
    2a66:	20 ed       	ldi	r18, 0xD0	; 208
    2a68:	28 0f       	add	r18, r24
    2a6a:	2a 30       	cpi	r18, 0x0A	; 10
    2a6c:	88 f4       	brcc	.+34     	; 0x2a90 <vfprintf+0xcc>
    2a6e:	96 fe       	sbrs	r9, 6
    2a70:	06 c0       	rjmp	.+12     	; 0x2a7e <vfprintf+0xba>
    2a72:	3a e0       	ldi	r19, 0x0A	; 10
    2a74:	13 9f       	mul	r17, r19
    2a76:	20 0d       	add	r18, r0
    2a78:	11 24       	eor	r1, r1
    2a7a:	12 2f       	mov	r17, r18
    2a7c:	19 c0       	rjmp	.+50     	; 0x2ab0 <vfprintf+0xec>
    2a7e:	8a e0       	ldi	r24, 0x0A	; 10
    2a80:	58 9e       	mul	r5, r24
    2a82:	20 0d       	add	r18, r0
    2a84:	11 24       	eor	r1, r1
    2a86:	52 2e       	mov	r5, r18
    2a88:	e9 2d       	mov	r30, r9
    2a8a:	e0 62       	ori	r30, 0x20	; 32
    2a8c:	9e 2e       	mov	r9, r30
    2a8e:	10 c0       	rjmp	.+32     	; 0x2ab0 <vfprintf+0xec>
    2a90:	8e 32       	cpi	r24, 0x2E	; 46
    2a92:	31 f4       	brne	.+12     	; 0x2aa0 <vfprintf+0xdc>
    2a94:	96 fc       	sbrc	r9, 6
    2a96:	e5 c2       	rjmp	.+1482   	; 0x3062 <vfprintf+0x69e>
    2a98:	f9 2d       	mov	r31, r9
    2a9a:	f0 64       	ori	r31, 0x40	; 64
    2a9c:	9f 2e       	mov	r9, r31
    2a9e:	08 c0       	rjmp	.+16     	; 0x2ab0 <vfprintf+0xec>
    2aa0:	8c 36       	cpi	r24, 0x6C	; 108
    2aa2:	21 f4       	brne	.+8      	; 0x2aac <vfprintf+0xe8>
    2aa4:	29 2d       	mov	r18, r9
    2aa6:	20 68       	ori	r18, 0x80	; 128
    2aa8:	92 2e       	mov	r9, r18
    2aaa:	02 c0       	rjmp	.+4      	; 0x2ab0 <vfprintf+0xec>
    2aac:	88 36       	cpi	r24, 0x68	; 104
    2aae:	41 f4       	brne	.+16     	; 0x2ac0 <vfprintf+0xfc>
    2ab0:	f1 01       	movw	r30, r2
    2ab2:	93 fd       	sbrc	r25, 3
    2ab4:	85 91       	lpm	r24, Z+
    2ab6:	93 ff       	sbrs	r25, 3
    2ab8:	81 91       	ld	r24, Z+
    2aba:	1f 01       	movw	r2, r30
    2abc:	81 11       	cpse	r24, r1
    2abe:	b3 cf       	rjmp	.-154    	; 0x2a26 <vfprintf+0x62>
    2ac0:	9b eb       	ldi	r25, 0xBB	; 187
    2ac2:	98 0f       	add	r25, r24
    2ac4:	93 30       	cpi	r25, 0x03	; 3
    2ac6:	20 f4       	brcc	.+8      	; 0x2ad0 <vfprintf+0x10c>
    2ac8:	99 2d       	mov	r25, r9
    2aca:	90 61       	ori	r25, 0x10	; 16
    2acc:	80 5e       	subi	r24, 0xE0	; 224
    2ace:	07 c0       	rjmp	.+14     	; 0x2ade <vfprintf+0x11a>
    2ad0:	9b e9       	ldi	r25, 0x9B	; 155
    2ad2:	98 0f       	add	r25, r24
    2ad4:	93 30       	cpi	r25, 0x03	; 3
    2ad6:	08 f0       	brcs	.+2      	; 0x2ada <vfprintf+0x116>
    2ad8:	66 c1       	rjmp	.+716    	; 0x2da6 <vfprintf+0x3e2>
    2ada:	99 2d       	mov	r25, r9
    2adc:	9f 7e       	andi	r25, 0xEF	; 239
    2ade:	96 ff       	sbrs	r25, 6
    2ae0:	16 e0       	ldi	r17, 0x06	; 6
    2ae2:	9f 73       	andi	r25, 0x3F	; 63
    2ae4:	99 2e       	mov	r9, r25
    2ae6:	85 36       	cpi	r24, 0x65	; 101
    2ae8:	19 f4       	brne	.+6      	; 0x2af0 <vfprintf+0x12c>
    2aea:	90 64       	ori	r25, 0x40	; 64
    2aec:	99 2e       	mov	r9, r25
    2aee:	08 c0       	rjmp	.+16     	; 0x2b00 <vfprintf+0x13c>
    2af0:	86 36       	cpi	r24, 0x66	; 102
    2af2:	21 f4       	brne	.+8      	; 0x2afc <vfprintf+0x138>
    2af4:	39 2f       	mov	r19, r25
    2af6:	30 68       	ori	r19, 0x80	; 128
    2af8:	93 2e       	mov	r9, r19
    2afa:	02 c0       	rjmp	.+4      	; 0x2b00 <vfprintf+0x13c>
    2afc:	11 11       	cpse	r17, r1
    2afe:	11 50       	subi	r17, 0x01	; 1
    2b00:	97 fe       	sbrs	r9, 7
    2b02:	07 c0       	rjmp	.+14     	; 0x2b12 <vfprintf+0x14e>
    2b04:	1c 33       	cpi	r17, 0x3C	; 60
    2b06:	50 f4       	brcc	.+20     	; 0x2b1c <vfprintf+0x158>
    2b08:	44 24       	eor	r4, r4
    2b0a:	43 94       	inc	r4
    2b0c:	41 0e       	add	r4, r17
    2b0e:	27 e0       	ldi	r18, 0x07	; 7
    2b10:	0b c0       	rjmp	.+22     	; 0x2b28 <vfprintf+0x164>
    2b12:	18 30       	cpi	r17, 0x08	; 8
    2b14:	38 f0       	brcs	.+14     	; 0x2b24 <vfprintf+0x160>
    2b16:	27 e0       	ldi	r18, 0x07	; 7
    2b18:	17 e0       	ldi	r17, 0x07	; 7
    2b1a:	05 c0       	rjmp	.+10     	; 0x2b26 <vfprintf+0x162>
    2b1c:	27 e0       	ldi	r18, 0x07	; 7
    2b1e:	9c e3       	ldi	r25, 0x3C	; 60
    2b20:	49 2e       	mov	r4, r25
    2b22:	02 c0       	rjmp	.+4      	; 0x2b28 <vfprintf+0x164>
    2b24:	21 2f       	mov	r18, r17
    2b26:	41 2c       	mov	r4, r1
    2b28:	56 01       	movw	r10, r12
    2b2a:	84 e0       	ldi	r24, 0x04	; 4
    2b2c:	a8 0e       	add	r10, r24
    2b2e:	b1 1c       	adc	r11, r1
    2b30:	f6 01       	movw	r30, r12
    2b32:	60 81       	ld	r22, Z
    2b34:	71 81       	ldd	r23, Z+1	; 0x01
    2b36:	82 81       	ldd	r24, Z+2	; 0x02
    2b38:	93 81       	ldd	r25, Z+3	; 0x03
    2b3a:	04 2d       	mov	r16, r4
    2b3c:	a3 01       	movw	r20, r6
    2b3e:	0e 94 be 18 	call	0x317c	; 0x317c <__ftoa_engine>
    2b42:	6c 01       	movw	r12, r24
    2b44:	f9 81       	ldd	r31, Y+1	; 0x01
    2b46:	fc 87       	std	Y+12, r31	; 0x0c
    2b48:	f0 ff       	sbrs	r31, 0
    2b4a:	02 c0       	rjmp	.+4      	; 0x2b50 <vfprintf+0x18c>
    2b4c:	f3 ff       	sbrs	r31, 3
    2b4e:	06 c0       	rjmp	.+12     	; 0x2b5c <vfprintf+0x198>
    2b50:	91 fc       	sbrc	r9, 1
    2b52:	06 c0       	rjmp	.+12     	; 0x2b60 <vfprintf+0x19c>
    2b54:	92 fe       	sbrs	r9, 2
    2b56:	06 c0       	rjmp	.+12     	; 0x2b64 <vfprintf+0x1a0>
    2b58:	00 e2       	ldi	r16, 0x20	; 32
    2b5a:	05 c0       	rjmp	.+10     	; 0x2b66 <vfprintf+0x1a2>
    2b5c:	0d e2       	ldi	r16, 0x2D	; 45
    2b5e:	03 c0       	rjmp	.+6      	; 0x2b66 <vfprintf+0x1a2>
    2b60:	0b e2       	ldi	r16, 0x2B	; 43
    2b62:	01 c0       	rjmp	.+2      	; 0x2b66 <vfprintf+0x1a2>
    2b64:	00 e0       	ldi	r16, 0x00	; 0
    2b66:	8c 85       	ldd	r24, Y+12	; 0x0c
    2b68:	8c 70       	andi	r24, 0x0C	; 12
    2b6a:	19 f0       	breq	.+6      	; 0x2b72 <vfprintf+0x1ae>
    2b6c:	01 11       	cpse	r16, r1
    2b6e:	5a c2       	rjmp	.+1204   	; 0x3024 <vfprintf+0x660>
    2b70:	9b c2       	rjmp	.+1334   	; 0x30a8 <vfprintf+0x6e4>
    2b72:	97 fe       	sbrs	r9, 7
    2b74:	10 c0       	rjmp	.+32     	; 0x2b96 <vfprintf+0x1d2>
    2b76:	4c 0c       	add	r4, r12
    2b78:	fc 85       	ldd	r31, Y+12	; 0x0c
    2b7a:	f4 ff       	sbrs	r31, 4
    2b7c:	04 c0       	rjmp	.+8      	; 0x2b86 <vfprintf+0x1c2>
    2b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b80:	81 33       	cpi	r24, 0x31	; 49
    2b82:	09 f4       	brne	.+2      	; 0x2b86 <vfprintf+0x1c2>
    2b84:	4a 94       	dec	r4
    2b86:	14 14       	cp	r1, r4
    2b88:	74 f5       	brge	.+92     	; 0x2be6 <vfprintf+0x222>
    2b8a:	28 e0       	ldi	r18, 0x08	; 8
    2b8c:	24 15       	cp	r18, r4
    2b8e:	78 f5       	brcc	.+94     	; 0x2bee <vfprintf+0x22a>
    2b90:	88 e0       	ldi	r24, 0x08	; 8
    2b92:	48 2e       	mov	r4, r24
    2b94:	2c c0       	rjmp	.+88     	; 0x2bee <vfprintf+0x22a>
    2b96:	96 fc       	sbrc	r9, 6
    2b98:	2a c0       	rjmp	.+84     	; 0x2bee <vfprintf+0x22a>
    2b9a:	81 2f       	mov	r24, r17
    2b9c:	90 e0       	ldi	r25, 0x00	; 0
    2b9e:	8c 15       	cp	r24, r12
    2ba0:	9d 05       	cpc	r25, r13
    2ba2:	9c f0       	brlt	.+38     	; 0x2bca <vfprintf+0x206>
    2ba4:	3c ef       	ldi	r19, 0xFC	; 252
    2ba6:	c3 16       	cp	r12, r19
    2ba8:	3f ef       	ldi	r19, 0xFF	; 255
    2baa:	d3 06       	cpc	r13, r19
    2bac:	74 f0       	brlt	.+28     	; 0x2bca <vfprintf+0x206>
    2bae:	89 2d       	mov	r24, r9
    2bb0:	80 68       	ori	r24, 0x80	; 128
    2bb2:	98 2e       	mov	r9, r24
    2bb4:	0a c0       	rjmp	.+20     	; 0x2bca <vfprintf+0x206>
    2bb6:	e2 e0       	ldi	r30, 0x02	; 2
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	ec 0f       	add	r30, r28
    2bbc:	fd 1f       	adc	r31, r29
    2bbe:	e1 0f       	add	r30, r17
    2bc0:	f1 1d       	adc	r31, r1
    2bc2:	80 81       	ld	r24, Z
    2bc4:	80 33       	cpi	r24, 0x30	; 48
    2bc6:	19 f4       	brne	.+6      	; 0x2bce <vfprintf+0x20a>
    2bc8:	11 50       	subi	r17, 0x01	; 1
    2bca:	11 11       	cpse	r17, r1
    2bcc:	f4 cf       	rjmp	.-24     	; 0x2bb6 <vfprintf+0x1f2>
    2bce:	97 fe       	sbrs	r9, 7
    2bd0:	0e c0       	rjmp	.+28     	; 0x2bee <vfprintf+0x22a>
    2bd2:	44 24       	eor	r4, r4
    2bd4:	43 94       	inc	r4
    2bd6:	41 0e       	add	r4, r17
    2bd8:	81 2f       	mov	r24, r17
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	c8 16       	cp	r12, r24
    2bde:	d9 06       	cpc	r13, r25
    2be0:	2c f4       	brge	.+10     	; 0x2bec <vfprintf+0x228>
    2be2:	1c 19       	sub	r17, r12
    2be4:	04 c0       	rjmp	.+8      	; 0x2bee <vfprintf+0x22a>
    2be6:	44 24       	eor	r4, r4
    2be8:	43 94       	inc	r4
    2bea:	01 c0       	rjmp	.+2      	; 0x2bee <vfprintf+0x22a>
    2bec:	10 e0       	ldi	r17, 0x00	; 0
    2bee:	97 fe       	sbrs	r9, 7
    2bf0:	06 c0       	rjmp	.+12     	; 0x2bfe <vfprintf+0x23a>
    2bf2:	1c 14       	cp	r1, r12
    2bf4:	1d 04       	cpc	r1, r13
    2bf6:	34 f4       	brge	.+12     	; 0x2c04 <vfprintf+0x240>
    2bf8:	c6 01       	movw	r24, r12
    2bfa:	01 96       	adiw	r24, 0x01	; 1
    2bfc:	05 c0       	rjmp	.+10     	; 0x2c08 <vfprintf+0x244>
    2bfe:	85 e0       	ldi	r24, 0x05	; 5
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	02 c0       	rjmp	.+4      	; 0x2c08 <vfprintf+0x244>
    2c04:	81 e0       	ldi	r24, 0x01	; 1
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	01 11       	cpse	r16, r1
    2c0a:	01 96       	adiw	r24, 0x01	; 1
    2c0c:	11 23       	and	r17, r17
    2c0e:	31 f0       	breq	.+12     	; 0x2c1c <vfprintf+0x258>
    2c10:	21 2f       	mov	r18, r17
    2c12:	30 e0       	ldi	r19, 0x00	; 0
    2c14:	2f 5f       	subi	r18, 0xFF	; 255
    2c16:	3f 4f       	sbci	r19, 0xFF	; 255
    2c18:	82 0f       	add	r24, r18
    2c1a:	93 1f       	adc	r25, r19
    2c1c:	25 2d       	mov	r18, r5
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	82 17       	cp	r24, r18
    2c22:	93 07       	cpc	r25, r19
    2c24:	14 f4       	brge	.+4      	; 0x2c2a <vfprintf+0x266>
    2c26:	58 1a       	sub	r5, r24
    2c28:	01 c0       	rjmp	.+2      	; 0x2c2c <vfprintf+0x268>
    2c2a:	51 2c       	mov	r5, r1
    2c2c:	89 2d       	mov	r24, r9
    2c2e:	89 70       	andi	r24, 0x09	; 9
    2c30:	49 f4       	brne	.+18     	; 0x2c44 <vfprintf+0x280>
    2c32:	55 20       	and	r5, r5
    2c34:	39 f0       	breq	.+14     	; 0x2c44 <vfprintf+0x280>
    2c36:	b7 01       	movw	r22, r14
    2c38:	80 e2       	ldi	r24, 0x20	; 32
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2c40:	5a 94       	dec	r5
    2c42:	f7 cf       	rjmp	.-18     	; 0x2c32 <vfprintf+0x26e>
    2c44:	00 23       	and	r16, r16
    2c46:	29 f0       	breq	.+10     	; 0x2c52 <vfprintf+0x28e>
    2c48:	b7 01       	movw	r22, r14
    2c4a:	80 2f       	mov	r24, r16
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2c52:	93 fc       	sbrc	r9, 3
    2c54:	09 c0       	rjmp	.+18     	; 0x2c68 <vfprintf+0x2a4>
    2c56:	55 20       	and	r5, r5
    2c58:	39 f0       	breq	.+14     	; 0x2c68 <vfprintf+0x2a4>
    2c5a:	b7 01       	movw	r22, r14
    2c5c:	80 e3       	ldi	r24, 0x30	; 48
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2c64:	5a 94       	dec	r5
    2c66:	f7 cf       	rjmp	.-18     	; 0x2c56 <vfprintf+0x292>
    2c68:	97 fe       	sbrs	r9, 7
    2c6a:	4c c0       	rjmp	.+152    	; 0x2d04 <vfprintf+0x340>
    2c6c:	46 01       	movw	r8, r12
    2c6e:	d7 fe       	sbrs	r13, 7
    2c70:	02 c0       	rjmp	.+4      	; 0x2c76 <vfprintf+0x2b2>
    2c72:	81 2c       	mov	r8, r1
    2c74:	91 2c       	mov	r9, r1
    2c76:	c6 01       	movw	r24, r12
    2c78:	88 19       	sub	r24, r8
    2c7a:	99 09       	sbc	r25, r9
    2c7c:	f3 01       	movw	r30, r6
    2c7e:	e8 0f       	add	r30, r24
    2c80:	f9 1f       	adc	r31, r25
    2c82:	ed 87       	std	Y+13, r30	; 0x0d
    2c84:	fe 87       	std	Y+14, r31	; 0x0e
    2c86:	96 01       	movw	r18, r12
    2c88:	24 19       	sub	r18, r4
    2c8a:	31 09       	sbc	r19, r1
    2c8c:	2f 87       	std	Y+15, r18	; 0x0f
    2c8e:	38 8b       	std	Y+16, r19	; 0x10
    2c90:	01 2f       	mov	r16, r17
    2c92:	10 e0       	ldi	r17, 0x00	; 0
    2c94:	11 95       	neg	r17
    2c96:	01 95       	neg	r16
    2c98:	11 09       	sbc	r17, r1
    2c9a:	3f ef       	ldi	r19, 0xFF	; 255
    2c9c:	83 16       	cp	r8, r19
    2c9e:	93 06       	cpc	r9, r19
    2ca0:	29 f4       	brne	.+10     	; 0x2cac <vfprintf+0x2e8>
    2ca2:	b7 01       	movw	r22, r14
    2ca4:	8e e2       	ldi	r24, 0x2E	; 46
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2cac:	c8 14       	cp	r12, r8
    2cae:	d9 04       	cpc	r13, r9
    2cb0:	4c f0       	brlt	.+18     	; 0x2cc4 <vfprintf+0x300>
    2cb2:	8f 85       	ldd	r24, Y+15	; 0x0f
    2cb4:	98 89       	ldd	r25, Y+16	; 0x10
    2cb6:	88 15       	cp	r24, r8
    2cb8:	99 05       	cpc	r25, r9
    2cba:	24 f4       	brge	.+8      	; 0x2cc4 <vfprintf+0x300>
    2cbc:	ed 85       	ldd	r30, Y+13	; 0x0d
    2cbe:	fe 85       	ldd	r31, Y+14	; 0x0e
    2cc0:	81 81       	ldd	r24, Z+1	; 0x01
    2cc2:	01 c0       	rjmp	.+2      	; 0x2cc6 <vfprintf+0x302>
    2cc4:	80 e3       	ldi	r24, 0x30	; 48
    2cc6:	f1 e0       	ldi	r31, 0x01	; 1
    2cc8:	8f 1a       	sub	r8, r31
    2cca:	91 08       	sbc	r9, r1
    2ccc:	2d 85       	ldd	r18, Y+13	; 0x0d
    2cce:	3e 85       	ldd	r19, Y+14	; 0x0e
    2cd0:	2f 5f       	subi	r18, 0xFF	; 255
    2cd2:	3f 4f       	sbci	r19, 0xFF	; 255
    2cd4:	2d 87       	std	Y+13, r18	; 0x0d
    2cd6:	3e 87       	std	Y+14, r19	; 0x0e
    2cd8:	80 16       	cp	r8, r16
    2cda:	91 06       	cpc	r9, r17
    2cdc:	2c f0       	brlt	.+10     	; 0x2ce8 <vfprintf+0x324>
    2cde:	b7 01       	movw	r22, r14
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
    2ce2:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2ce6:	d9 cf       	rjmp	.-78     	; 0x2c9a <vfprintf+0x2d6>
    2ce8:	c8 14       	cp	r12, r8
    2cea:	d9 04       	cpc	r13, r9
    2cec:	41 f4       	brne	.+16     	; 0x2cfe <vfprintf+0x33a>
    2cee:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf0:	96 33       	cpi	r25, 0x36	; 54
    2cf2:	20 f4       	brcc	.+8      	; 0x2cfc <vfprintf+0x338>
    2cf4:	95 33       	cpi	r25, 0x35	; 53
    2cf6:	19 f4       	brne	.+6      	; 0x2cfe <vfprintf+0x33a>
    2cf8:	3c 85       	ldd	r19, Y+12	; 0x0c
    2cfa:	34 ff       	sbrs	r19, 4
    2cfc:	81 e3       	ldi	r24, 0x31	; 49
    2cfe:	b7 01       	movw	r22, r14
    2d00:	90 e0       	ldi	r25, 0x00	; 0
    2d02:	4e c0       	rjmp	.+156    	; 0x2da0 <vfprintf+0x3dc>
    2d04:	8a 81       	ldd	r24, Y+2	; 0x02
    2d06:	81 33       	cpi	r24, 0x31	; 49
    2d08:	19 f0       	breq	.+6      	; 0x2d10 <vfprintf+0x34c>
    2d0a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d0c:	9f 7e       	andi	r25, 0xEF	; 239
    2d0e:	9c 87       	std	Y+12, r25	; 0x0c
    2d10:	b7 01       	movw	r22, r14
    2d12:	90 e0       	ldi	r25, 0x00	; 0
    2d14:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d18:	11 11       	cpse	r17, r1
    2d1a:	05 c0       	rjmp	.+10     	; 0x2d26 <vfprintf+0x362>
    2d1c:	94 fc       	sbrc	r9, 4
    2d1e:	18 c0       	rjmp	.+48     	; 0x2d50 <vfprintf+0x38c>
    2d20:	85 e6       	ldi	r24, 0x65	; 101
    2d22:	90 e0       	ldi	r25, 0x00	; 0
    2d24:	17 c0       	rjmp	.+46     	; 0x2d54 <vfprintf+0x390>
    2d26:	b7 01       	movw	r22, r14
    2d28:	8e e2       	ldi	r24, 0x2E	; 46
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d30:	1e 5f       	subi	r17, 0xFE	; 254
    2d32:	82 e0       	ldi	r24, 0x02	; 2
    2d34:	01 e0       	ldi	r16, 0x01	; 1
    2d36:	08 0f       	add	r16, r24
    2d38:	f3 01       	movw	r30, r6
    2d3a:	e8 0f       	add	r30, r24
    2d3c:	f1 1d       	adc	r31, r1
    2d3e:	80 81       	ld	r24, Z
    2d40:	b7 01       	movw	r22, r14
    2d42:	90 e0       	ldi	r25, 0x00	; 0
    2d44:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d48:	80 2f       	mov	r24, r16
    2d4a:	01 13       	cpse	r16, r17
    2d4c:	f3 cf       	rjmp	.-26     	; 0x2d34 <vfprintf+0x370>
    2d4e:	e6 cf       	rjmp	.-52     	; 0x2d1c <vfprintf+0x358>
    2d50:	85 e4       	ldi	r24, 0x45	; 69
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	b7 01       	movw	r22, r14
    2d56:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d5a:	d7 fc       	sbrc	r13, 7
    2d5c:	06 c0       	rjmp	.+12     	; 0x2d6a <vfprintf+0x3a6>
    2d5e:	c1 14       	cp	r12, r1
    2d60:	d1 04       	cpc	r13, r1
    2d62:	41 f4       	brne	.+16     	; 0x2d74 <vfprintf+0x3b0>
    2d64:	ec 85       	ldd	r30, Y+12	; 0x0c
    2d66:	e4 ff       	sbrs	r30, 4
    2d68:	05 c0       	rjmp	.+10     	; 0x2d74 <vfprintf+0x3b0>
    2d6a:	d1 94       	neg	r13
    2d6c:	c1 94       	neg	r12
    2d6e:	d1 08       	sbc	r13, r1
    2d70:	8d e2       	ldi	r24, 0x2D	; 45
    2d72:	01 c0       	rjmp	.+2      	; 0x2d76 <vfprintf+0x3b2>
    2d74:	8b e2       	ldi	r24, 0x2B	; 43
    2d76:	b7 01       	movw	r22, r14
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d7e:	80 e3       	ldi	r24, 0x30	; 48
    2d80:	2a e0       	ldi	r18, 0x0A	; 10
    2d82:	c2 16       	cp	r12, r18
    2d84:	d1 04       	cpc	r13, r1
    2d86:	2c f0       	brlt	.+10     	; 0x2d92 <vfprintf+0x3ce>
    2d88:	8f 5f       	subi	r24, 0xFF	; 255
    2d8a:	fa e0       	ldi	r31, 0x0A	; 10
    2d8c:	cf 1a       	sub	r12, r31
    2d8e:	d1 08       	sbc	r13, r1
    2d90:	f7 cf       	rjmp	.-18     	; 0x2d80 <vfprintf+0x3bc>
    2d92:	b7 01       	movw	r22, r14
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2d9a:	b7 01       	movw	r22, r14
    2d9c:	c6 01       	movw	r24, r12
    2d9e:	c0 96       	adiw	r24, 0x30	; 48
    2da0:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2da4:	54 c1       	rjmp	.+680    	; 0x304e <vfprintf+0x68a>
    2da6:	83 36       	cpi	r24, 0x63	; 99
    2da8:	31 f0       	breq	.+12     	; 0x2db6 <vfprintf+0x3f2>
    2daa:	83 37       	cpi	r24, 0x73	; 115
    2dac:	79 f0       	breq	.+30     	; 0x2dcc <vfprintf+0x408>
    2dae:	83 35       	cpi	r24, 0x53	; 83
    2db0:	09 f0       	breq	.+2      	; 0x2db4 <vfprintf+0x3f0>
    2db2:	56 c0       	rjmp	.+172    	; 0x2e60 <vfprintf+0x49c>
    2db4:	20 c0       	rjmp	.+64     	; 0x2df6 <vfprintf+0x432>
    2db6:	56 01       	movw	r10, r12
    2db8:	32 e0       	ldi	r19, 0x02	; 2
    2dba:	a3 0e       	add	r10, r19
    2dbc:	b1 1c       	adc	r11, r1
    2dbe:	f6 01       	movw	r30, r12
    2dc0:	80 81       	ld	r24, Z
    2dc2:	89 83       	std	Y+1, r24	; 0x01
    2dc4:	01 e0       	ldi	r16, 0x01	; 1
    2dc6:	10 e0       	ldi	r17, 0x00	; 0
    2dc8:	63 01       	movw	r12, r6
    2dca:	12 c0       	rjmp	.+36     	; 0x2df0 <vfprintf+0x42c>
    2dcc:	56 01       	movw	r10, r12
    2dce:	f2 e0       	ldi	r31, 0x02	; 2
    2dd0:	af 0e       	add	r10, r31
    2dd2:	b1 1c       	adc	r11, r1
    2dd4:	f6 01       	movw	r30, r12
    2dd6:	c0 80       	ld	r12, Z
    2dd8:	d1 80       	ldd	r13, Z+1	; 0x01
    2dda:	96 fe       	sbrs	r9, 6
    2ddc:	03 c0       	rjmp	.+6      	; 0x2de4 <vfprintf+0x420>
    2dde:	61 2f       	mov	r22, r17
    2de0:	70 e0       	ldi	r23, 0x00	; 0
    2de2:	02 c0       	rjmp	.+4      	; 0x2de8 <vfprintf+0x424>
    2de4:	6f ef       	ldi	r22, 0xFF	; 255
    2de6:	7f ef       	ldi	r23, 0xFF	; 255
    2de8:	c6 01       	movw	r24, r12
    2dea:	0e 94 b3 19 	call	0x3366	; 0x3366 <strnlen>
    2dee:	8c 01       	movw	r16, r24
    2df0:	f9 2d       	mov	r31, r9
    2df2:	ff 77       	andi	r31, 0x7F	; 127
    2df4:	14 c0       	rjmp	.+40     	; 0x2e1e <vfprintf+0x45a>
    2df6:	56 01       	movw	r10, r12
    2df8:	22 e0       	ldi	r18, 0x02	; 2
    2dfa:	a2 0e       	add	r10, r18
    2dfc:	b1 1c       	adc	r11, r1
    2dfe:	f6 01       	movw	r30, r12
    2e00:	c0 80       	ld	r12, Z
    2e02:	d1 80       	ldd	r13, Z+1	; 0x01
    2e04:	96 fe       	sbrs	r9, 6
    2e06:	03 c0       	rjmp	.+6      	; 0x2e0e <vfprintf+0x44a>
    2e08:	61 2f       	mov	r22, r17
    2e0a:	70 e0       	ldi	r23, 0x00	; 0
    2e0c:	02 c0       	rjmp	.+4      	; 0x2e12 <vfprintf+0x44e>
    2e0e:	6f ef       	ldi	r22, 0xFF	; 255
    2e10:	7f ef       	ldi	r23, 0xFF	; 255
    2e12:	c6 01       	movw	r24, r12
    2e14:	0e 94 96 19 	call	0x332c	; 0x332c <strnlen_P>
    2e18:	8c 01       	movw	r16, r24
    2e1a:	f9 2d       	mov	r31, r9
    2e1c:	f0 68       	ori	r31, 0x80	; 128
    2e1e:	9f 2e       	mov	r9, r31
    2e20:	f3 fd       	sbrc	r31, 3
    2e22:	1a c0       	rjmp	.+52     	; 0x2e58 <vfprintf+0x494>
    2e24:	85 2d       	mov	r24, r5
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	08 17       	cp	r16, r24
    2e2a:	19 07       	cpc	r17, r25
    2e2c:	a8 f4       	brcc	.+42     	; 0x2e58 <vfprintf+0x494>
    2e2e:	b7 01       	movw	r22, r14
    2e30:	80 e2       	ldi	r24, 0x20	; 32
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2e38:	5a 94       	dec	r5
    2e3a:	f4 cf       	rjmp	.-24     	; 0x2e24 <vfprintf+0x460>
    2e3c:	f6 01       	movw	r30, r12
    2e3e:	97 fc       	sbrc	r9, 7
    2e40:	85 91       	lpm	r24, Z+
    2e42:	97 fe       	sbrs	r9, 7
    2e44:	81 91       	ld	r24, Z+
    2e46:	6f 01       	movw	r12, r30
    2e48:	b7 01       	movw	r22, r14
    2e4a:	90 e0       	ldi	r25, 0x00	; 0
    2e4c:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2e50:	51 10       	cpse	r5, r1
    2e52:	5a 94       	dec	r5
    2e54:	01 50       	subi	r16, 0x01	; 1
    2e56:	11 09       	sbc	r17, r1
    2e58:	01 15       	cp	r16, r1
    2e5a:	11 05       	cpc	r17, r1
    2e5c:	79 f7       	brne	.-34     	; 0x2e3c <vfprintf+0x478>
    2e5e:	f7 c0       	rjmp	.+494    	; 0x304e <vfprintf+0x68a>
    2e60:	84 36       	cpi	r24, 0x64	; 100
    2e62:	11 f0       	breq	.+4      	; 0x2e68 <vfprintf+0x4a4>
    2e64:	89 36       	cpi	r24, 0x69	; 105
    2e66:	61 f5       	brne	.+88     	; 0x2ec0 <vfprintf+0x4fc>
    2e68:	56 01       	movw	r10, r12
    2e6a:	97 fe       	sbrs	r9, 7
    2e6c:	09 c0       	rjmp	.+18     	; 0x2e80 <vfprintf+0x4bc>
    2e6e:	24 e0       	ldi	r18, 0x04	; 4
    2e70:	a2 0e       	add	r10, r18
    2e72:	b1 1c       	adc	r11, r1
    2e74:	f6 01       	movw	r30, r12
    2e76:	60 81       	ld	r22, Z
    2e78:	71 81       	ldd	r23, Z+1	; 0x01
    2e7a:	82 81       	ldd	r24, Z+2	; 0x02
    2e7c:	93 81       	ldd	r25, Z+3	; 0x03
    2e7e:	0a c0       	rjmp	.+20     	; 0x2e94 <vfprintf+0x4d0>
    2e80:	f2 e0       	ldi	r31, 0x02	; 2
    2e82:	af 0e       	add	r10, r31
    2e84:	b1 1c       	adc	r11, r1
    2e86:	f6 01       	movw	r30, r12
    2e88:	60 81       	ld	r22, Z
    2e8a:	71 81       	ldd	r23, Z+1	; 0x01
    2e8c:	07 2e       	mov	r0, r23
    2e8e:	00 0c       	add	r0, r0
    2e90:	88 0b       	sbc	r24, r24
    2e92:	99 0b       	sbc	r25, r25
    2e94:	f9 2d       	mov	r31, r9
    2e96:	ff 76       	andi	r31, 0x6F	; 111
    2e98:	9f 2e       	mov	r9, r31
    2e9a:	97 ff       	sbrs	r25, 7
    2e9c:	09 c0       	rjmp	.+18     	; 0x2eb0 <vfprintf+0x4ec>
    2e9e:	90 95       	com	r25
    2ea0:	80 95       	com	r24
    2ea2:	70 95       	com	r23
    2ea4:	61 95       	neg	r22
    2ea6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ea8:	8f 4f       	sbci	r24, 0xFF	; 255
    2eaa:	9f 4f       	sbci	r25, 0xFF	; 255
    2eac:	f0 68       	ori	r31, 0x80	; 128
    2eae:	9f 2e       	mov	r9, r31
    2eb0:	2a e0       	ldi	r18, 0x0A	; 10
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	a3 01       	movw	r20, r6
    2eb6:	0e 94 1c 1a 	call	0x3438	; 0x3438 <__ultoa_invert>
    2eba:	c8 2e       	mov	r12, r24
    2ebc:	c6 18       	sub	r12, r6
    2ebe:	3f c0       	rjmp	.+126    	; 0x2f3e <vfprintf+0x57a>
    2ec0:	09 2d       	mov	r16, r9
    2ec2:	85 37       	cpi	r24, 0x75	; 117
    2ec4:	21 f4       	brne	.+8      	; 0x2ece <vfprintf+0x50a>
    2ec6:	0f 7e       	andi	r16, 0xEF	; 239
    2ec8:	2a e0       	ldi	r18, 0x0A	; 10
    2eca:	30 e0       	ldi	r19, 0x00	; 0
    2ecc:	1d c0       	rjmp	.+58     	; 0x2f08 <vfprintf+0x544>
    2ece:	09 7f       	andi	r16, 0xF9	; 249
    2ed0:	8f 36       	cpi	r24, 0x6F	; 111
    2ed2:	91 f0       	breq	.+36     	; 0x2ef8 <vfprintf+0x534>
    2ed4:	18 f4       	brcc	.+6      	; 0x2edc <vfprintf+0x518>
    2ed6:	88 35       	cpi	r24, 0x58	; 88
    2ed8:	59 f0       	breq	.+22     	; 0x2ef0 <vfprintf+0x52c>
    2eda:	c3 c0       	rjmp	.+390    	; 0x3062 <vfprintf+0x69e>
    2edc:	80 37       	cpi	r24, 0x70	; 112
    2ede:	19 f0       	breq	.+6      	; 0x2ee6 <vfprintf+0x522>
    2ee0:	88 37       	cpi	r24, 0x78	; 120
    2ee2:	11 f0       	breq	.+4      	; 0x2ee8 <vfprintf+0x524>
    2ee4:	be c0       	rjmp	.+380    	; 0x3062 <vfprintf+0x69e>
    2ee6:	00 61       	ori	r16, 0x10	; 16
    2ee8:	04 ff       	sbrs	r16, 4
    2eea:	09 c0       	rjmp	.+18     	; 0x2efe <vfprintf+0x53a>
    2eec:	04 60       	ori	r16, 0x04	; 4
    2eee:	07 c0       	rjmp	.+14     	; 0x2efe <vfprintf+0x53a>
    2ef0:	94 fe       	sbrs	r9, 4
    2ef2:	08 c0       	rjmp	.+16     	; 0x2f04 <vfprintf+0x540>
    2ef4:	06 60       	ori	r16, 0x06	; 6
    2ef6:	06 c0       	rjmp	.+12     	; 0x2f04 <vfprintf+0x540>
    2ef8:	28 e0       	ldi	r18, 0x08	; 8
    2efa:	30 e0       	ldi	r19, 0x00	; 0
    2efc:	05 c0       	rjmp	.+10     	; 0x2f08 <vfprintf+0x544>
    2efe:	20 e1       	ldi	r18, 0x10	; 16
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	02 c0       	rjmp	.+4      	; 0x2f08 <vfprintf+0x544>
    2f04:	20 e1       	ldi	r18, 0x10	; 16
    2f06:	32 e0       	ldi	r19, 0x02	; 2
    2f08:	56 01       	movw	r10, r12
    2f0a:	07 ff       	sbrs	r16, 7
    2f0c:	09 c0       	rjmp	.+18     	; 0x2f20 <vfprintf+0x55c>
    2f0e:	84 e0       	ldi	r24, 0x04	; 4
    2f10:	a8 0e       	add	r10, r24
    2f12:	b1 1c       	adc	r11, r1
    2f14:	f6 01       	movw	r30, r12
    2f16:	60 81       	ld	r22, Z
    2f18:	71 81       	ldd	r23, Z+1	; 0x01
    2f1a:	82 81       	ldd	r24, Z+2	; 0x02
    2f1c:	93 81       	ldd	r25, Z+3	; 0x03
    2f1e:	08 c0       	rjmp	.+16     	; 0x2f30 <vfprintf+0x56c>
    2f20:	f2 e0       	ldi	r31, 0x02	; 2
    2f22:	af 0e       	add	r10, r31
    2f24:	b1 1c       	adc	r11, r1
    2f26:	f6 01       	movw	r30, r12
    2f28:	60 81       	ld	r22, Z
    2f2a:	71 81       	ldd	r23, Z+1	; 0x01
    2f2c:	80 e0       	ldi	r24, 0x00	; 0
    2f2e:	90 e0       	ldi	r25, 0x00	; 0
    2f30:	a3 01       	movw	r20, r6
    2f32:	0e 94 1c 1a 	call	0x3438	; 0x3438 <__ultoa_invert>
    2f36:	c8 2e       	mov	r12, r24
    2f38:	c6 18       	sub	r12, r6
    2f3a:	0f 77       	andi	r16, 0x7F	; 127
    2f3c:	90 2e       	mov	r9, r16
    2f3e:	96 fe       	sbrs	r9, 6
    2f40:	0b c0       	rjmp	.+22     	; 0x2f58 <vfprintf+0x594>
    2f42:	09 2d       	mov	r16, r9
    2f44:	0e 7f       	andi	r16, 0xFE	; 254
    2f46:	c1 16       	cp	r12, r17
    2f48:	50 f4       	brcc	.+20     	; 0x2f5e <vfprintf+0x59a>
    2f4a:	94 fe       	sbrs	r9, 4
    2f4c:	0a c0       	rjmp	.+20     	; 0x2f62 <vfprintf+0x59e>
    2f4e:	92 fc       	sbrc	r9, 2
    2f50:	08 c0       	rjmp	.+16     	; 0x2f62 <vfprintf+0x59e>
    2f52:	09 2d       	mov	r16, r9
    2f54:	0e 7e       	andi	r16, 0xEE	; 238
    2f56:	05 c0       	rjmp	.+10     	; 0x2f62 <vfprintf+0x59e>
    2f58:	dc 2c       	mov	r13, r12
    2f5a:	09 2d       	mov	r16, r9
    2f5c:	03 c0       	rjmp	.+6      	; 0x2f64 <vfprintf+0x5a0>
    2f5e:	dc 2c       	mov	r13, r12
    2f60:	01 c0       	rjmp	.+2      	; 0x2f64 <vfprintf+0x5a0>
    2f62:	d1 2e       	mov	r13, r17
    2f64:	04 ff       	sbrs	r16, 4
    2f66:	0d c0       	rjmp	.+26     	; 0x2f82 <vfprintf+0x5be>
    2f68:	fe 01       	movw	r30, r28
    2f6a:	ec 0d       	add	r30, r12
    2f6c:	f1 1d       	adc	r31, r1
    2f6e:	80 81       	ld	r24, Z
    2f70:	80 33       	cpi	r24, 0x30	; 48
    2f72:	11 f4       	brne	.+4      	; 0x2f78 <vfprintf+0x5b4>
    2f74:	09 7e       	andi	r16, 0xE9	; 233
    2f76:	09 c0       	rjmp	.+18     	; 0x2f8a <vfprintf+0x5c6>
    2f78:	02 ff       	sbrs	r16, 2
    2f7a:	06 c0       	rjmp	.+12     	; 0x2f88 <vfprintf+0x5c4>
    2f7c:	d3 94       	inc	r13
    2f7e:	d3 94       	inc	r13
    2f80:	04 c0       	rjmp	.+8      	; 0x2f8a <vfprintf+0x5c6>
    2f82:	80 2f       	mov	r24, r16
    2f84:	86 78       	andi	r24, 0x86	; 134
    2f86:	09 f0       	breq	.+2      	; 0x2f8a <vfprintf+0x5c6>
    2f88:	d3 94       	inc	r13
    2f8a:	03 fd       	sbrc	r16, 3
    2f8c:	11 c0       	rjmp	.+34     	; 0x2fb0 <vfprintf+0x5ec>
    2f8e:	00 ff       	sbrs	r16, 0
    2f90:	06 c0       	rjmp	.+12     	; 0x2f9e <vfprintf+0x5da>
    2f92:	1c 2d       	mov	r17, r12
    2f94:	d5 14       	cp	r13, r5
    2f96:	80 f4       	brcc	.+32     	; 0x2fb8 <vfprintf+0x5f4>
    2f98:	15 0d       	add	r17, r5
    2f9a:	1d 19       	sub	r17, r13
    2f9c:	0d c0       	rjmp	.+26     	; 0x2fb8 <vfprintf+0x5f4>
    2f9e:	d5 14       	cp	r13, r5
    2fa0:	58 f4       	brcc	.+22     	; 0x2fb8 <vfprintf+0x5f4>
    2fa2:	b7 01       	movw	r22, r14
    2fa4:	80 e2       	ldi	r24, 0x20	; 32
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2fac:	d3 94       	inc	r13
    2fae:	f7 cf       	rjmp	.-18     	; 0x2f9e <vfprintf+0x5da>
    2fb0:	d5 14       	cp	r13, r5
    2fb2:	10 f4       	brcc	.+4      	; 0x2fb8 <vfprintf+0x5f4>
    2fb4:	5d 18       	sub	r5, r13
    2fb6:	01 c0       	rjmp	.+2      	; 0x2fba <vfprintf+0x5f6>
    2fb8:	51 2c       	mov	r5, r1
    2fba:	04 ff       	sbrs	r16, 4
    2fbc:	10 c0       	rjmp	.+32     	; 0x2fde <vfprintf+0x61a>
    2fbe:	b7 01       	movw	r22, r14
    2fc0:	80 e3       	ldi	r24, 0x30	; 48
    2fc2:	90 e0       	ldi	r25, 0x00	; 0
    2fc4:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2fc8:	02 ff       	sbrs	r16, 2
    2fca:	17 c0       	rjmp	.+46     	; 0x2ffa <vfprintf+0x636>
    2fcc:	01 fd       	sbrc	r16, 1
    2fce:	03 c0       	rjmp	.+6      	; 0x2fd6 <vfprintf+0x612>
    2fd0:	88 e7       	ldi	r24, 0x78	; 120
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	02 c0       	rjmp	.+4      	; 0x2fda <vfprintf+0x616>
    2fd6:	88 e5       	ldi	r24, 0x58	; 88
    2fd8:	90 e0       	ldi	r25, 0x00	; 0
    2fda:	b7 01       	movw	r22, r14
    2fdc:	0c c0       	rjmp	.+24     	; 0x2ff6 <vfprintf+0x632>
    2fde:	80 2f       	mov	r24, r16
    2fe0:	86 78       	andi	r24, 0x86	; 134
    2fe2:	59 f0       	breq	.+22     	; 0x2ffa <vfprintf+0x636>
    2fe4:	01 ff       	sbrs	r16, 1
    2fe6:	02 c0       	rjmp	.+4      	; 0x2fec <vfprintf+0x628>
    2fe8:	8b e2       	ldi	r24, 0x2B	; 43
    2fea:	01 c0       	rjmp	.+2      	; 0x2fee <vfprintf+0x62a>
    2fec:	80 e2       	ldi	r24, 0x20	; 32
    2fee:	07 fd       	sbrc	r16, 7
    2ff0:	8d e2       	ldi	r24, 0x2D	; 45
    2ff2:	b7 01       	movw	r22, r14
    2ff4:	90 e0       	ldi	r25, 0x00	; 0
    2ff6:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    2ffa:	c1 16       	cp	r12, r17
    2ffc:	38 f4       	brcc	.+14     	; 0x300c <vfprintf+0x648>
    2ffe:	b7 01       	movw	r22, r14
    3000:	80 e3       	ldi	r24, 0x30	; 48
    3002:	90 e0       	ldi	r25, 0x00	; 0
    3004:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    3008:	11 50       	subi	r17, 0x01	; 1
    300a:	f7 cf       	rjmp	.-18     	; 0x2ffa <vfprintf+0x636>
    300c:	ca 94       	dec	r12
    300e:	f3 01       	movw	r30, r6
    3010:	ec 0d       	add	r30, r12
    3012:	f1 1d       	adc	r31, r1
    3014:	80 81       	ld	r24, Z
    3016:	b7 01       	movw	r22, r14
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    301e:	c1 10       	cpse	r12, r1
    3020:	f5 cf       	rjmp	.-22     	; 0x300c <vfprintf+0x648>
    3022:	15 c0       	rjmp	.+42     	; 0x304e <vfprintf+0x68a>
    3024:	f4 e0       	ldi	r31, 0x04	; 4
    3026:	f5 15       	cp	r31, r5
    3028:	60 f5       	brcc	.+88     	; 0x3082 <vfprintf+0x6be>
    302a:	84 e0       	ldi	r24, 0x04	; 4
    302c:	58 1a       	sub	r5, r24
    302e:	93 fe       	sbrs	r9, 3
    3030:	1f c0       	rjmp	.+62     	; 0x3070 <vfprintf+0x6ac>
    3032:	01 11       	cpse	r16, r1
    3034:	27 c0       	rjmp	.+78     	; 0x3084 <vfprintf+0x6c0>
    3036:	2c 85       	ldd	r18, Y+12	; 0x0c
    3038:	23 ff       	sbrs	r18, 3
    303a:	2a c0       	rjmp	.+84     	; 0x3090 <vfprintf+0x6cc>
    303c:	0a e0       	ldi	r16, 0x0A	; 10
    303e:	11 e0       	ldi	r17, 0x01	; 1
    3040:	39 2d       	mov	r19, r9
    3042:	30 71       	andi	r19, 0x10	; 16
    3044:	93 2e       	mov	r9, r19
    3046:	f8 01       	movw	r30, r16
    3048:	84 91       	lpm	r24, Z
    304a:	81 11       	cpse	r24, r1
    304c:	24 c0       	rjmp	.+72     	; 0x3096 <vfprintf+0x6d2>
    304e:	55 20       	and	r5, r5
    3050:	09 f4       	brne	.+2      	; 0x3054 <vfprintf+0x690>
    3052:	e4 cc       	rjmp	.-1592   	; 0x2a1c <vfprintf+0x58>
    3054:	b7 01       	movw	r22, r14
    3056:	80 e2       	ldi	r24, 0x20	; 32
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    305e:	5a 94       	dec	r5
    3060:	f6 cf       	rjmp	.-20     	; 0x304e <vfprintf+0x68a>
    3062:	f7 01       	movw	r30, r14
    3064:	86 81       	ldd	r24, Z+6	; 0x06
    3066:	97 81       	ldd	r25, Z+7	; 0x07
    3068:	26 c0       	rjmp	.+76     	; 0x30b6 <vfprintf+0x6f2>
    306a:	8f ef       	ldi	r24, 0xFF	; 255
    306c:	9f ef       	ldi	r25, 0xFF	; 255
    306e:	23 c0       	rjmp	.+70     	; 0x30b6 <vfprintf+0x6f2>
    3070:	b7 01       	movw	r22, r14
    3072:	80 e2       	ldi	r24, 0x20	; 32
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    307a:	5a 94       	dec	r5
    307c:	51 10       	cpse	r5, r1
    307e:	f8 cf       	rjmp	.-16     	; 0x3070 <vfprintf+0x6ac>
    3080:	d8 cf       	rjmp	.-80     	; 0x3032 <vfprintf+0x66e>
    3082:	51 2c       	mov	r5, r1
    3084:	b7 01       	movw	r22, r14
    3086:	80 2f       	mov	r24, r16
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    308e:	d3 cf       	rjmp	.-90     	; 0x3036 <vfprintf+0x672>
    3090:	0e e0       	ldi	r16, 0x0E	; 14
    3092:	11 e0       	ldi	r17, 0x01	; 1
    3094:	d5 cf       	rjmp	.-86     	; 0x3040 <vfprintf+0x67c>
    3096:	91 10       	cpse	r9, r1
    3098:	80 52       	subi	r24, 0x20	; 32
    309a:	b7 01       	movw	r22, r14
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	0e 94 be 19 	call	0x337c	; 0x337c <fputc>
    30a2:	0f 5f       	subi	r16, 0xFF	; 255
    30a4:	1f 4f       	sbci	r17, 0xFF	; 255
    30a6:	cf cf       	rjmp	.-98     	; 0x3046 <vfprintf+0x682>
    30a8:	23 e0       	ldi	r18, 0x03	; 3
    30aa:	25 15       	cp	r18, r5
    30ac:	10 f4       	brcc	.+4      	; 0x30b2 <vfprintf+0x6ee>
    30ae:	83 e0       	ldi	r24, 0x03	; 3
    30b0:	bd cf       	rjmp	.-134    	; 0x302c <vfprintf+0x668>
    30b2:	51 2c       	mov	r5, r1
    30b4:	c0 cf       	rjmp	.-128    	; 0x3036 <vfprintf+0x672>
    30b6:	60 96       	adiw	r28, 0x10	; 16
    30b8:	e2 e1       	ldi	r30, 0x12	; 18
    30ba:	0c 94 92 18 	jmp	0x3124	; 0x3124 <__epilogue_restores__>

000030be <__divmodhi4>:
    30be:	97 fb       	bst	r25, 7
    30c0:	07 2e       	mov	r0, r23
    30c2:	16 f4       	brtc	.+4      	; 0x30c8 <__divmodhi4+0xa>
    30c4:	00 94       	com	r0
    30c6:	07 d0       	rcall	.+14     	; 0x30d6 <__divmodhi4_neg1>
    30c8:	77 fd       	sbrc	r23, 7
    30ca:	09 d0       	rcall	.+18     	; 0x30de <__divmodhi4_neg2>
    30cc:	0e 94 aa 18 	call	0x3154	; 0x3154 <__udivmodhi4>
    30d0:	07 fc       	sbrc	r0, 7
    30d2:	05 d0       	rcall	.+10     	; 0x30de <__divmodhi4_neg2>
    30d4:	3e f4       	brtc	.+14     	; 0x30e4 <__divmodhi4_exit>

000030d6 <__divmodhi4_neg1>:
    30d6:	90 95       	com	r25
    30d8:	81 95       	neg	r24
    30da:	9f 4f       	sbci	r25, 0xFF	; 255
    30dc:	08 95       	ret

000030de <__divmodhi4_neg2>:
    30de:	70 95       	com	r23
    30e0:	61 95       	neg	r22
    30e2:	7f 4f       	sbci	r23, 0xFF	; 255

000030e4 <__divmodhi4_exit>:
    30e4:	08 95       	ret

000030e6 <__tablejump2__>:
    30e6:	ee 0f       	add	r30, r30
    30e8:	ff 1f       	adc	r31, r31
    30ea:	05 90       	lpm	r0, Z+
    30ec:	f4 91       	lpm	r31, Z
    30ee:	e0 2d       	mov	r30, r0
    30f0:	09 94       	ijmp

000030f2 <__prologue_saves__>:
    30f2:	2f 92       	push	r2
    30f4:	3f 92       	push	r3
    30f6:	4f 92       	push	r4
    30f8:	5f 92       	push	r5
    30fa:	6f 92       	push	r6
    30fc:	7f 92       	push	r7
    30fe:	8f 92       	push	r8
    3100:	9f 92       	push	r9
    3102:	af 92       	push	r10
    3104:	bf 92       	push	r11
    3106:	cf 92       	push	r12
    3108:	df 92       	push	r13
    310a:	ef 92       	push	r14
    310c:	ff 92       	push	r15
    310e:	0f 93       	push	r16
    3110:	1f 93       	push	r17
    3112:	cf 93       	push	r28
    3114:	df 93       	push	r29
    3116:	cd b7       	in	r28, 0x3d	; 61
    3118:	de b7       	in	r29, 0x3e	; 62
    311a:	ca 1b       	sub	r28, r26
    311c:	db 0b       	sbc	r29, r27
    311e:	cd bf       	out	0x3d, r28	; 61
    3120:	de bf       	out	0x3e, r29	; 62
    3122:	09 94       	ijmp

00003124 <__epilogue_restores__>:
    3124:	2a 88       	ldd	r2, Y+18	; 0x12
    3126:	39 88       	ldd	r3, Y+17	; 0x11
    3128:	48 88       	ldd	r4, Y+16	; 0x10
    312a:	5f 84       	ldd	r5, Y+15	; 0x0f
    312c:	6e 84       	ldd	r6, Y+14	; 0x0e
    312e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3130:	8c 84       	ldd	r8, Y+12	; 0x0c
    3132:	9b 84       	ldd	r9, Y+11	; 0x0b
    3134:	aa 84       	ldd	r10, Y+10	; 0x0a
    3136:	b9 84       	ldd	r11, Y+9	; 0x09
    3138:	c8 84       	ldd	r12, Y+8	; 0x08
    313a:	df 80       	ldd	r13, Y+7	; 0x07
    313c:	ee 80       	ldd	r14, Y+6	; 0x06
    313e:	fd 80       	ldd	r15, Y+5	; 0x05
    3140:	0c 81       	ldd	r16, Y+4	; 0x04
    3142:	1b 81       	ldd	r17, Y+3	; 0x03
    3144:	aa 81       	ldd	r26, Y+2	; 0x02
    3146:	b9 81       	ldd	r27, Y+1	; 0x01
    3148:	ce 0f       	add	r28, r30
    314a:	d1 1d       	adc	r29, r1
    314c:	cd bf       	out	0x3d, r28	; 61
    314e:	de bf       	out	0x3e, r29	; 62
    3150:	ed 01       	movw	r28, r26
    3152:	08 95       	ret

00003154 <__udivmodhi4>:
    3154:	aa 1b       	sub	r26, r26
    3156:	bb 1b       	sub	r27, r27
    3158:	51 e1       	ldi	r21, 0x11	; 17
    315a:	07 c0       	rjmp	.+14     	; 0x316a <__udivmodhi4_ep>

0000315c <__udivmodhi4_loop>:
    315c:	aa 1f       	adc	r26, r26
    315e:	bb 1f       	adc	r27, r27
    3160:	a6 17       	cp	r26, r22
    3162:	b7 07       	cpc	r27, r23
    3164:	10 f0       	brcs	.+4      	; 0x316a <__udivmodhi4_ep>
    3166:	a6 1b       	sub	r26, r22
    3168:	b7 0b       	sbc	r27, r23

0000316a <__udivmodhi4_ep>:
    316a:	88 1f       	adc	r24, r24
    316c:	99 1f       	adc	r25, r25
    316e:	5a 95       	dec	r21
    3170:	a9 f7       	brne	.-22     	; 0x315c <__udivmodhi4_loop>
    3172:	80 95       	com	r24
    3174:	90 95       	com	r25
    3176:	bc 01       	movw	r22, r24
    3178:	cd 01       	movw	r24, r26
    317a:	08 95       	ret

0000317c <__ftoa_engine>:
    317c:	28 30       	cpi	r18, 0x08	; 8
    317e:	08 f0       	brcs	.+2      	; 0x3182 <__ftoa_engine+0x6>
    3180:	27 e0       	ldi	r18, 0x07	; 7
    3182:	33 27       	eor	r19, r19
    3184:	da 01       	movw	r26, r20
    3186:	99 0f       	add	r25, r25
    3188:	31 1d       	adc	r19, r1
    318a:	87 fd       	sbrc	r24, 7
    318c:	91 60       	ori	r25, 0x01	; 1
    318e:	00 96       	adiw	r24, 0x00	; 0
    3190:	61 05       	cpc	r22, r1
    3192:	71 05       	cpc	r23, r1
    3194:	39 f4       	brne	.+14     	; 0x31a4 <__ftoa_engine+0x28>
    3196:	32 60       	ori	r19, 0x02	; 2
    3198:	2e 5f       	subi	r18, 0xFE	; 254
    319a:	3d 93       	st	X+, r19
    319c:	30 e3       	ldi	r19, 0x30	; 48
    319e:	2a 95       	dec	r18
    31a0:	e1 f7       	brne	.-8      	; 0x319a <__ftoa_engine+0x1e>
    31a2:	08 95       	ret
    31a4:	9f 3f       	cpi	r25, 0xFF	; 255
    31a6:	30 f0       	brcs	.+12     	; 0x31b4 <__ftoa_engine+0x38>
    31a8:	80 38       	cpi	r24, 0x80	; 128
    31aa:	71 05       	cpc	r23, r1
    31ac:	61 05       	cpc	r22, r1
    31ae:	09 f0       	breq	.+2      	; 0x31b2 <__ftoa_engine+0x36>
    31b0:	3c 5f       	subi	r19, 0xFC	; 252
    31b2:	3c 5f       	subi	r19, 0xFC	; 252
    31b4:	3d 93       	st	X+, r19
    31b6:	91 30       	cpi	r25, 0x01	; 1
    31b8:	08 f0       	brcs	.+2      	; 0x31bc <__ftoa_engine+0x40>
    31ba:	80 68       	ori	r24, 0x80	; 128
    31bc:	91 1d       	adc	r25, r1
    31be:	df 93       	push	r29
    31c0:	cf 93       	push	r28
    31c2:	1f 93       	push	r17
    31c4:	0f 93       	push	r16
    31c6:	ff 92       	push	r15
    31c8:	ef 92       	push	r14
    31ca:	19 2f       	mov	r17, r25
    31cc:	98 7f       	andi	r25, 0xF8	; 248
    31ce:	96 95       	lsr	r25
    31d0:	e9 2f       	mov	r30, r25
    31d2:	96 95       	lsr	r25
    31d4:	96 95       	lsr	r25
    31d6:	e9 0f       	add	r30, r25
    31d8:	ff 27       	eor	r31, r31
    31da:	e4 59       	subi	r30, 0x94	; 148
    31dc:	fe 4f       	sbci	r31, 0xFE	; 254
    31de:	99 27       	eor	r25, r25
    31e0:	33 27       	eor	r19, r19
    31e2:	ee 24       	eor	r14, r14
    31e4:	ff 24       	eor	r15, r15
    31e6:	a7 01       	movw	r20, r14
    31e8:	e7 01       	movw	r28, r14
    31ea:	05 90       	lpm	r0, Z+
    31ec:	08 94       	sec
    31ee:	07 94       	ror	r0
    31f0:	28 f4       	brcc	.+10     	; 0x31fc <__ftoa_engine+0x80>
    31f2:	36 0f       	add	r19, r22
    31f4:	e7 1e       	adc	r14, r23
    31f6:	f8 1e       	adc	r15, r24
    31f8:	49 1f       	adc	r20, r25
    31fa:	51 1d       	adc	r21, r1
    31fc:	66 0f       	add	r22, r22
    31fe:	77 1f       	adc	r23, r23
    3200:	88 1f       	adc	r24, r24
    3202:	99 1f       	adc	r25, r25
    3204:	06 94       	lsr	r0
    3206:	a1 f7       	brne	.-24     	; 0x31f0 <__ftoa_engine+0x74>
    3208:	05 90       	lpm	r0, Z+
    320a:	07 94       	ror	r0
    320c:	28 f4       	brcc	.+10     	; 0x3218 <__ftoa_engine+0x9c>
    320e:	e7 0e       	add	r14, r23
    3210:	f8 1e       	adc	r15, r24
    3212:	49 1f       	adc	r20, r25
    3214:	56 1f       	adc	r21, r22
    3216:	c1 1d       	adc	r28, r1
    3218:	77 0f       	add	r23, r23
    321a:	88 1f       	adc	r24, r24
    321c:	99 1f       	adc	r25, r25
    321e:	66 1f       	adc	r22, r22
    3220:	06 94       	lsr	r0
    3222:	a1 f7       	brne	.-24     	; 0x320c <__ftoa_engine+0x90>
    3224:	05 90       	lpm	r0, Z+
    3226:	07 94       	ror	r0
    3228:	28 f4       	brcc	.+10     	; 0x3234 <__ftoa_engine+0xb8>
    322a:	f8 0e       	add	r15, r24
    322c:	49 1f       	adc	r20, r25
    322e:	56 1f       	adc	r21, r22
    3230:	c7 1f       	adc	r28, r23
    3232:	d1 1d       	adc	r29, r1
    3234:	88 0f       	add	r24, r24
    3236:	99 1f       	adc	r25, r25
    3238:	66 1f       	adc	r22, r22
    323a:	77 1f       	adc	r23, r23
    323c:	06 94       	lsr	r0
    323e:	a1 f7       	brne	.-24     	; 0x3228 <__ftoa_engine+0xac>
    3240:	05 90       	lpm	r0, Z+
    3242:	07 94       	ror	r0
    3244:	20 f4       	brcc	.+8      	; 0x324e <__ftoa_engine+0xd2>
    3246:	49 0f       	add	r20, r25
    3248:	56 1f       	adc	r21, r22
    324a:	c7 1f       	adc	r28, r23
    324c:	d8 1f       	adc	r29, r24
    324e:	99 0f       	add	r25, r25
    3250:	66 1f       	adc	r22, r22
    3252:	77 1f       	adc	r23, r23
    3254:	88 1f       	adc	r24, r24
    3256:	06 94       	lsr	r0
    3258:	a9 f7       	brne	.-22     	; 0x3244 <__ftoa_engine+0xc8>
    325a:	84 91       	lpm	r24, Z
    325c:	10 95       	com	r17
    325e:	17 70       	andi	r17, 0x07	; 7
    3260:	41 f0       	breq	.+16     	; 0x3272 <__ftoa_engine+0xf6>
    3262:	d6 95       	lsr	r29
    3264:	c7 95       	ror	r28
    3266:	57 95       	ror	r21
    3268:	47 95       	ror	r20
    326a:	f7 94       	ror	r15
    326c:	e7 94       	ror	r14
    326e:	1a 95       	dec	r17
    3270:	c1 f7       	brne	.-16     	; 0x3262 <__ftoa_engine+0xe6>
    3272:	e2 e1       	ldi	r30, 0x12	; 18
    3274:	f1 e0       	ldi	r31, 0x01	; 1
    3276:	68 94       	set
    3278:	15 90       	lpm	r1, Z+
    327a:	15 91       	lpm	r17, Z+
    327c:	35 91       	lpm	r19, Z+
    327e:	65 91       	lpm	r22, Z+
    3280:	95 91       	lpm	r25, Z+
    3282:	05 90       	lpm	r0, Z+
    3284:	7f e2       	ldi	r23, 0x2F	; 47
    3286:	73 95       	inc	r23
    3288:	e1 18       	sub	r14, r1
    328a:	f1 0a       	sbc	r15, r17
    328c:	43 0b       	sbc	r20, r19
    328e:	56 0b       	sbc	r21, r22
    3290:	c9 0b       	sbc	r28, r25
    3292:	d0 09       	sbc	r29, r0
    3294:	c0 f7       	brcc	.-16     	; 0x3286 <__ftoa_engine+0x10a>
    3296:	e1 0c       	add	r14, r1
    3298:	f1 1e       	adc	r15, r17
    329a:	43 1f       	adc	r20, r19
    329c:	56 1f       	adc	r21, r22
    329e:	c9 1f       	adc	r28, r25
    32a0:	d0 1d       	adc	r29, r0
    32a2:	7e f4       	brtc	.+30     	; 0x32c2 <__ftoa_engine+0x146>
    32a4:	70 33       	cpi	r23, 0x30	; 48
    32a6:	11 f4       	brne	.+4      	; 0x32ac <__ftoa_engine+0x130>
    32a8:	8a 95       	dec	r24
    32aa:	e6 cf       	rjmp	.-52     	; 0x3278 <__ftoa_engine+0xfc>
    32ac:	e8 94       	clt
    32ae:	01 50       	subi	r16, 0x01	; 1
    32b0:	30 f0       	brcs	.+12     	; 0x32be <__ftoa_engine+0x142>
    32b2:	08 0f       	add	r16, r24
    32b4:	0a f4       	brpl	.+2      	; 0x32b8 <__ftoa_engine+0x13c>
    32b6:	00 27       	eor	r16, r16
    32b8:	02 17       	cp	r16, r18
    32ba:	08 f4       	brcc	.+2      	; 0x32be <__ftoa_engine+0x142>
    32bc:	20 2f       	mov	r18, r16
    32be:	23 95       	inc	r18
    32c0:	02 2f       	mov	r16, r18
    32c2:	7a 33       	cpi	r23, 0x3A	; 58
    32c4:	28 f0       	brcs	.+10     	; 0x32d0 <__ftoa_engine+0x154>
    32c6:	79 e3       	ldi	r23, 0x39	; 57
    32c8:	7d 93       	st	X+, r23
    32ca:	2a 95       	dec	r18
    32cc:	e9 f7       	brne	.-6      	; 0x32c8 <__ftoa_engine+0x14c>
    32ce:	10 c0       	rjmp	.+32     	; 0x32f0 <__ftoa_engine+0x174>
    32d0:	7d 93       	st	X+, r23
    32d2:	2a 95       	dec	r18
    32d4:	89 f6       	brne	.-94     	; 0x3278 <__ftoa_engine+0xfc>
    32d6:	06 94       	lsr	r0
    32d8:	97 95       	ror	r25
    32da:	67 95       	ror	r22
    32dc:	37 95       	ror	r19
    32de:	17 95       	ror	r17
    32e0:	17 94       	ror	r1
    32e2:	e1 18       	sub	r14, r1
    32e4:	f1 0a       	sbc	r15, r17
    32e6:	43 0b       	sbc	r20, r19
    32e8:	56 0b       	sbc	r21, r22
    32ea:	c9 0b       	sbc	r28, r25
    32ec:	d0 09       	sbc	r29, r0
    32ee:	98 f0       	brcs	.+38     	; 0x3316 <__ftoa_engine+0x19a>
    32f0:	23 95       	inc	r18
    32f2:	7e 91       	ld	r23, -X
    32f4:	73 95       	inc	r23
    32f6:	7a 33       	cpi	r23, 0x3A	; 58
    32f8:	08 f0       	brcs	.+2      	; 0x32fc <__ftoa_engine+0x180>
    32fa:	70 e3       	ldi	r23, 0x30	; 48
    32fc:	7c 93       	st	X, r23
    32fe:	20 13       	cpse	r18, r16
    3300:	b8 f7       	brcc	.-18     	; 0x32f0 <__ftoa_engine+0x174>
    3302:	7e 91       	ld	r23, -X
    3304:	70 61       	ori	r23, 0x10	; 16
    3306:	7d 93       	st	X+, r23
    3308:	30 f0       	brcs	.+12     	; 0x3316 <__ftoa_engine+0x19a>
    330a:	83 95       	inc	r24
    330c:	71 e3       	ldi	r23, 0x31	; 49
    330e:	7d 93       	st	X+, r23
    3310:	70 e3       	ldi	r23, 0x30	; 48
    3312:	2a 95       	dec	r18
    3314:	e1 f7       	brne	.-8      	; 0x330e <__ftoa_engine+0x192>
    3316:	11 24       	eor	r1, r1
    3318:	ef 90       	pop	r14
    331a:	ff 90       	pop	r15
    331c:	0f 91       	pop	r16
    331e:	1f 91       	pop	r17
    3320:	cf 91       	pop	r28
    3322:	df 91       	pop	r29
    3324:	99 27       	eor	r25, r25
    3326:	87 fd       	sbrc	r24, 7
    3328:	90 95       	com	r25
    332a:	08 95       	ret

0000332c <strnlen_P>:
    332c:	fc 01       	movw	r30, r24
    332e:	05 90       	lpm	r0, Z+
    3330:	61 50       	subi	r22, 0x01	; 1
    3332:	70 40       	sbci	r23, 0x00	; 0
    3334:	01 10       	cpse	r0, r1
    3336:	d8 f7       	brcc	.-10     	; 0x332e <strnlen_P+0x2>
    3338:	80 95       	com	r24
    333a:	90 95       	com	r25
    333c:	8e 0f       	add	r24, r30
    333e:	9f 1f       	adc	r25, r31
    3340:	08 95       	ret

00003342 <strcat>:
    3342:	fb 01       	movw	r30, r22
    3344:	dc 01       	movw	r26, r24
    3346:	0d 90       	ld	r0, X+
    3348:	00 20       	and	r0, r0
    334a:	e9 f7       	brne	.-6      	; 0x3346 <strcat+0x4>
    334c:	11 97       	sbiw	r26, 0x01	; 1
    334e:	01 90       	ld	r0, Z+
    3350:	0d 92       	st	X+, r0
    3352:	00 20       	and	r0, r0
    3354:	e1 f7       	brne	.-8      	; 0x334e <strcat+0xc>
    3356:	08 95       	ret

00003358 <strcpy>:
    3358:	fb 01       	movw	r30, r22
    335a:	dc 01       	movw	r26, r24
    335c:	01 90       	ld	r0, Z+
    335e:	0d 92       	st	X+, r0
    3360:	00 20       	and	r0, r0
    3362:	e1 f7       	brne	.-8      	; 0x335c <strcpy+0x4>
    3364:	08 95       	ret

00003366 <strnlen>:
    3366:	fc 01       	movw	r30, r24
    3368:	61 50       	subi	r22, 0x01	; 1
    336a:	70 40       	sbci	r23, 0x00	; 0
    336c:	01 90       	ld	r0, Z+
    336e:	01 10       	cpse	r0, r1
    3370:	d8 f7       	brcc	.-10     	; 0x3368 <strnlen+0x2>
    3372:	80 95       	com	r24
    3374:	90 95       	com	r25
    3376:	8e 0f       	add	r24, r30
    3378:	9f 1f       	adc	r25, r31
    337a:	08 95       	ret

0000337c <fputc>:
    337c:	0f 93       	push	r16
    337e:	1f 93       	push	r17
    3380:	cf 93       	push	r28
    3382:	df 93       	push	r29
    3384:	fb 01       	movw	r30, r22
    3386:	23 81       	ldd	r18, Z+3	; 0x03
    3388:	21 fd       	sbrc	r18, 1
    338a:	03 c0       	rjmp	.+6      	; 0x3392 <fputc+0x16>
    338c:	8f ef       	ldi	r24, 0xFF	; 255
    338e:	9f ef       	ldi	r25, 0xFF	; 255
    3390:	2c c0       	rjmp	.+88     	; 0x33ea <fputc+0x6e>
    3392:	22 ff       	sbrs	r18, 2
    3394:	16 c0       	rjmp	.+44     	; 0x33c2 <fputc+0x46>
    3396:	46 81       	ldd	r20, Z+6	; 0x06
    3398:	57 81       	ldd	r21, Z+7	; 0x07
    339a:	24 81       	ldd	r18, Z+4	; 0x04
    339c:	35 81       	ldd	r19, Z+5	; 0x05
    339e:	42 17       	cp	r20, r18
    33a0:	53 07       	cpc	r21, r19
    33a2:	44 f4       	brge	.+16     	; 0x33b4 <fputc+0x38>
    33a4:	a0 81       	ld	r26, Z
    33a6:	b1 81       	ldd	r27, Z+1	; 0x01
    33a8:	9d 01       	movw	r18, r26
    33aa:	2f 5f       	subi	r18, 0xFF	; 255
    33ac:	3f 4f       	sbci	r19, 0xFF	; 255
    33ae:	20 83       	st	Z, r18
    33b0:	31 83       	std	Z+1, r19	; 0x01
    33b2:	8c 93       	st	X, r24
    33b4:	26 81       	ldd	r18, Z+6	; 0x06
    33b6:	37 81       	ldd	r19, Z+7	; 0x07
    33b8:	2f 5f       	subi	r18, 0xFF	; 255
    33ba:	3f 4f       	sbci	r19, 0xFF	; 255
    33bc:	26 83       	std	Z+6, r18	; 0x06
    33be:	37 83       	std	Z+7, r19	; 0x07
    33c0:	14 c0       	rjmp	.+40     	; 0x33ea <fputc+0x6e>
    33c2:	8b 01       	movw	r16, r22
    33c4:	ec 01       	movw	r28, r24
    33c6:	fb 01       	movw	r30, r22
    33c8:	00 84       	ldd	r0, Z+8	; 0x08
    33ca:	f1 85       	ldd	r31, Z+9	; 0x09
    33cc:	e0 2d       	mov	r30, r0
    33ce:	09 95       	icall
    33d0:	89 2b       	or	r24, r25
    33d2:	e1 f6       	brne	.-72     	; 0x338c <fputc+0x10>
    33d4:	d8 01       	movw	r26, r16
    33d6:	16 96       	adiw	r26, 0x06	; 6
    33d8:	8d 91       	ld	r24, X+
    33da:	9c 91       	ld	r25, X
    33dc:	17 97       	sbiw	r26, 0x07	; 7
    33de:	01 96       	adiw	r24, 0x01	; 1
    33e0:	16 96       	adiw	r26, 0x06	; 6
    33e2:	8d 93       	st	X+, r24
    33e4:	9c 93       	st	X, r25
    33e6:	17 97       	sbiw	r26, 0x07	; 7
    33e8:	ce 01       	movw	r24, r28
    33ea:	df 91       	pop	r29
    33ec:	cf 91       	pop	r28
    33ee:	1f 91       	pop	r17
    33f0:	0f 91       	pop	r16
    33f2:	08 95       	ret

000033f4 <sprintf>:
    33f4:	ae e0       	ldi	r26, 0x0E	; 14
    33f6:	b0 e0       	ldi	r27, 0x00	; 0
    33f8:	e0 e0       	ldi	r30, 0x00	; 0
    33fa:	fa e1       	ldi	r31, 0x1A	; 26
    33fc:	0c 94 87 18 	jmp	0x310e	; 0x310e <__prologue_saves__+0x1c>
    3400:	0d 89       	ldd	r16, Y+21	; 0x15
    3402:	1e 89       	ldd	r17, Y+22	; 0x16
    3404:	86 e0       	ldi	r24, 0x06	; 6
    3406:	8c 83       	std	Y+4, r24	; 0x04
    3408:	09 83       	std	Y+1, r16	; 0x01
    340a:	1a 83       	std	Y+2, r17	; 0x02
    340c:	8f ef       	ldi	r24, 0xFF	; 255
    340e:	9f e7       	ldi	r25, 0x7F	; 127
    3410:	8d 83       	std	Y+5, r24	; 0x05
    3412:	9e 83       	std	Y+6, r25	; 0x06
    3414:	ae 01       	movw	r20, r28
    3416:	47 5e       	subi	r20, 0xE7	; 231
    3418:	5f 4f       	sbci	r21, 0xFF	; 255
    341a:	6f 89       	ldd	r22, Y+23	; 0x17
    341c:	78 8d       	ldd	r23, Y+24	; 0x18
    341e:	ce 01       	movw	r24, r28
    3420:	01 96       	adiw	r24, 0x01	; 1
    3422:	0e 94 e2 14 	call	0x29c4	; 0x29c4 <vfprintf>
    3426:	ef 81       	ldd	r30, Y+7	; 0x07
    3428:	f8 85       	ldd	r31, Y+8	; 0x08
    342a:	e0 0f       	add	r30, r16
    342c:	f1 1f       	adc	r31, r17
    342e:	10 82       	st	Z, r1
    3430:	2e 96       	adiw	r28, 0x0e	; 14
    3432:	e4 e0       	ldi	r30, 0x04	; 4
    3434:	0c 94 a0 18 	jmp	0x3140	; 0x3140 <__epilogue_restores__+0x1c>

00003438 <__ultoa_invert>:
    3438:	fa 01       	movw	r30, r20
    343a:	aa 27       	eor	r26, r26
    343c:	28 30       	cpi	r18, 0x08	; 8
    343e:	51 f1       	breq	.+84     	; 0x3494 <__ultoa_invert+0x5c>
    3440:	20 31       	cpi	r18, 0x10	; 16
    3442:	81 f1       	breq	.+96     	; 0x34a4 <__ultoa_invert+0x6c>
    3444:	e8 94       	clt
    3446:	6f 93       	push	r22
    3448:	6e 7f       	andi	r22, 0xFE	; 254
    344a:	6e 5f       	subi	r22, 0xFE	; 254
    344c:	7f 4f       	sbci	r23, 0xFF	; 255
    344e:	8f 4f       	sbci	r24, 0xFF	; 255
    3450:	9f 4f       	sbci	r25, 0xFF	; 255
    3452:	af 4f       	sbci	r26, 0xFF	; 255
    3454:	b1 e0       	ldi	r27, 0x01	; 1
    3456:	3e d0       	rcall	.+124    	; 0x34d4 <__ultoa_invert+0x9c>
    3458:	b4 e0       	ldi	r27, 0x04	; 4
    345a:	3c d0       	rcall	.+120    	; 0x34d4 <__ultoa_invert+0x9c>
    345c:	67 0f       	add	r22, r23
    345e:	78 1f       	adc	r23, r24
    3460:	89 1f       	adc	r24, r25
    3462:	9a 1f       	adc	r25, r26
    3464:	a1 1d       	adc	r26, r1
    3466:	68 0f       	add	r22, r24
    3468:	79 1f       	adc	r23, r25
    346a:	8a 1f       	adc	r24, r26
    346c:	91 1d       	adc	r25, r1
    346e:	a1 1d       	adc	r26, r1
    3470:	6a 0f       	add	r22, r26
    3472:	71 1d       	adc	r23, r1
    3474:	81 1d       	adc	r24, r1
    3476:	91 1d       	adc	r25, r1
    3478:	a1 1d       	adc	r26, r1
    347a:	20 d0       	rcall	.+64     	; 0x34bc <__ultoa_invert+0x84>
    347c:	09 f4       	brne	.+2      	; 0x3480 <__ultoa_invert+0x48>
    347e:	68 94       	set
    3480:	3f 91       	pop	r19
    3482:	2a e0       	ldi	r18, 0x0A	; 10
    3484:	26 9f       	mul	r18, r22
    3486:	11 24       	eor	r1, r1
    3488:	30 19       	sub	r19, r0
    348a:	30 5d       	subi	r19, 0xD0	; 208
    348c:	31 93       	st	Z+, r19
    348e:	de f6       	brtc	.-74     	; 0x3446 <__ultoa_invert+0xe>
    3490:	cf 01       	movw	r24, r30
    3492:	08 95       	ret
    3494:	46 2f       	mov	r20, r22
    3496:	47 70       	andi	r20, 0x07	; 7
    3498:	40 5d       	subi	r20, 0xD0	; 208
    349a:	41 93       	st	Z+, r20
    349c:	b3 e0       	ldi	r27, 0x03	; 3
    349e:	0f d0       	rcall	.+30     	; 0x34be <__ultoa_invert+0x86>
    34a0:	c9 f7       	brne	.-14     	; 0x3494 <__ultoa_invert+0x5c>
    34a2:	f6 cf       	rjmp	.-20     	; 0x3490 <__ultoa_invert+0x58>
    34a4:	46 2f       	mov	r20, r22
    34a6:	4f 70       	andi	r20, 0x0F	; 15
    34a8:	40 5d       	subi	r20, 0xD0	; 208
    34aa:	4a 33       	cpi	r20, 0x3A	; 58
    34ac:	18 f0       	brcs	.+6      	; 0x34b4 <__ultoa_invert+0x7c>
    34ae:	49 5d       	subi	r20, 0xD9	; 217
    34b0:	31 fd       	sbrc	r19, 1
    34b2:	40 52       	subi	r20, 0x20	; 32
    34b4:	41 93       	st	Z+, r20
    34b6:	02 d0       	rcall	.+4      	; 0x34bc <__ultoa_invert+0x84>
    34b8:	a9 f7       	brne	.-22     	; 0x34a4 <__ultoa_invert+0x6c>
    34ba:	ea cf       	rjmp	.-44     	; 0x3490 <__ultoa_invert+0x58>
    34bc:	b4 e0       	ldi	r27, 0x04	; 4
    34be:	a6 95       	lsr	r26
    34c0:	97 95       	ror	r25
    34c2:	87 95       	ror	r24
    34c4:	77 95       	ror	r23
    34c6:	67 95       	ror	r22
    34c8:	ba 95       	dec	r27
    34ca:	c9 f7       	brne	.-14     	; 0x34be <__ultoa_invert+0x86>
    34cc:	00 97       	sbiw	r24, 0x00	; 0
    34ce:	61 05       	cpc	r22, r1
    34d0:	71 05       	cpc	r23, r1
    34d2:	08 95       	ret
    34d4:	9b 01       	movw	r18, r22
    34d6:	ac 01       	movw	r20, r24
    34d8:	0a 2e       	mov	r0, r26
    34da:	06 94       	lsr	r0
    34dc:	57 95       	ror	r21
    34de:	47 95       	ror	r20
    34e0:	37 95       	ror	r19
    34e2:	27 95       	ror	r18
    34e4:	ba 95       	dec	r27
    34e6:	c9 f7       	brne	.-14     	; 0x34da <__ultoa_invert+0xa2>
    34e8:	62 0f       	add	r22, r18
    34ea:	73 1f       	adc	r23, r19
    34ec:	84 1f       	adc	r24, r20
    34ee:	95 1f       	adc	r25, r21
    34f0:	a0 1d       	adc	r26, r0
    34f2:	08 95       	ret

000034f4 <eeprom_read_block>:
    34f4:	60 50       	subi	r22, 0x00	; 0
    34f6:	7c 4e       	sbci	r23, 0xEC	; 236
    34f8:	0c 94 b5 1a 	jmp	0x356a	; 0x356a <memcpy>

000034fc <eeprom_update_block>:
    34fc:	dc 01       	movw	r26, r24
    34fe:	a4 0f       	add	r26, r20
    3500:	b5 1f       	adc	r27, r21
    3502:	41 50       	subi	r20, 0x01	; 1
    3504:	50 40       	sbci	r21, 0x00	; 0
    3506:	48 f0       	brcs	.+18     	; 0x351a <eeprom_update_block+0x1e>
    3508:	cb 01       	movw	r24, r22
    350a:	84 0f       	add	r24, r20
    350c:	95 1f       	adc	r25, r21
    350e:	2e 91       	ld	r18, -X
    3510:	0e 94 8f 1a 	call	0x351e	; 0x351e <eeprom_update_r18>
    3514:	41 50       	subi	r20, 0x01	; 1
    3516:	50 40       	sbci	r21, 0x00	; 0
    3518:	d0 f7       	brcc	.-12     	; 0x350e <eeprom_update_block+0x12>
    351a:	08 95       	ret

0000351c <eeprom_update_byte>:
    351c:	26 2f       	mov	r18, r22

0000351e <eeprom_update_r18>:
    351e:	0e 94 b1 1a 	call	0x3562	; 0x3562 <eeprom_mapen>
    3522:	00 80       	ld	r0, Z
    3524:	02 16       	cp	r0, r18
    3526:	19 f0       	breq	.+6      	; 0x352e <eeprom_update_r18+0x10>
    3528:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_write_r18>
    352c:	01 97       	sbiw	r24, 0x01	; 1
    352e:	01 97       	sbiw	r24, 0x01	; 1
    3530:	08 95       	ret

00003532 <eeprom_write_byte>:
    3532:	26 2f       	mov	r18, r22

00003534 <eeprom_write_r18>:
    3534:	af 93       	push	r26
    3536:	bf 93       	push	r27
    3538:	e0 e0       	ldi	r30, 0x00	; 0
    353a:	f0 e1       	ldi	r31, 0x10	; 16
    353c:	32 81       	ldd	r19, Z+2	; 0x02
    353e:	31 fd       	sbrc	r19, 1
    3540:	fd cf       	rjmp	.-6      	; 0x353c <eeprom_write_r18+0x8>
    3542:	dc 01       	movw	r26, r24
    3544:	a0 50       	subi	r26, 0x00	; 0
    3546:	bc 4e       	sbci	r27, 0xEC	; 236
    3548:	2c 93       	st	X, r18
    354a:	2d e9       	ldi	r18, 0x9D	; 157
    354c:	24 bf       	out	0x34, r18	; 52
    354e:	23 e0       	ldi	r18, 0x03	; 3
    3550:	20 83       	st	Z, r18
    3552:	01 96       	adiw	r24, 0x01	; 1
    3554:	bf 91       	pop	r27
    3556:	af 91       	pop	r26
    3558:	08 95       	ret

0000355a <eeprom_read_byte>:
    355a:	03 d0       	rcall	.+6      	; 0x3562 <eeprom_mapen>
    355c:	80 81       	ld	r24, Z
    355e:	99 27       	eor	r25, r25
    3560:	08 95       	ret

00003562 <eeprom_mapen>:
    3562:	fc 01       	movw	r30, r24
    3564:	e0 50       	subi	r30, 0x00	; 0
    3566:	fc 4e       	sbci	r31, 0xEC	; 236
    3568:	08 95       	ret

0000356a <memcpy>:
    356a:	fb 01       	movw	r30, r22
    356c:	dc 01       	movw	r26, r24
    356e:	02 c0       	rjmp	.+4      	; 0x3574 <memcpy+0xa>
    3570:	01 90       	ld	r0, Z+
    3572:	0d 92       	st	X+, r0
    3574:	41 50       	subi	r20, 0x01	; 1
    3576:	50 40       	sbci	r21, 0x00	; 0
    3578:	d8 f7       	brcc	.-10     	; 0x3570 <memcpy+0x6>
    357a:	08 95       	ret

0000357c <_exit>:
    357c:	f8 94       	cli

0000357e <__stop_program>:
    357e:	ff cf       	rjmp	.-2      	; 0x357e <__stop_program>
