
specMech.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  00001a68  00001b1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019d0  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000098  000059d0  000019d0  00001a84  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000031e  00802802  00802802  00001b1e  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001b1e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b7c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000258  00000000  00000000  00001bc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004d52  00000000  00000000  00001e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000026bc  00000000  00000000  00006b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001786  00000000  00000000  00009226  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000680  00000000  00000000  0000a9ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000019c1  00000000  00000000  0000b02c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001ddb  00000000  00000000  0000c9ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a8  00000000  00000000  0000e7c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
       4:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
       8:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
       c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      10:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      14:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      18:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      1c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      20:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      24:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      28:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      2c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      30:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      34:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      38:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      3c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      40:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      44:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__vector_17>
      48:	0c 94 8a 02 	jmp	0x514	; 0x514 <__vector_18>
      4c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      50:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      54:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      58:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      5c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      60:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      64:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      68:	0c 94 ba 02 	jmp	0x574	; 0x574 <__vector_26>
      6c:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__vector_27>
      70:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      74:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      78:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      7c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      80:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      84:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      88:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      8c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      90:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      94:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_37>
      98:	0c 94 52 03 	jmp	0x6a4	; 0x6a4 <__vector_38>
      9c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>

000000a0 <__ctors_end>:
      a0:	11 24       	eor	r1, r1
      a2:	1f be       	out	0x3f, r1	; 63
      a4:	cf ef       	ldi	r28, 0xFF	; 255
      a6:	cd bf       	out	0x3d, r28	; 61
      a8:	df e3       	ldi	r29, 0x3F	; 63
      aa:	de bf       	out	0x3e, r29	; 62

000000ac <__do_copy_data>:
      ac:	18 e2       	ldi	r17, 0x28	; 40
      ae:	a0 e0       	ldi	r26, 0x00	; 0
      b0:	b8 e2       	ldi	r27, 0x28	; 40
      b2:	e8 e6       	ldi	r30, 0x68	; 104
      b4:	fa e1       	ldi	r31, 0x1A	; 26
      b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x10>
      b8:	05 90       	lpm	r0, Z+
      ba:	0d 92       	st	X+, r0
      bc:	a2 30       	cpi	r26, 0x02	; 2
      be:	b1 07       	cpc	r27, r17
      c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0xc>

000000c2 <__do_clear_bss>:
      c2:	2b e2       	ldi	r18, 0x2B	; 43
      c4:	a2 e0       	ldi	r26, 0x02	; 2
      c6:	b8 e2       	ldi	r27, 0x28	; 40
      c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
      ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
      cc:	a0 32       	cpi	r26, 0x20	; 32
      ce:	b2 07       	cpc	r27, r18
      d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
      d2:	0e 94 93 09 	call	0x1326	; 0x1326 <main>
      d6:	0c 94 e6 0c 	jmp	0x19cc	; 0x19cc <_exit>

000000da <__bad_interrupt>:
      da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000de <init_PORTS>:
	char blanks[] = "                ";	// Does const put this in flash?

	writestr_OLED(displaynumber, blanks, 1);
	writestr_OLED(displaynumber, blanks, 2);

}
      de:	e0 e0       	ldi	r30, 0x00	; 0
      e0:	f4 e0       	ldi	r31, 0x04	; 4
      e2:	88 e0       	ldi	r24, 0x08	; 8
      e4:	80 8b       	std	Z+16, r24	; 0x10
      e6:	81 8b       	std	Z+17, r24	; 0x11
      e8:	82 8b       	std	Z+18, r24	; 0x12
      ea:	83 8b       	std	Z+19, r24	; 0x13
      ec:	84 8b       	std	Z+20, r24	; 0x14
      ee:	85 8b       	std	Z+21, r24	; 0x15
      f0:	86 8b       	std	Z+22, r24	; 0x16
      f2:	87 8b       	std	Z+23, r24	; 0x17
      f4:	e0 e2       	ldi	r30, 0x20	; 32
      f6:	f4 e0       	ldi	r31, 0x04	; 4
      f8:	80 8b       	std	Z+16, r24	; 0x10
      fa:	81 8b       	std	Z+17, r24	; 0x11
      fc:	82 8b       	std	Z+18, r24	; 0x12
      fe:	83 8b       	std	Z+19, r24	; 0x13
     100:	84 8b       	std	Z+20, r24	; 0x14
     102:	85 8b       	std	Z+21, r24	; 0x15
     104:	e0 e4       	ldi	r30, 0x40	; 64
     106:	f4 e0       	ldi	r31, 0x04	; 4
     108:	80 8b       	std	Z+16, r24	; 0x10
     10a:	81 8b       	std	Z+17, r24	; 0x11
     10c:	82 8b       	std	Z+18, r24	; 0x12
     10e:	83 8b       	std	Z+19, r24	; 0x13
     110:	84 8b       	std	Z+20, r24	; 0x14
     112:	85 8b       	std	Z+21, r24	; 0x15
     114:	86 8b       	std	Z+22, r24	; 0x16
     116:	87 8b       	std	Z+23, r24	; 0x17
     118:	e0 e6       	ldi	r30, 0x60	; 96
     11a:	f4 e0       	ldi	r31, 0x04	; 4
     11c:	94 e0       	ldi	r25, 0x04	; 4
     11e:	90 8b       	std	Z+16, r25	; 0x10
     120:	91 8b       	std	Z+17, r25	; 0x11
     122:	92 8b       	std	Z+18, r25	; 0x12
     124:	93 8b       	std	Z+19, r25	; 0x13
     126:	94 8b       	std	Z+20, r25	; 0x14
     128:	95 8b       	std	Z+21, r25	; 0x15
     12a:	96 8b       	std	Z+22, r25	; 0x16
     12c:	97 8b       	std	Z+23, r25	; 0x17
     12e:	e0 e8       	ldi	r30, 0x80	; 128
     130:	f4 e0       	ldi	r31, 0x04	; 4
     132:	80 8b       	std	Z+16, r24	; 0x10
     134:	81 8b       	std	Z+17, r24	; 0x11
     136:	82 8b       	std	Z+18, r24	; 0x12
     138:	83 8b       	std	Z+19, r24	; 0x13
     13a:	e0 ea       	ldi	r30, 0xA0	; 160
     13c:	f4 e0       	ldi	r31, 0x04	; 4
     13e:	80 8b       	std	Z+16, r24	; 0x10
     140:	81 8b       	std	Z+17, r24	; 0x11
     142:	82 8b       	std	Z+18, r24	; 0x12
     144:	83 8b       	std	Z+19, r24	; 0x13
     146:	84 8b       	std	Z+20, r24	; 0x14
     148:	85 8b       	std	Z+21, r24	; 0x15
     14a:	86 8b       	std	Z+22, r24	; 0x16
     14c:	08 95       	ret

0000014e <init_LED>:
     14e:	e0 ea       	ldi	r30, 0xA0	; 160
     150:	f4 e0       	ldi	r31, 0x04	; 4
     152:	80 e2       	ldi	r24, 0x20	; 32
     154:	85 83       	std	Z+5, r24	; 0x05
     156:	81 83       	std	Z+1, r24	; 0x01
     158:	08 95       	ret

0000015a <init_TWI>:
     15a:	e0 ea       	ldi	r30, 0xA0	; 160
     15c:	f8 e0       	ldi	r31, 0x08	; 8
     15e:	8b e0       	ldi	r24, 0x0B	; 11
     160:	86 83       	std	Z+6, r24	; 0x06
     162:	83 81       	ldd	r24, Z+3	; 0x03
     164:	81 60       	ori	r24, 0x01	; 1
     166:	83 83       	std	Z+3, r24	; 0x03
     168:	85 81       	ldd	r24, Z+5	; 0x05
     16a:	81 60       	ori	r24, 0x01	; 1
     16c:	85 83       	std	Z+5, r24	; 0x05
     16e:	08 95       	ret

00000170 <read_TWI>:
     170:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     174:	88 23       	and	r24, r24
     176:	34 f0       	brlt	.+12     	; 0x184 <read_TWI+0x14>
     178:	e0 ea       	ldi	r30, 0xA0	; 160
     17a:	f8 e0       	ldi	r31, 0x08	; 8
     17c:	00 00       	nop
     17e:	85 81       	ldd	r24, Z+5	; 0x05
     180:	88 23       	and	r24, r24
     182:	e4 f7       	brge	.-8      	; 0x17c <read_TWI+0xc>
     184:	e0 ea       	ldi	r30, 0xA0	; 160
     186:	f8 e0       	ldi	r31, 0x08	; 8
     188:	84 81       	ldd	r24, Z+4	; 0x04
     18a:	8b 7f       	andi	r24, 0xFB	; 251
     18c:	84 83       	std	Z+4, r24	; 0x04
     18e:	80 85       	ldd	r24, Z+8	; 0x08
     190:	94 81       	ldd	r25, Z+4	; 0x04
     192:	92 60       	ori	r25, 0x02	; 2
     194:	94 83       	std	Z+4, r25	; 0x04
     196:	08 95       	ret

00000198 <readlast_TWI>:
     198:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     19c:	88 23       	and	r24, r24
     19e:	34 f0       	brlt	.+12     	; 0x1ac <readlast_TWI+0x14>
     1a0:	e0 ea       	ldi	r30, 0xA0	; 160
     1a2:	f8 e0       	ldi	r31, 0x08	; 8
     1a4:	00 00       	nop
     1a6:	85 81       	ldd	r24, Z+5	; 0x05
     1a8:	88 23       	and	r24, r24
     1aa:	e4 f7       	brge	.-8      	; 0x1a4 <readlast_TWI+0xc>
     1ac:	e0 ea       	ldi	r30, 0xA0	; 160
     1ae:	f8 e0       	ldi	r31, 0x08	; 8
     1b0:	84 81       	ldd	r24, Z+4	; 0x04
     1b2:	84 60       	ori	r24, 0x04	; 4
     1b4:	84 83       	std	Z+4, r24	; 0x04
     1b6:	80 85       	ldd	r24, Z+8	; 0x08
     1b8:	08 95       	ret

000001ba <start_TWI>:
     1ba:	61 30       	cpi	r22, 0x01	; 1
     1bc:	11 f4       	brne	.+4      	; 0x1c2 <start_TWI+0x8>
     1be:	81 60       	ori	r24, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <start_TWI+0xa>
     1c2:	8e 7f       	andi	r24, 0xFE	; 254
     1c4:	e0 ea       	ldi	r30, 0xA0	; 160
     1c6:	f8 e0       	ldi	r31, 0x08	; 8
     1c8:	87 83       	std	Z+7, r24	; 0x07
     1ca:	85 81       	ldd	r24, Z+5	; 0x05
     1cc:	80 7c       	andi	r24, 0xC0	; 192
     1ce:	21 f4       	brne	.+8      	; 0x1d8 <start_TWI+0x1e>
     1d0:	00 00       	nop
     1d2:	85 81       	ldd	r24, Z+5	; 0x05
     1d4:	80 7c       	andi	r24, 0xC0	; 192
     1d6:	e1 f3       	breq	.-8      	; 0x1d0 <start_TWI+0x16>
     1d8:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1dc:	82 fd       	sbrc	r24, 2
     1de:	0b c0       	rjmp	.+22     	; 0x1f6 <start_TWI+0x3c>
     1e0:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1e4:	83 fd       	sbrc	r24, 3
     1e6:	09 c0       	rjmp	.+18     	; 0x1fa <start_TWI+0x40>
     1e8:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1ec:	89 2f       	mov	r24, r25
     1ee:	80 71       	andi	r24, 0x10	; 16
     1f0:	94 fd       	sbrc	r25, 4
     1f2:	05 c0       	rjmp	.+10     	; 0x1fe <start_TWI+0x44>
     1f4:	08 95       	ret
     1f6:	81 e0       	ldi	r24, 0x01	; 1
     1f8:	08 95       	ret
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	08 95       	ret
     1fe:	84 e0       	ldi	r24, 0x04	; 4
     200:	08 95       	ret

00000202 <write_TWI>:
     202:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     206:	96 fd       	sbrc	r25, 6
     208:	06 c0       	rjmp	.+12     	; 0x216 <write_TWI+0x14>
     20a:	e0 ea       	ldi	r30, 0xA0	; 160
     20c:	f8 e0       	ldi	r31, 0x08	; 8
     20e:	00 00       	nop
     210:	95 81       	ldd	r25, Z+5	; 0x05
     212:	96 ff       	sbrs	r25, 6
     214:	fc cf       	rjmp	.-8      	; 0x20e <write_TWI+0xc>
     216:	e0 ea       	ldi	r30, 0xA0	; 160
     218:	f8 e0       	ldi	r31, 0x08	; 8
     21a:	80 87       	std	Z+8, r24	; 0x08
     21c:	85 81       	ldd	r24, Z+5	; 0x05
     21e:	86 fd       	sbrc	r24, 6
     220:	04 c0       	rjmp	.+8      	; 0x22a <write_TWI+0x28>
     222:	00 00       	nop
     224:	85 81       	ldd	r24, Z+5	; 0x05
     226:	86 ff       	sbrs	r24, 6
     228:	fc cf       	rjmp	.-8      	; 0x222 <write_TWI+0x20>
     22a:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     22e:	89 2f       	mov	r24, r25
     230:	80 71       	andi	r24, 0x10	; 16
     232:	94 fd       	sbrc	r25, 4
     234:	83 e0       	ldi	r24, 0x03	; 3
     236:	08 95       	ret

00000238 <read_MCP23008>:
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	c8 2f       	mov	r28, r24
     242:	d6 2f       	mov	r29, r22
     244:	8a 01       	movw	r16, r20
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     24c:	81 11       	cpse	r24, r1
     24e:	15 c0       	rjmp	.+42     	; 0x27a <read_MCP23008+0x42>
     250:	8d 2f       	mov	r24, r29
     252:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     256:	81 11       	cpse	r24, r1
     258:	10 c0       	rjmp	.+32     	; 0x27a <read_MCP23008+0x42>
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	8c 2f       	mov	r24, r28
     25e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     262:	c8 2f       	mov	r28, r24
     264:	81 11       	cpse	r24, r1
     266:	09 c0       	rjmp	.+18     	; 0x27a <read_MCP23008+0x42>
     268:	0e 94 cc 00 	call	0x198	; 0x198 <readlast_TWI>
     26c:	f8 01       	movw	r30, r16
     26e:	80 83       	st	Z, r24
     270:	87 e0       	ldi	r24, 0x07	; 7
     272:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     276:	8c 2f       	mov	r24, r28
     278:	00 c0       	rjmp	.+0      	; 0x27a <read_MCP23008+0x42>
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	08 95       	ret

00000284 <write_MCP23008>:
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	c6 2f       	mov	r28, r22
     28a:	d4 2f       	mov	r29, r20
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     292:	88 23       	and	r24, r24
     294:	21 f0       	breq	.+8      	; 0x29e <write_MCP23008+0x1a>
     296:	97 e0       	ldi	r25, 0x07	; 7
     298:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     29c:	16 c0       	rjmp	.+44     	; 0x2ca <write_MCP23008+0x46>
     29e:	8c 2f       	mov	r24, r28
     2a0:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     2a4:	88 23       	and	r24, r24
     2a6:	21 f0       	breq	.+8      	; 0x2b0 <write_MCP23008+0x2c>
     2a8:	97 e0       	ldi	r25, 0x07	; 7
     2aa:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2ae:	0d c0       	rjmp	.+26     	; 0x2ca <write_MCP23008+0x46>
     2b0:	8d 2f       	mov	r24, r29
     2b2:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     2b6:	88 23       	and	r24, r24
     2b8:	21 f0       	breq	.+8      	; 0x2c2 <write_MCP23008+0x3e>
     2ba:	97 e0       	ldi	r25, 0x07	; 7
     2bc:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <write_MCP23008+0x46>
     2c2:	87 e0       	ldi	r24, 0x07	; 7
     2c4:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <init_PNEU>:
     2d0:	40 e0       	ldi	r20, 0x00	; 0
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	80 e4       	ldi	r24, 0x40	; 64
     2d6:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     2da:	81 11       	cpse	r24, r1
     2dc:	05 c0       	rjmp	.+10     	; 0x2e8 <init_PNEU+0x18>
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	6a e0       	ldi	r22, 0x0A	; 10
     2e2:	80 e4       	ldi	r24, 0x40	; 64
     2e4:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     2e8:	08 95       	ret

000002ea <set_valves>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	1f 92       	push	r1
     2f4:	cd b7       	in	r28, 0x3d	; 61
     2f6:	de b7       	in	r29, 0x3e	; 62
     2f8:	08 2f       	mov	r16, r24
     2fa:	16 2f       	mov	r17, r22
     2fc:	ae 01       	movw	r20, r28
     2fe:	4f 5f       	subi	r20, 0xFF	; 255
     300:	5f 4f       	sbci	r21, 0xFF	; 255
     302:	69 e0       	ldi	r22, 0x09	; 9
     304:	80 e4       	ldi	r24, 0x40	; 64
     306:	0e 94 1c 01 	call	0x238	; 0x238 <read_MCP23008>
     30a:	81 11       	cpse	r24, r1
     30c:	07 c0       	rjmp	.+14     	; 0x31c <set_valves+0x32>
     30e:	49 81       	ldd	r20, Y+1	; 0x01
     310:	40 2b       	or	r20, r16
     312:	41 23       	and	r20, r17
     314:	6a e0       	ldi	r22, 0x0A	; 10
     316:	80 e4       	ldi	r24, 0x40	; 64
     318:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     31c:	0f 90       	pop	r0
     31e:	df 91       	pop	r29
     320:	cf 91       	pop	r28
     322:	1f 91       	pop	r17
     324:	0f 91       	pop	r16
     326:	08 95       	ret

00000328 <init_USART>:
     328:	e0 e0       	ldi	r30, 0x00	; 0
     32a:	f4 e0       	ldi	r31, 0x04	; 4
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	85 83       	std	Z+5, r24	; 0x05
     330:	81 83       	std	Z+1, r24	; 0x01
     332:	e0 e0       	ldi	r30, 0x00	; 0
     334:	f8 e0       	ldi	r31, 0x08	; 8
     336:	2d e6       	ldi	r18, 0x6D	; 109
     338:	35 e0       	ldi	r19, 0x05	; 5
     33a:	20 87       	std	Z+8, r18	; 0x08
     33c:	31 87       	std	Z+9, r19	; 0x09
     33e:	95 81       	ldd	r25, Z+5	; 0x05
     340:	90 68       	ori	r25, 0x80	; 128
     342:	95 83       	std	Z+5, r25	; 0x05
     344:	96 81       	ldd	r25, Z+6	; 0x06
     346:	90 64       	ori	r25, 0x40	; 64
     348:	96 83       	std	Z+6, r25	; 0x06
     34a:	96 81       	ldd	r25, Z+6	; 0x06
     34c:	90 68       	ori	r25, 0x80	; 128
     34e:	96 83       	std	Z+6, r25	; 0x06
     350:	10 92 8c 29 	sts	0x298C, r1	; 0x80298c <send0_buf+0x80>
     354:	10 92 8d 29 	sts	0x298D, r1	; 0x80298d <send0_buf+0x81>
     358:	80 93 90 29 	sts	0x2990, r24	; 0x802990 <send0_buf+0x84>
     35c:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <recv0_buf+0x80>
     360:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <recv0_buf+0x81>
     364:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <recv0_buf>
     368:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <recv0_buf+0x84>
     36c:	e0 e4       	ldi	r30, 0x40	; 64
     36e:	f4 e0       	ldi	r31, 0x04	; 4
     370:	85 83       	std	Z+5, r24	; 0x05
     372:	81 83       	std	Z+1, r24	; 0x01
     374:	e0 e2       	ldi	r30, 0x20	; 32
     376:	f8 e0       	ldi	r31, 0x08	; 8
     378:	20 87       	std	Z+8, r18	; 0x08
     37a:	31 87       	std	Z+9, r19	; 0x09
     37c:	96 81       	ldd	r25, Z+6	; 0x06
     37e:	90 64       	ori	r25, 0x40	; 64
     380:	96 83       	std	Z+6, r25	; 0x06
     382:	96 81       	ldd	r25, Z+6	; 0x06
     384:	90 68       	ori	r25, 0x80	; 128
     386:	96 83       	std	Z+6, r25	; 0x06
     388:	80 93 1f 2b 	sts	0x2B1F, r24	; 0x802b1f <send1_buf+0x84>
     38c:	10 92 86 28 	sts	0x2886, r1	; 0x802886 <__data_end+0x84>
     390:	e0 e2       	ldi	r30, 0x20	; 32
     392:	f4 e0       	ldi	r31, 0x04	; 4
     394:	85 83       	std	Z+5, r24	; 0x05
     396:	81 83       	std	Z+1, r24	; 0x01
     398:	e0 e6       	ldi	r30, 0x60	; 96
     39a:	f8 e0       	ldi	r31, 0x08	; 8
     39c:	20 87       	std	Z+8, r18	; 0x08
     39e:	31 87       	std	Z+9, r19	; 0x09
     3a0:	96 81       	ldd	r25, Z+6	; 0x06
     3a2:	90 64       	ori	r25, 0x40	; 64
     3a4:	96 83       	std	Z+6, r25	; 0x06
     3a6:	96 81       	ldd	r25, Z+6	; 0x06
     3a8:	90 68       	ori	r25, 0x80	; 128
     3aa:	96 83       	std	Z+6, r25	; 0x06
     3ac:	80 93 9a 2a 	sts	0x2A9A, r24	; 0x802a9a <send3_buf+0x84>
     3b0:	10 92 15 2a 	sts	0x2A15, r1	; 0x802a15 <recv3_buf+0x84>
     3b4:	08 95       	ret

000003b6 <send_USART>:
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	81 30       	cpi	r24, 0x01	; 1
     3bc:	39 f0       	breq	.+14     	; 0x3cc <send_USART+0x16>
     3be:	48 f0       	brcs	.+18     	; 0x3d2 <send_USART+0x1c>
     3c0:	83 30       	cpi	r24, 0x03	; 3
     3c2:	09 f0       	breq	.+2      	; 0x3c6 <send_USART+0x10>
     3c4:	70 c0       	rjmp	.+224    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     3c6:	41 11       	cpse	r20, r1
     3c8:	4c c0       	rjmp	.+152    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     3ca:	68 c0       	rjmp	.+208    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     3cc:	41 11       	cpse	r20, r1
     3ce:	26 c0       	rjmp	.+76     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3d0:	42 c0       	rjmp	.+132    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     3d2:	44 23       	and	r20, r20
     3d4:	e9 f0       	breq	.+58     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3d6:	fb 01       	movw	r30, r22
     3d8:	41 50       	subi	r20, 0x01	; 1
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	4f 5f       	subi	r20, 0xFF	; 255
     3de:	5f 4f       	sbci	r21, 0xFF	; 255
     3e0:	64 0f       	add	r22, r20
     3e2:	75 1f       	adc	r23, r21
     3e4:	ac e8       	ldi	r26, 0x8C	; 140
     3e6:	b9 e2       	ldi	r27, 0x29	; 41
     3e8:	8c 91       	ld	r24, X
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	21 91       	ld	r18, Z+
     3ee:	ec 01       	movw	r28, r24
     3f0:	c4 5f       	subi	r28, 0xF4	; 244
     3f2:	d6 4d       	sbci	r29, 0xD6	; 214
     3f4:	28 83       	st	Y, r18
     3f6:	01 96       	adiw	r24, 0x01	; 1
     3f8:	8f 77       	andi	r24, 0x7F	; 127
     3fa:	90 78       	andi	r25, 0x80	; 128
     3fc:	99 23       	and	r25, r25
     3fe:	24 f4       	brge	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	80 68       	ori	r24, 0x80	; 128
     404:	9f 6f       	ori	r25, 0xFF	; 255
     406:	01 96       	adiw	r24, 0x01	; 1
     408:	8c 93       	st	X, r24
     40a:	6e 17       	cp	r22, r30
     40c:	7f 07       	cpc	r23, r31
     40e:	61 f7       	brne	.-40     	; 0x3e8 <send_USART+0x32>
     410:	e0 e0       	ldi	r30, 0x00	; 0
     412:	f8 e0       	ldi	r31, 0x08	; 8
     414:	85 81       	ldd	r24, Z+5	; 0x05
     416:	80 62       	ori	r24, 0x20	; 32
     418:	85 83       	std	Z+5, r24	; 0x05
     41a:	45 c0       	rjmp	.+138    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     41c:	fb 01       	movw	r30, r22
     41e:	41 50       	subi	r20, 0x01	; 1
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	4f 5f       	subi	r20, 0xFF	; 255
     424:	5f 4f       	sbci	r21, 0xFF	; 255
     426:	64 0f       	add	r22, r20
     428:	75 1f       	adc	r23, r21
     42a:	ab e1       	ldi	r26, 0x1B	; 27
     42c:	bb e2       	ldi	r27, 0x2B	; 43
     42e:	8c 91       	ld	r24, X
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	21 91       	ld	r18, Z+
     434:	ec 01       	movw	r28, r24
     436:	c5 56       	subi	r28, 0x65	; 101
     438:	d5 4d       	sbci	r29, 0xD5	; 213
     43a:	28 83       	st	Y, r18
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	8f 77       	andi	r24, 0x7F	; 127
     440:	90 78       	andi	r25, 0x80	; 128
     442:	99 23       	and	r25, r25
     444:	24 f4       	brge	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	80 68       	ori	r24, 0x80	; 128
     44a:	9f 6f       	ori	r25, 0xFF	; 255
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	8c 93       	st	X, r24
     450:	6e 17       	cp	r22, r30
     452:	7f 07       	cpc	r23, r31
     454:	61 f7       	brne	.-40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     456:	e0 e2       	ldi	r30, 0x20	; 32
     458:	f8 e0       	ldi	r31, 0x08	; 8
     45a:	85 81       	ldd	r24, Z+5	; 0x05
     45c:	80 62       	ori	r24, 0x20	; 32
     45e:	85 83       	std	Z+5, r24	; 0x05
     460:	22 c0       	rjmp	.+68     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     462:	fb 01       	movw	r30, r22
     464:	41 50       	subi	r20, 0x01	; 1
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	4f 5f       	subi	r20, 0xFF	; 255
     46a:	5f 4f       	sbci	r21, 0xFF	; 255
     46c:	64 0f       	add	r22, r20
     46e:	75 1f       	adc	r23, r21
     470:	a6 e9       	ldi	r26, 0x96	; 150
     472:	ba e2       	ldi	r27, 0x2A	; 42
     474:	8c 91       	ld	r24, X
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	21 91       	ld	r18, Z+
     47a:	ec 01       	movw	r28, r24
     47c:	ca 5e       	subi	r28, 0xEA	; 234
     47e:	d5 4d       	sbci	r29, 0xD5	; 213
     480:	28 83       	st	Y, r18
     482:	01 96       	adiw	r24, 0x01	; 1
     484:	8f 77       	andi	r24, 0x7F	; 127
     486:	90 78       	andi	r25, 0x80	; 128
     488:	99 23       	and	r25, r25
     48a:	24 f4       	brge	.+8      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     48c:	01 97       	sbiw	r24, 0x01	; 1
     48e:	80 68       	ori	r24, 0x80	; 128
     490:	9f 6f       	ori	r25, 0xFF	; 255
     492:	01 96       	adiw	r24, 0x01	; 1
     494:	8c 93       	st	X, r24
     496:	6e 17       	cp	r22, r30
     498:	7f 07       	cpc	r23, r31
     49a:	61 f7       	brne	.-40     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     49c:	e0 e6       	ldi	r30, 0x60	; 96
     49e:	f8 e0       	ldi	r31, 0x08	; 8
     4a0:	85 81       	ldd	r24, Z+5	; 0x05
     4a2:	80 62       	ori	r24, 0x20	; 32
     4a4:	85 83       	std	Z+5, r24	; 0x05
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	08 95       	ret

000004ac <__vector_17>:
     4ac:	1f 92       	push	r1
     4ae:	0f 92       	push	r0
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	0f 92       	push	r0
     4b4:	11 24       	eor	r1, r1
     4b6:	8f 93       	push	r24
     4b8:	9f 93       	push	r25
     4ba:	ef 93       	push	r30
     4bc:	ff 93       	push	r31
     4be:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f4800>
     4c2:	8d 30       	cpi	r24, 0x0D	; 13
     4c4:	51 f4       	brne	.+20     	; 0x4da <__vector_17+0x2e>
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <recv0_buf+0x84>
     4cc:	e0 91 07 29 	lds	r30, 0x2907	; 0x802907 <recv0_buf+0x80>
     4d0:	f0 e0       	ldi	r31, 0x00	; 0
     4d2:	e9 57       	subi	r30, 0x79	; 121
     4d4:	f7 4d       	sbci	r31, 0xD7	; 215
     4d6:	10 82       	st	Z, r1
     4d8:	06 c0       	rjmp	.+12     	; 0x4e6 <__vector_17+0x3a>
     4da:	e0 91 07 29 	lds	r30, 0x2907	; 0x802907 <recv0_buf+0x80>
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	e9 57       	subi	r30, 0x79	; 121
     4e2:	f7 4d       	sbci	r31, 0xD7	; 215
     4e4:	80 83       	st	Z, r24
     4e6:	e7 e0       	ldi	r30, 0x07	; 7
     4e8:	f9 e2       	ldi	r31, 0x29	; 41
     4ea:	80 81       	ld	r24, Z
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	01 96       	adiw	r24, 0x01	; 1
     4f0:	8f 77       	andi	r24, 0x7F	; 127
     4f2:	90 78       	andi	r25, 0x80	; 128
     4f4:	99 23       	and	r25, r25
     4f6:	24 f4       	brge	.+8      	; 0x500 <__vector_17+0x54>
     4f8:	01 97       	sbiw	r24, 0x01	; 1
     4fa:	80 68       	ori	r24, 0x80	; 128
     4fc:	9f 6f       	ori	r25, 0xFF	; 255
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	80 83       	st	Z, r24
     502:	ff 91       	pop	r31
     504:	ef 91       	pop	r30
     506:	9f 91       	pop	r25
     508:	8f 91       	pop	r24
     50a:	0f 90       	pop	r0
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	0f 90       	pop	r0
     510:	1f 90       	pop	r1
     512:	18 95       	reti

00000514 <__vector_18>:
     514:	1f 92       	push	r1
     516:	0f 92       	push	r0
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	0f 92       	push	r0
     51c:	11 24       	eor	r1, r1
     51e:	8f 93       	push	r24
     520:	9f 93       	push	r25
     522:	ef 93       	push	r30
     524:	ff 93       	push	r31
     526:	e0 e0       	ldi	r30, 0x00	; 0
     528:	f8 e0       	ldi	r31, 0x08	; 8
     52a:	85 81       	ldd	r24, Z+5	; 0x05
     52c:	8f 7d       	andi	r24, 0xDF	; 223
     52e:	85 83       	std	Z+5, r24	; 0x05
     530:	e0 91 8d 29 	lds	r30, 0x298D	; 0x80298d <send0_buf+0x81>
     534:	80 91 8c 29 	lds	r24, 0x298C	; 0x80298c <send0_buf+0x80>
     538:	8e 17       	cp	r24, r30
     53a:	81 f0       	breq	.+32     	; 0x55c <__vector_18+0x48>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	8e 0f       	add	r24, r30
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	e4 5f       	subi	r30, 0xF4	; 244
     544:	f6 4d       	sbci	r31, 0xD6	; 214
     546:	90 81       	ld	r25, Z
     548:	e0 e0       	ldi	r30, 0x00	; 0
     54a:	f8 e0       	ldi	r31, 0x08	; 8
     54c:	92 83       	std	Z+2, r25	; 0x02
     54e:	8f 77       	andi	r24, 0x7F	; 127
     550:	80 93 8d 29 	sts	0x298D, r24	; 0x80298d <send0_buf+0x81>
     554:	85 81       	ldd	r24, Z+5	; 0x05
     556:	80 62       	ori	r24, 0x20	; 32
     558:	85 83       	std	Z+5, r24	; 0x05
     55a:	03 c0       	rjmp	.+6      	; 0x562 <__vector_18+0x4e>
     55c:	81 e0       	ldi	r24, 0x01	; 1
     55e:	80 93 90 29 	sts	0x2990, r24	; 0x802990 <send0_buf+0x84>
     562:	ff 91       	pop	r31
     564:	ef 91       	pop	r30
     566:	9f 91       	pop	r25
     568:	8f 91       	pop	r24
     56a:	0f 90       	pop	r0
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	0f 90       	pop	r0
     570:	1f 90       	pop	r1
     572:	18 95       	reti

00000574 <__vector_26>:
     574:	1f 92       	push	r1
     576:	0f 92       	push	r0
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	0f 92       	push	r0
     57c:	11 24       	eor	r1, r1
     57e:	8f 93       	push	r24
     580:	9f 93       	push	r25
     582:	af 93       	push	r26
     584:	bf 93       	push	r27
     586:	ef 93       	push	r30
     588:	ff 93       	push	r31
     58a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7f4820>
     58e:	8d 30       	cpi	r24, 0x0D	; 13
     590:	21 f0       	breq	.+8      	; 0x59a <__vector_26+0x26>
     592:	e0 91 85 28 	lds	r30, 0x2885	; 0x802885 <__data_end+0x83>
     596:	ef 37       	cpi	r30, 0x7F	; 127
     598:	78 f0       	brcs	.+30     	; 0x5b8 <__vector_26+0x44>
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	80 93 86 28 	sts	0x2886, r24	; 0x802886 <__data_end+0x84>
     5a0:	a5 e8       	ldi	r26, 0x85	; 133
     5a2:	b8 e2       	ldi	r27, 0x28	; 40
     5a4:	8c 91       	ld	r24, X
     5a6:	e8 2f       	mov	r30, r24
     5a8:	f0 e0       	ldi	r31, 0x00	; 0
     5aa:	ee 5f       	subi	r30, 0xFE	; 254
     5ac:	f7 4d       	sbci	r31, 0xD7	; 215
     5ae:	10 82       	st	Z, r1
     5b0:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <__data_end+0x82>
     5b4:	1c 92       	st	X, r1
     5b6:	08 c0       	rjmp	.+16     	; 0x5c8 <__vector_26+0x54>
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	9e 0f       	add	r25, r30
     5bc:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <__data_end+0x83>
     5c0:	f0 e0       	ldi	r31, 0x00	; 0
     5c2:	ee 5f       	subi	r30, 0xFE	; 254
     5c4:	f7 4d       	sbci	r31, 0xD7	; 215
     5c6:	80 83       	st	Z, r24
     5c8:	ff 91       	pop	r31
     5ca:	ef 91       	pop	r30
     5cc:	bf 91       	pop	r27
     5ce:	af 91       	pop	r26
     5d0:	9f 91       	pop	r25
     5d2:	8f 91       	pop	r24
     5d4:	0f 90       	pop	r0
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	0f 90       	pop	r0
     5da:	1f 90       	pop	r1
     5dc:	18 95       	reti

000005de <__vector_27>:
     5de:	1f 92       	push	r1
     5e0:	0f 92       	push	r0
     5e2:	0f b6       	in	r0, 0x3f	; 63
     5e4:	0f 92       	push	r0
     5e6:	11 24       	eor	r1, r1
     5e8:	8f 93       	push	r24
     5ea:	9f 93       	push	r25
     5ec:	af 93       	push	r26
     5ee:	bf 93       	push	r27
     5f0:	ef 93       	push	r30
     5f2:	ff 93       	push	r31
     5f4:	ae e1       	ldi	r26, 0x1E	; 30
     5f6:	bb e2       	ldi	r27, 0x2B	; 43
     5f8:	ec 91       	ld	r30, X
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	8e 0f       	add	r24, r30
     5fe:	8c 93       	st	X, r24
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	e5 56       	subi	r30, 0x65	; 101
     604:	f5 4d       	sbci	r31, 0xD5	; 213
     606:	90 81       	ld	r25, Z
     608:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7f4822>
     60c:	90 91 1d 2b 	lds	r25, 0x2B1D	; 0x802b1d <send1_buf+0x82>
     610:	89 17       	cp	r24, r25
     612:	40 f0       	brcs	.+16     	; 0x624 <__vector_27+0x46>
     614:	e0 e2       	ldi	r30, 0x20	; 32
     616:	f8 e0       	ldi	r31, 0x08	; 8
     618:	85 81       	ldd	r24, Z+5	; 0x05
     61a:	8f 7d       	andi	r24, 0xDF	; 223
     61c:	85 83       	std	Z+5, r24	; 0x05
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	80 93 1f 2b 	sts	0x2B1F, r24	; 0x802b1f <send1_buf+0x84>
     624:	ff 91       	pop	r31
     626:	ef 91       	pop	r30
     628:	bf 91       	pop	r27
     62a:	af 91       	pop	r26
     62c:	9f 91       	pop	r25
     62e:	8f 91       	pop	r24
     630:	0f 90       	pop	r0
     632:	0f be       	out	0x3f, r0	; 63
     634:	0f 90       	pop	r0
     636:	1f 90       	pop	r1
     638:	18 95       	reti

0000063a <__vector_37>:
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	8f 93       	push	r24
     646:	9f 93       	push	r25
     648:	af 93       	push	r26
     64a:	bf 93       	push	r27
     64c:	ef 93       	push	r30
     64e:	ff 93       	push	r31
     650:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7f4860>
     654:	8d 30       	cpi	r24, 0x0D	; 13
     656:	21 f0       	breq	.+8      	; 0x660 <__vector_37+0x26>
     658:	e0 91 14 2a 	lds	r30, 0x2A14	; 0x802a14 <recv3_buf+0x83>
     65c:	ef 37       	cpi	r30, 0x7F	; 127
     65e:	78 f0       	brcs	.+30     	; 0x67e <__vector_37+0x44>
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	80 93 15 2a 	sts	0x2A15, r24	; 0x802a15 <recv3_buf+0x84>
     666:	a4 e1       	ldi	r26, 0x14	; 20
     668:	ba e2       	ldi	r27, 0x2A	; 42
     66a:	8c 91       	ld	r24, X
     66c:	e8 2f       	mov	r30, r24
     66e:	f0 e0       	ldi	r31, 0x00	; 0
     670:	ef 56       	subi	r30, 0x6F	; 111
     672:	f6 4d       	sbci	r31, 0xD6	; 214
     674:	10 82       	st	Z, r1
     676:	80 93 13 2a 	sts	0x2A13, r24	; 0x802a13 <recv3_buf+0x82>
     67a:	1c 92       	st	X, r1
     67c:	08 c0       	rjmp	.+16     	; 0x68e <__vector_37+0x54>
     67e:	91 e0       	ldi	r25, 0x01	; 1
     680:	9e 0f       	add	r25, r30
     682:	90 93 14 2a 	sts	0x2A14, r25	; 0x802a14 <recv3_buf+0x83>
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	ef 56       	subi	r30, 0x6F	; 111
     68a:	f6 4d       	sbci	r31, 0xD6	; 214
     68c:	80 83       	st	Z, r24
     68e:	ff 91       	pop	r31
     690:	ef 91       	pop	r30
     692:	bf 91       	pop	r27
     694:	af 91       	pop	r26
     696:	9f 91       	pop	r25
     698:	8f 91       	pop	r24
     69a:	0f 90       	pop	r0
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	0f 90       	pop	r0
     6a0:	1f 90       	pop	r1
     6a2:	18 95       	reti

000006a4 <__vector_38>:
     6a4:	1f 92       	push	r1
     6a6:	0f 92       	push	r0
     6a8:	0f b6       	in	r0, 0x3f	; 63
     6aa:	0f 92       	push	r0
     6ac:	11 24       	eor	r1, r1
     6ae:	8f 93       	push	r24
     6b0:	9f 93       	push	r25
     6b2:	af 93       	push	r26
     6b4:	bf 93       	push	r27
     6b6:	ef 93       	push	r30
     6b8:	ff 93       	push	r31
     6ba:	a9 e9       	ldi	r26, 0x99	; 153
     6bc:	ba e2       	ldi	r27, 0x2A	; 42
     6be:	ec 91       	ld	r30, X
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	8e 0f       	add	r24, r30
     6c4:	8c 93       	st	X, r24
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	ea 5e       	subi	r30, 0xEA	; 234
     6ca:	f5 4d       	sbci	r31, 0xD5	; 213
     6cc:	90 81       	ld	r25, Z
     6ce:	90 93 62 08 	sts	0x0862, r25	; 0x800862 <__TEXT_REGION_LENGTH__+0x7f4862>
     6d2:	90 91 98 2a 	lds	r25, 0x2A98	; 0x802a98 <send3_buf+0x82>
     6d6:	89 17       	cp	r24, r25
     6d8:	40 f0       	brcs	.+16     	; 0x6ea <__vector_38+0x46>
     6da:	e0 e6       	ldi	r30, 0x60	; 96
     6dc:	f8 e0       	ldi	r31, 0x08	; 8
     6de:	85 81       	ldd	r24, Z+5	; 0x05
     6e0:	8f 7d       	andi	r24, 0xDF	; 223
     6e2:	85 83       	std	Z+5, r24	; 0x05
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	80 93 9a 2a 	sts	0x2A9A, r24	; 0x802a9a <send3_buf+0x84>
     6ea:	ff 91       	pop	r31
     6ec:	ef 91       	pop	r30
     6ee:	bf 91       	pop	r27
     6f0:	af 91       	pop	r26
     6f2:	9f 91       	pop	r25
     6f4:	8f 91       	pop	r24
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <read_FRAM>:
     700:	af 92       	push	r10
     702:	bf 92       	push	r11
     704:	cf 92       	push	r12
     706:	df 92       	push	r13
     708:	ef 92       	push	r14
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	c8 2f       	mov	r28, r24
     716:	e6 2e       	mov	r14, r22
     718:	d7 2f       	mov	r29, r23
     71a:	8a 01       	movw	r16, r20
     71c:	f2 2e       	mov	r15, r18
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     724:	81 11       	cpse	r24, r1
     726:	33 c0       	rjmp	.+102    	; 0x78e <read_FRAM+0x8e>
     728:	8d 2f       	mov	r24, r29
     72a:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     72e:	81 11       	cpse	r24, r1
     730:	2e c0       	rjmp	.+92     	; 0x78e <read_FRAM+0x8e>
     732:	8e 2d       	mov	r24, r14
     734:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     738:	81 11       	cpse	r24, r1
     73a:	29 c0       	rjmp	.+82     	; 0x78e <read_FRAM+0x8e>
     73c:	61 e0       	ldi	r22, 0x01	; 1
     73e:	8c 2f       	mov	r24, r28
     740:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     744:	81 11       	cpse	r24, r1
     746:	23 c0       	rjmp	.+70     	; 0x78e <read_FRAM+0x8e>
     748:	af 2c       	mov	r10, r15
     74a:	b1 2c       	mov	r11, r1
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	a8 1a       	sub	r10, r24
     750:	b1 08       	sbc	r11, r1
     752:	1a 14       	cp	r1, r10
     754:	1b 04       	cpc	r1, r11
     756:	74 f4       	brge	.+28     	; 0x774 <read_FRAM+0x74>
     758:	c0 e0       	ldi	r28, 0x00	; 0
     75a:	68 01       	movw	r12, r16
     75c:	cc 0e       	add	r12, r28
     75e:	d1 1c       	adc	r13, r1
     760:	0e 94 b8 00 	call	0x170	; 0x170 <read_TWI>
     764:	f6 01       	movw	r30, r12
     766:	80 83       	st	Z, r24
     768:	cf 5f       	subi	r28, 0xFF	; 255
     76a:	8c 2f       	mov	r24, r28
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	8a 15       	cp	r24, r10
     770:	9b 05       	cpc	r25, r11
     772:	9c f3       	brlt	.-26     	; 0x75a <read_FRAM+0x5a>
     774:	8f 2d       	mov	r24, r15
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	01 97       	sbiw	r24, 0x01	; 1
     77a:	e8 01       	movw	r28, r16
     77c:	c8 0f       	add	r28, r24
     77e:	d9 1f       	adc	r29, r25
     780:	0e 94 cc 00 	call	0x198	; 0x198 <readlast_TWI>
     784:	88 83       	st	Y, r24
     786:	87 e0       	ldi	r24, 0x07	; 7
     788:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	df 91       	pop	r29
     790:	cf 91       	pop	r28
     792:	1f 91       	pop	r17
     794:	0f 91       	pop	r16
     796:	ff 90       	pop	r15
     798:	ef 90       	pop	r14
     79a:	df 90       	pop	r13
     79c:	cf 90       	pop	r12
     79e:	bf 90       	pop	r11
     7a0:	af 90       	pop	r10
     7a2:	08 95       	ret

000007a4 <write_FRAM>:
     7a4:	ef 92       	push	r14
     7a6:	ff 92       	push	r15
     7a8:	0f 93       	push	r16
     7aa:	1f 93       	push	r17
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	d6 2f       	mov	r29, r22
     7b2:	c7 2f       	mov	r28, r23
     7b4:	7a 01       	movw	r14, r20
     7b6:	02 2f       	mov	r16, r18
     7b8:	60 e0       	ldi	r22, 0x00	; 0
     7ba:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     7be:	81 11       	cpse	r24, r1
     7c0:	1f c0       	rjmp	.+62     	; 0x800 <write_FRAM+0x5c>
     7c2:	8c 2f       	mov	r24, r28
     7c4:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     7c8:	81 11       	cpse	r24, r1
     7ca:	1a c0       	rjmp	.+52     	; 0x800 <write_FRAM+0x5c>
     7cc:	8d 2f       	mov	r24, r29
     7ce:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     7d2:	81 11       	cpse	r24, r1
     7d4:	15 c0       	rjmp	.+42     	; 0x800 <write_FRAM+0x5c>
     7d6:	00 23       	and	r16, r16
     7d8:	79 f0       	breq	.+30     	; 0x7f8 <write_FRAM+0x54>
     7da:	e7 01       	movw	r28, r14
     7dc:	01 50       	subi	r16, 0x01	; 1
     7de:	10 e0       	ldi	r17, 0x00	; 0
     7e0:	0f 5f       	subi	r16, 0xFF	; 255
     7e2:	1f 4f       	sbci	r17, 0xFF	; 255
     7e4:	0e 0d       	add	r16, r14
     7e6:	1f 1d       	adc	r17, r15
     7e8:	89 91       	ld	r24, Y+
     7ea:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     7ee:	81 11       	cpse	r24, r1
     7f0:	07 c0       	rjmp	.+14     	; 0x800 <write_FRAM+0x5c>
     7f2:	c0 17       	cp	r28, r16
     7f4:	d1 07       	cpc	r29, r17
     7f6:	c1 f7       	brne	.-16     	; 0x7e8 <write_FRAM+0x44>
     7f8:	87 e0       	ldi	r24, 0x07	; 7
     7fa:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	08 95       	ret

0000080e <convert_ds2iso>:
     80e:	fb 01       	movw	r30, r22
     810:	20 81       	ld	r18, Z
     812:	1f 92       	push	r1
     814:	2f 93       	push	r18
     816:	21 81       	ldd	r18, Z+1	; 0x01
     818:	1f 92       	push	r1
     81a:	2f 93       	push	r18
     81c:	22 81       	ldd	r18, Z+2	; 0x02
     81e:	1f 92       	push	r1
     820:	2f 93       	push	r18
     822:	24 81       	ldd	r18, Z+4	; 0x04
     824:	1f 92       	push	r1
     826:	2f 93       	push	r18
     828:	25 81       	ldd	r18, Z+5	; 0x05
     82a:	1f 92       	push	r1
     82c:	2f 93       	push	r18
     82e:	26 81       	ldd	r18, Z+6	; 0x06
     830:	1f 92       	push	r1
     832:	2f 93       	push	r18
     834:	20 ed       	ldi	r18, 0xD0	; 208
     836:	39 e5       	ldi	r19, 0x59	; 89
     838:	3f 93       	push	r19
     83a:	2f 93       	push	r18
     83c:	9f 93       	push	r25
     83e:	8f 93       	push	r24
     840:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
     844:	8d b7       	in	r24, 0x3d	; 61
     846:	9e b7       	in	r25, 0x3e	; 62
     848:	40 96       	adiw	r24, 0x10	; 16
     84a:	8d bf       	out	0x3d, r24	; 61
     84c:	9e bf       	out	0x3e, r25	; 62
     84e:	08 95       	ret

00000850 <convert_iso2ds>:
     850:	dc 01       	movw	r26, r24
     852:	fb 01       	movw	r30, r22
     854:	81 89       	ldd	r24, Z+17	; 0x11
     856:	98 2f       	mov	r25, r24
     858:	92 95       	swap	r25
     85a:	90 7f       	andi	r25, 0xF0	; 240
     85c:	82 89       	ldd	r24, Z+18	; 0x12
     85e:	80 53       	subi	r24, 0x30	; 48
     860:	89 2b       	or	r24, r25
     862:	8c 93       	st	X, r24
     864:	86 85       	ldd	r24, Z+14	; 0x0e
     866:	98 2f       	mov	r25, r24
     868:	92 95       	swap	r25
     86a:	90 7f       	andi	r25, 0xF0	; 240
     86c:	87 85       	ldd	r24, Z+15	; 0x0f
     86e:	80 53       	subi	r24, 0x30	; 48
     870:	89 2b       	or	r24, r25
     872:	11 96       	adiw	r26, 0x01	; 1
     874:	8c 93       	st	X, r24
     876:	11 97       	sbiw	r26, 0x01	; 1
     878:	83 85       	ldd	r24, Z+11	; 0x0b
     87a:	98 2f       	mov	r25, r24
     87c:	92 95       	swap	r25
     87e:	90 7f       	andi	r25, 0xF0	; 240
     880:	84 85       	ldd	r24, Z+12	; 0x0c
     882:	80 53       	subi	r24, 0x30	; 48
     884:	89 2b       	or	r24, r25
     886:	12 96       	adiw	r26, 0x02	; 2
     888:	8c 93       	st	X, r24
     88a:	12 97       	sbiw	r26, 0x02	; 2
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	13 96       	adiw	r26, 0x03	; 3
     890:	8c 93       	st	X, r24
     892:	13 97       	sbiw	r26, 0x03	; 3
     894:	80 85       	ldd	r24, Z+8	; 0x08
     896:	98 2f       	mov	r25, r24
     898:	92 95       	swap	r25
     89a:	90 7f       	andi	r25, 0xF0	; 240
     89c:	81 85       	ldd	r24, Z+9	; 0x09
     89e:	80 53       	subi	r24, 0x30	; 48
     8a0:	89 2b       	or	r24, r25
     8a2:	14 96       	adiw	r26, 0x04	; 4
     8a4:	8c 93       	st	X, r24
     8a6:	14 97       	sbiw	r26, 0x04	; 4
     8a8:	85 81       	ldd	r24, Z+5	; 0x05
     8aa:	98 2f       	mov	r25, r24
     8ac:	92 95       	swap	r25
     8ae:	90 7f       	andi	r25, 0xF0	; 240
     8b0:	86 81       	ldd	r24, Z+6	; 0x06
     8b2:	80 53       	subi	r24, 0x30	; 48
     8b4:	89 2b       	or	r24, r25
     8b6:	15 96       	adiw	r26, 0x05	; 5
     8b8:	8c 93       	st	X, r24
     8ba:	15 97       	sbiw	r26, 0x05	; 5
     8bc:	82 81       	ldd	r24, Z+2	; 0x02
     8be:	98 2f       	mov	r25, r24
     8c0:	92 95       	swap	r25
     8c2:	90 7f       	andi	r25, 0xF0	; 240
     8c4:	83 81       	ldd	r24, Z+3	; 0x03
     8c6:	80 53       	subi	r24, 0x30	; 48
     8c8:	89 2b       	or	r24, r25
     8ca:	16 96       	adiw	r26, 0x06	; 6
     8cc:	8c 93       	st	X, r24
     8ce:	08 95       	ret

000008d0 <read_DS3231>:
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	7b 01       	movw	r14, r22
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     8e4:	88 23       	and	r24, r24
     8e6:	21 f0       	breq	.+8      	; 0x8f0 <read_DS3231+0x20>
     8e8:	97 e0       	ldi	r25, 0x07	; 7
     8ea:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     8ee:	25 c0       	rjmp	.+74     	; 0x93a <read_DS3231+0x6a>
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     8f6:	88 23       	and	r24, r24
     8f8:	21 f0       	breq	.+8      	; 0x902 <read_DS3231+0x32>
     8fa:	97 e0       	ldi	r25, 0x07	; 7
     8fc:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     900:	1c c0       	rjmp	.+56     	; 0x93a <read_DS3231+0x6a>
     902:	61 e0       	ldi	r22, 0x01	; 1
     904:	80 ed       	ldi	r24, 0xD0	; 208
     906:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     90a:	88 23       	and	r24, r24
     90c:	21 f0       	breq	.+8      	; 0x916 <read_DS3231+0x46>
     90e:	97 e0       	ldi	r25, 0x07	; 7
     910:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     914:	12 c0       	rjmp	.+36     	; 0x93a <read_DS3231+0x6a>
     916:	e7 01       	movw	r28, r14
     918:	87 01       	movw	r16, r14
     91a:	0a 5f       	subi	r16, 0xFA	; 250
     91c:	1f 4f       	sbci	r17, 0xFF	; 255
     91e:	0e 94 b8 00 	call	0x170	; 0x170 <read_TWI>
     922:	89 93       	st	Y+, r24
     924:	c0 17       	cp	r28, r16
     926:	d1 07       	cpc	r29, r17
     928:	d1 f7       	brne	.-12     	; 0x91e <read_DS3231+0x4e>
     92a:	0e 94 cc 00 	call	0x198	; 0x198 <readlast_TWI>
     92e:	f7 01       	movw	r30, r14
     930:	86 83       	std	Z+6, r24	; 0x06
     932:	87 e0       	ldi	r24, 0x07	; 7
     934:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	df 91       	pop	r29
     93c:	cf 91       	pop	r28
     93e:	1f 91       	pop	r17
     940:	0f 91       	pop	r16
     942:	ff 90       	pop	r15
     944:	ef 90       	pop	r14
     946:	08 95       	ret

00000948 <get_time>:
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
     950:	cd b7       	in	r28, 0x3d	; 61
     952:	de b7       	in	r29, 0x3e	; 62
     954:	27 97       	sbiw	r28, 0x07	; 7
     956:	cd bf       	out	0x3d, r28	; 61
     958:	de bf       	out	0x3e, r29	; 62
     95a:	8c 01       	movw	r16, r24
     95c:	be 01       	movw	r22, r28
     95e:	6f 5f       	subi	r22, 0xFF	; 255
     960:	7f 4f       	sbci	r23, 0xFF	; 255
     962:	80 ed       	ldi	r24, 0xD0	; 208
     964:	0e 94 68 04 	call	0x8d0	; 0x8d0 <read_DS3231>
     968:	88 23       	and	r24, r24
     96a:	49 f0       	breq	.+18     	; 0x97e <get_time+0x36>
     96c:	92 e1       	ldi	r25, 0x12	; 18
     96e:	e1 ef       	ldi	r30, 0xF1	; 241
     970:	f9 e5       	ldi	r31, 0x59	; 89
     972:	d8 01       	movw	r26, r16
     974:	01 90       	ld	r0, Z+
     976:	0d 92       	st	X+, r0
     978:	9a 95       	dec	r25
     97a:	e1 f7       	brne	.-8      	; 0x974 <get_time+0x2c>
     97c:	07 c0       	rjmp	.+14     	; 0x98c <get_time+0x44>
     97e:	be 01       	movw	r22, r28
     980:	6f 5f       	subi	r22, 0xFF	; 255
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	c8 01       	movw	r24, r16
     986:	0e 94 07 04 	call	0x80e	; 0x80e <convert_ds2iso>
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	27 96       	adiw	r28, 0x07	; 7
     98e:	cd bf       	out	0x3d, r28	; 61
     990:	de bf       	out	0x3e, r29	; 62
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	08 95       	ret

0000099c <write_DS3231>:
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	8b 01       	movw	r16, r22
     9a6:	60 e0       	ldi	r22, 0x00	; 0
     9a8:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     9ac:	88 23       	and	r24, r24
     9ae:	21 f0       	breq	.+8      	; 0x9b8 <write_DS3231+0x1c>
     9b0:	97 e0       	ldi	r25, 0x07	; 7
     9b2:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     9b6:	1c c0       	rjmp	.+56     	; 0x9f0 <write_DS3231+0x54>
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     9be:	88 23       	and	r24, r24
     9c0:	21 f0       	breq	.+8      	; 0x9ca <write_DS3231+0x2e>
     9c2:	97 e0       	ldi	r25, 0x07	; 7
     9c4:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     9c8:	13 c0       	rjmp	.+38     	; 0x9f0 <write_DS3231+0x54>
     9ca:	e8 01       	movw	r28, r16
     9cc:	09 5f       	subi	r16, 0xF9	; 249
     9ce:	1f 4f       	sbci	r17, 0xFF	; 255
     9d0:	89 91       	ld	r24, Y+
     9d2:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     9d6:	88 23       	and	r24, r24
     9d8:	21 f0       	breq	.+8      	; 0x9e2 <write_DS3231+0x46>
     9da:	97 e0       	ldi	r25, 0x07	; 7
     9dc:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     9e0:	07 c0       	rjmp	.+14     	; 0x9f0 <write_DS3231+0x54>
     9e2:	0c 17       	cp	r16, r28
     9e4:	1d 07       	cpc	r17, r29
     9e6:	a1 f7       	brne	.-24     	; 0x9d0 <write_DS3231+0x34>
     9e8:	87 e0       	ldi	r24, 0x07	; 7
     9ea:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	08 95       	ret

000009fa <put_time>:
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	cd b7       	in	r28, 0x3d	; 61
     a00:	de b7       	in	r29, 0x3e	; 62
     a02:	27 97       	sbiw	r28, 0x07	; 7
     a04:	cd bf       	out	0x3d, r28	; 61
     a06:	de bf       	out	0x3e, r29	; 62
     a08:	bc 01       	movw	r22, r24
     a0a:	ce 01       	movw	r24, r28
     a0c:	01 96       	adiw	r24, 0x01	; 1
     a0e:	0e 94 28 04 	call	0x850	; 0x850 <convert_iso2ds>
     a12:	be 01       	movw	r22, r28
     a14:	6f 5f       	subi	r22, 0xFF	; 255
     a16:	7f 4f       	sbci	r23, 0xFF	; 255
     a18:	80 ed       	ldi	r24, 0xD0	; 208
     a1a:	0e 94 ce 04 	call	0x99c	; 0x99c <write_DS3231>
     a1e:	27 96       	adiw	r28, 0x07	; 7
     a20:	cd bf       	out	0x3d, r28	; 61
     a22:	de bf       	out	0x3e, r29	; 62
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	08 95       	ret

00000a2a <checksum_NMEA>:
     a2a:	ef 92       	push	r14
     a2c:	ff 92       	push	r15
     a2e:	0f 93       	push	r16
     a30:	1f 93       	push	r17
     a32:	cf 93       	push	r28
     a34:	df 93       	push	r29
     a36:	cd b7       	in	r28, 0x3d	; 61
     a38:	de b7       	in	r29, 0x3e	; 62
     a3a:	2e 97       	sbiw	r28, 0x0e	; 14
     a3c:	cd bf       	out	0x3d, r28	; 61
     a3e:	de bf       	out	0x3e, r29	; 62
     a40:	8c 01       	movw	r16, r24
     a42:	88 e0       	ldi	r24, 0x08	; 8
     a44:	e3 e0       	ldi	r30, 0x03	; 3
     a46:	fa e5       	ldi	r31, 0x5A	; 90
     a48:	de 01       	movw	r26, r28
     a4a:	11 96       	adiw	r26, 0x01	; 1
     a4c:	01 90       	ld	r0, Z+
     a4e:	0d 92       	st	X+, r0
     a50:	8a 95       	dec	r24
     a52:	e1 f7       	brne	.-8      	; 0xa4c <checksum_NMEA+0x22>
     a54:	f8 01       	movw	r30, r16
     a56:	01 90       	ld	r0, Z+
     a58:	00 20       	and	r0, r0
     a5a:	e9 f7       	brne	.-6      	; 0xa56 <checksum_NMEA+0x2c>
     a5c:	31 97       	sbiw	r30, 0x01	; 1
     a5e:	3e 2f       	mov	r19, r30
     a60:	30 1b       	sub	r19, r16
     a62:	32 30       	cpi	r19, 0x02	; 2
     a64:	50 f0       	brcs	.+20     	; 0xa7a <checksum_NMEA+0x50>
     a66:	f8 01       	movw	r30, r16
     a68:	31 96       	adiw	r30, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	21 91       	ld	r18, Z+
     a70:	92 27       	eor	r25, r18
     a72:	8f 5f       	subi	r24, 0xFF	; 255
     a74:	38 13       	cpse	r19, r24
     a76:	fb cf       	rjmp	.-10     	; 0xa6e <checksum_NMEA+0x44>
     a78:	01 c0       	rjmp	.+2      	; 0xa7c <checksum_NMEA+0x52>
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	1f 92       	push	r1
     a7e:	9f 93       	push	r25
     a80:	ce 01       	movw	r24, r28
     a82:	01 96       	adiw	r24, 0x01	; 1
     a84:	9f 93       	push	r25
     a86:	8f 93       	push	r24
     a88:	7e 01       	movw	r14, r28
     a8a:	89 e0       	ldi	r24, 0x09	; 9
     a8c:	e8 0e       	add	r14, r24
     a8e:	f1 1c       	adc	r15, r1
     a90:	ff 92       	push	r15
     a92:	ef 92       	push	r14
     a94:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
     a98:	b7 01       	movw	r22, r14
     a9a:	c8 01       	movw	r24, r16
     a9c:	0e 94 ac 09 	call	0x1358	; 0x1358 <strcat>
     aa0:	0f 90       	pop	r0
     aa2:	0f 90       	pop	r0
     aa4:	0f 90       	pop	r0
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	2e 96       	adiw	r28, 0x0e	; 14
     aae:	cd bf       	out	0x3d, r28	; 61
     ab0:	de bf       	out	0x3e, r29	; 62
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	ff 90       	pop	r15
     abc:	ef 90       	pop	r14
     abe:	08 95       	ret

00000ac0 <get_ERR>:
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	cd b7       	in	r28, 0x3d	; 61
     ac6:	de b7       	in	r29, 0x3e	; 62
     ac8:	2c 97       	sbiw	r28, 0x0c	; 12
     aca:	cd bf       	out	0x3d, r28	; 61
     acc:	de bf       	out	0x3e, r29	; 62
     ace:	2c e0       	ldi	r18, 0x0C	; 12
     ad0:	eb e0       	ldi	r30, 0x0B	; 11
     ad2:	fa e5       	ldi	r31, 0x5A	; 90
     ad4:	de 01       	movw	r26, r28
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	01 90       	ld	r0, Z+
     ada:	0d 92       	st	X+, r0
     adc:	2a 95       	dec	r18
     ade:	e1 f7       	brne	.-8      	; 0xad8 <get_ERR+0x18>
     ae0:	be 01       	movw	r22, r28
     ae2:	6f 5f       	subi	r22, 0xFF	; 255
     ae4:	7f 4f       	sbci	r23, 0xFF	; 255
     ae6:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
     aea:	2c 96       	adiw	r28, 0x0c	; 12
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	08 95       	ret

00000af6 <write_OLED>:
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	d6 2f       	mov	r29, r22
     afc:	c4 2f       	mov	r28, r20
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     b04:	8d 2f       	mov	r24, r29
     b06:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     b0a:	8c 2f       	mov	r24, r28
     b0c:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     b10:	87 e0       	ldi	r24, 0x07	; 7
     b12:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	08 95       	ret

00000b1c <init_OLED>:
     b1c:	cf 93       	push	r28
     b1e:	81 11       	cpse	r24, r1
     b20:	0d c0       	rjmp	.+26     	; 0xb3c <init_OLED+0x20>
     b22:	e0 e8       	ldi	r30, 0x80	; 128
     b24:	f4 e0       	ldi	r31, 0x04	; 4
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	86 83       	std	Z+6, r24	; 0x06
     b2a:	81 83       	std	Z+1, r24	; 0x01
     b2c:	a1 e4       	ldi	r26, 0x41	; 65
     b2e:	b3 e0       	ldi	r27, 0x03	; 3
     b30:	11 97       	sbiw	r26, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <init_OLED+0x14>
     b34:	00 00       	nop
     b36:	85 83       	std	Z+5, r24	; 0x05
     b38:	c8 e7       	ldi	r28, 0x78	; 120
     b3a:	0c c0       	rjmp	.+24     	; 0xb54 <init_OLED+0x38>
     b3c:	e0 e8       	ldi	r30, 0x80	; 128
     b3e:	f4 e0       	ldi	r31, 0x04	; 4
     b40:	82 e0       	ldi	r24, 0x02	; 2
     b42:	86 83       	std	Z+6, r24	; 0x06
     b44:	81 83       	std	Z+1, r24	; 0x01
     b46:	a1 e4       	ldi	r26, 0x41	; 65
     b48:	b3 e0       	ldi	r27, 0x03	; 3
     b4a:	11 97       	sbiw	r26, 0x01	; 1
     b4c:	f1 f7       	brne	.-4      	; 0xb4a <init_OLED+0x2e>
     b4e:	00 00       	nop
     b50:	85 83       	std	Z+5, r24	; 0x05
     b52:	ca e7       	ldi	r28, 0x7A	; 122
     b54:	4a e2       	ldi	r20, 0x2A	; 42
     b56:	60 e0       	ldi	r22, 0x00	; 0
     b58:	8c 2f       	mov	r24, r28
     b5a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b5e:	41 e7       	ldi	r20, 0x71	; 113
     b60:	60 e0       	ldi	r22, 0x00	; 0
     b62:	8c 2f       	mov	r24, r28
     b64:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b68:	4c e5       	ldi	r20, 0x5C	; 92
     b6a:	60 e4       	ldi	r22, 0x40	; 64
     b6c:	8c 2f       	mov	r24, r28
     b6e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b72:	48 e2       	ldi	r20, 0x28	; 40
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	8c 2f       	mov	r24, r28
     b78:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b7c:	48 e0       	ldi	r20, 0x08	; 8
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	8c 2f       	mov	r24, r28
     b82:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b86:	4a e2       	ldi	r20, 0x2A	; 42
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	8c 2f       	mov	r24, r28
     b8c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b90:	49 e7       	ldi	r20, 0x79	; 121
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	8c 2f       	mov	r24, r28
     b96:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     b9a:	45 ed       	ldi	r20, 0xD5	; 213
     b9c:	60 e0       	ldi	r22, 0x00	; 0
     b9e:	8c 2f       	mov	r24, r28
     ba0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     ba4:	40 e7       	ldi	r20, 0x70	; 112
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	8c 2f       	mov	r24, r28
     baa:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bae:	48 e7       	ldi	r20, 0x78	; 120
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	8c 2f       	mov	r24, r28
     bb4:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bb8:	48 e0       	ldi	r20, 0x08	; 8
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	8c 2f       	mov	r24, r28
     bbe:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bc2:	46 e0       	ldi	r20, 0x06	; 6
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	8c 2f       	mov	r24, r28
     bc8:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bcc:	42 e7       	ldi	r20, 0x72	; 114
     bce:	60 e0       	ldi	r22, 0x00	; 0
     bd0:	8c 2f       	mov	r24, r28
     bd2:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bd6:	40 e0       	ldi	r20, 0x00	; 0
     bd8:	60 e4       	ldi	r22, 0x40	; 64
     bda:	8c 2f       	mov	r24, r28
     bdc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     be0:	4a e2       	ldi	r20, 0x2A	; 42
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	8c 2f       	mov	r24, r28
     be6:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bea:	49 e7       	ldi	r20, 0x79	; 121
     bec:	60 e0       	ldi	r22, 0x00	; 0
     bee:	8c 2f       	mov	r24, r28
     bf0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bf4:	4a ed       	ldi	r20, 0xDA	; 218
     bf6:	60 e0       	ldi	r22, 0x00	; 0
     bf8:	8c 2f       	mov	r24, r28
     bfa:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	8c 2f       	mov	r24, r28
     c04:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c08:	4c ed       	ldi	r20, 0xDC	; 220
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	8c 2f       	mov	r24, r28
     c0e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c12:	40 e0       	ldi	r20, 0x00	; 0
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	8c 2f       	mov	r24, r28
     c18:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c1c:	41 e8       	ldi	r20, 0x81	; 129
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	8c 2f       	mov	r24, r28
     c22:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c26:	4f e7       	ldi	r20, 0x7F	; 127
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	8c 2f       	mov	r24, r28
     c2c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c30:	49 ed       	ldi	r20, 0xD9	; 217
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	8c 2f       	mov	r24, r28
     c36:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c3a:	41 ef       	ldi	r20, 0xF1	; 241
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	8c 2f       	mov	r24, r28
     c40:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c44:	4b ed       	ldi	r20, 0xDB	; 219
     c46:	60 e0       	ldi	r22, 0x00	; 0
     c48:	8c 2f       	mov	r24, r28
     c4a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c4e:	40 e4       	ldi	r20, 0x40	; 64
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	8c 2f       	mov	r24, r28
     c54:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c58:	48 e7       	ldi	r20, 0x78	; 120
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	8c 2f       	mov	r24, r28
     c5e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c62:	48 e2       	ldi	r20, 0x28	; 40
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	8c 2f       	mov	r24, r28
     c68:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c6c:	41 e0       	ldi	r20, 0x01	; 1
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	8c 2f       	mov	r24, r28
     c72:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c76:	40 e8       	ldi	r20, 0x80	; 128
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	8c 2f       	mov	r24, r28
     c7c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c80:	4c e0       	ldi	r20, 0x0C	; 12
     c82:	60 e0       	ldi	r22, 0x00	; 0
     c84:	8c 2f       	mov	r24, r28
     c86:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     c8a:	ba e6       	ldi	r27, 0x6A	; 106
     c8c:	24 e0       	ldi	r18, 0x04	; 4
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	b1 50       	subi	r27, 0x01	; 1
     c92:	20 40       	sbci	r18, 0x00	; 0
     c94:	80 40       	sbci	r24, 0x00	; 0
     c96:	e1 f7       	brne	.-8      	; 0xc90 <init_OLED+0x174>
     c98:	00 c0       	rjmp	.+0      	; 0xc9a <init_OLED+0x17e>
     c9a:	cf 91       	pop	r28
     c9c:	08 95       	ret

00000c9e <writestr_OLED>:
     c9e:	cf 92       	push	r12
     ca0:	df 92       	push	r13
     ca2:	ff 92       	push	r15
     ca4:	0f 93       	push	r16
     ca6:	1f 93       	push	r17
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	e2 97       	sbiw	r28, 0x32	; 50
     cb2:	cd bf       	out	0x3d, r28	; 61
     cb4:	de bf       	out	0x3e, r29	; 62
     cb6:	14 2f       	mov	r17, r20
     cb8:	91 e1       	ldi	r25, 0x11	; 17
     cba:	e7 e1       	ldi	r30, 0x17	; 23
     cbc:	fa e5       	ldi	r31, 0x5A	; 90
     cbe:	de 01       	movw	r26, r28
     cc0:	92 96       	adiw	r26, 0x22	; 34
     cc2:	01 90       	ld	r0, Z+
     cc4:	0d 92       	st	X+, r0
     cc6:	9a 95       	dec	r25
     cc8:	e1 f7       	brne	.-8      	; 0xcc2 <writestr_OLED+0x24>
     cca:	88 23       	and	r24, r24
     ccc:	29 f0       	breq	.+10     	; 0xcd8 <writestr_OLED+0x3a>
     cce:	0f 2e       	mov	r0, r31
     cd0:	fa e7       	ldi	r31, 0x7A	; 122
     cd2:	ff 2e       	mov	r15, r31
     cd4:	f0 2d       	mov	r31, r0
     cd6:	04 c0       	rjmp	.+8      	; 0xce0 <writestr_OLED+0x42>
     cd8:	0f 2e       	mov	r0, r31
     cda:	f8 e7       	ldi	r31, 0x78	; 120
     cdc:	ff 2e       	mov	r15, r31
     cde:	f0 2d       	mov	r31, r0
     ce0:	ce 01       	movw	r24, r28
     ce2:	01 96       	adiw	r24, 0x01	; 1
     ce4:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
     ce8:	be 01       	movw	r22, r28
     cea:	6e 5d       	subi	r22, 0xDE	; 222
     cec:	7f 4f       	sbci	r23, 0xFF	; 255
     cee:	ce 01       	movw	r24, r28
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	0e 94 ac 09 	call	0x1358	; 0x1358 <strcat>
     cf6:	11 30       	cpi	r17, 0x01	; 1
     cf8:	31 f4       	brne	.+12     	; 0xd06 <writestr_OLED+0x68>
     cfa:	40 e8       	ldi	r20, 0x80	; 128
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	8f 2d       	mov	r24, r15
     d00:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     d04:	11 c0       	rjmp	.+34     	; 0xd28 <writestr_OLED+0x8a>
     d06:	40 ec       	ldi	r20, 0xC0	; 192
     d08:	60 e0       	ldi	r22, 0x00	; 0
     d0a:	8f 2d       	mov	r24, r15
     d0c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     d10:	0b c0       	rjmp	.+22     	; 0xd28 <writestr_OLED+0x8a>
     d12:	f8 01       	movw	r30, r16
     d14:	41 91       	ld	r20, Z+
     d16:	8f 01       	movw	r16, r30
     d18:	60 e4       	ldi	r22, 0x40	; 64
     d1a:	8f 2d       	mov	r24, r15
     d1c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <write_OLED>
     d20:	0c 15       	cp	r16, r12
     d22:	1d 05       	cpc	r17, r13
     d24:	b1 f7       	brne	.-20     	; 0xd12 <writestr_OLED+0x74>
     d26:	08 c0       	rjmp	.+16     	; 0xd38 <writestr_OLED+0x9a>
     d28:	8e 01       	movw	r16, r28
     d2a:	0f 5f       	subi	r16, 0xFF	; 255
     d2c:	1f 4f       	sbci	r17, 0xFF	; 255
     d2e:	6e 01       	movw	r12, r28
     d30:	f1 e1       	ldi	r31, 0x11	; 17
     d32:	cf 0e       	add	r12, r31
     d34:	d1 1c       	adc	r13, r1
     d36:	ed cf       	rjmp	.-38     	; 0xd12 <writestr_OLED+0x74>
     d38:	e2 96       	adiw	r28, 0x32	; 50
     d3a:	cd bf       	out	0x3d, r28	; 61
     d3c:	de bf       	out	0x3e, r29	; 62
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	1f 91       	pop	r17
     d44:	0f 91       	pop	r16
     d46:	ff 90       	pop	r15
     d48:	df 90       	pop	r13
     d4a:	cf 90       	pop	r12
     d4c:	08 95       	ret

00000d4e <get_BOOTTIME>:
void update_VERSION(void);

void get_BOOTTIME(char *boottime)
{

	eeprom_read_block((void *)boottime, (const void *)BOOTTIMEADDR, BOOTTIMESIZE);
     d4e:	45 e1       	ldi	r20, 0x15	; 21
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	6b e0       	ldi	r22, 0x0B	; 11
     d54:	70 e0       	ldi	r23, 0x00	; 0
     d56:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <eeprom_read_block>
     d5a:	08 95       	ret

00000d5c <get_VERSION>:
}

void get_VERSION(char *version)
{

	eeprom_read_block((void *)version, (const void *)VERSIONADDR, VERSIONSIZE);
     d5c:	4b e0       	ldi	r20, 0x0B	; 11
     d5e:	50 e0       	ldi	r21, 0x00	; 0
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <eeprom_read_block>
     d68:	08 95       	ret

00000d6a <update_BOOTTIME>:
	update_VERSION();

}

void update_BOOTTIME(void)
{
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	65 97       	sbiw	r28, 0x15	; 21
     d74:	cd bf       	out	0x3d, r28	; 61
     d76:	de bf       	out	0x3e, r29	; 62

	char boottime[21];

	get_time(boottime);
     d78:	ce 01       	movw	r24, r28
     d7a:	01 96       	adiw	r24, 0x01	; 1
     d7c:	0e 94 a4 04 	call	0x948	; 0x948 <get_time>
	eeprom_update_block((const void *)boottime, (void *)BOOTTIMEADDR, BOOTTIMESIZE);
     d80:	45 e1       	ldi	r20, 0x15	; 21
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	6b e0       	ldi	r22, 0x0B	; 11
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	ce 01       	movw	r24, r28
     d8a:	01 96       	adiw	r24, 0x01	; 1
     d8c:	0e 94 75 0c 	call	0x18ea	; 0x18ea <eeprom_update_block>

}
     d90:	65 96       	adiw	r28, 0x15	; 21
     d92:	cd bf       	out	0x3d, r28	; 61
     d94:	de bf       	out	0x3e, r29	; 62
     d96:	df 91       	pop	r29
     d98:	cf 91       	pop	r28
     d9a:	08 95       	ret

00000d9c <update_VERSION>:

void update_VERSION(void)
{
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	2b 97       	sbiw	r28, 0x0b	; 11
     da6:	cd bf       	out	0x3d, r28	; 61
     da8:	de bf       	out	0x3e, r29	; 62

	char version[11];

	strcpy(version, VERSION);
     daa:	8b e0       	ldi	r24, 0x0B	; 11
     dac:	e8 e2       	ldi	r30, 0x28	; 40
     dae:	fa e5       	ldi	r31, 0x5A	; 90
     db0:	de 01       	movw	r26, r28
     db2:	11 96       	adiw	r26, 0x01	; 1
     db4:	01 90       	ld	r0, Z+
     db6:	0d 92       	st	X+, r0
     db8:	8a 95       	dec	r24
     dba:	e1 f7       	brne	.-8      	; 0xdb4 <update_VERSION+0x18>
	eeprom_update_block((const void *)version, (void *)VERSIONADDR, VERSIONSIZE);
     dbc:	4b e0       	ldi	r20, 0x0B	; 11
     dbe:	50 e0       	ldi	r21, 0x00	; 0
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	0e 94 75 0c 	call	0x18ea	; 0x18ea <eeprom_update_block>

}
     dcc:	2b 96       	adiw	r28, 0x0b	; 11
     dce:	cd bf       	out	0x3d, r28	; 61
     dd0:	de bf       	out	0x3e, r29	; 62
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	08 95       	ret

00000dd8 <init_EEPROM>:
}

void init_EEPROM(void)
{

	update_BOOTTIME();
     dd8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <update_BOOTTIME>
	update_VERSION();
     ddc:	0e 94 ce 06 	call	0xd9c	; 0xd9c <update_VERSION>
     de0:	08 95       	ret

00000de2 <reboot>:
void reboot(void);

void reboot(void)
{

	CPU_CCP = CCP_IOREG_gc;
     de2:	88 ed       	ldi	r24, 0xD8	; 216
     de4:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = WDT_PERIOD_8CLK_gc;
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f4100>
     dec:	08 95       	ret

00000dee <close>:
uint8_t close(char *ptr)
{

	ptr++;

	switch (*ptr) {
     dee:	fc 01       	movw	r30, r24
     df0:	81 81       	ldd	r24, Z+1	; 0x01
     df2:	8c 36       	cpi	r24, 0x6C	; 108
     df4:	99 f0       	breq	.+38     	; 0xe1c <close+0x2e>
     df6:	18 f4       	brcc	.+6      	; 0xdfe <close+0x10>
     df8:	82 36       	cpi	r24, 0x62	; 98
     dfa:	31 f0       	breq	.+12     	; 0xe08 <close+0x1a>
     dfc:	21 c0       	rjmp	.+66     	; 0xe40 <close+0x52>
     dfe:	82 37       	cpi	r24, 0x72	; 114
     e00:	99 f0       	breq	.+38     	; 0xe28 <close+0x3a>
     e02:	83 37       	cpi	r24, 0x73	; 115
     e04:	b9 f0       	breq	.+46     	; 0xe34 <close+0x46>
     e06:	1c c0       	rjmp	.+56     	; 0xe40 <close+0x52>

		case 'b':
			set_valves(LEFTBM, LEFTCLOSE);
     e08:	6a ee       	ldi	r22, 0xEA	; 234
     e0a:	84 e4       	ldi	r24, 0x44	; 68
     e0c:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			set_valves(RIGHTBM, RIGHTCLOSE);
     e10:	66 ee       	ldi	r22, 0xE6	; 230
     e12:	88 e8       	ldi	r24, 0x88	; 136
     e14:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     e18:	80 e0       	ldi	r24, 0x00	; 0
	switch (*ptr) {

		case 'b':
			set_valves(LEFTBM, LEFTCLOSE);
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;
     e1a:	08 95       	ret

		case 'l':
			set_valves(LEFTBM, LEFTCLOSE);
     e1c:	6a ee       	ldi	r22, 0xEA	; 234
     e1e:	84 e4       	ldi	r24, 0x44	; 68
     e20:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     e24:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;

		case 'l':
			set_valves(LEFTBM, LEFTCLOSE);
			break;
     e26:	08 95       	ret
			
		case 'r':
			set_valves(RIGHTBM, RIGHTCLOSE);
     e28:	66 ee       	ldi	r22, 0xE6	; 230
     e2a:	88 e8       	ldi	r24, 0x88	; 136
     e2c:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     e30:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(LEFTBM, LEFTCLOSE);
			break;
			
		case 'r':
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;
     e32:	08 95       	ret

		case 's':										// Close shutter
			set_valves(SHUTTERBM, SHUTTERCLOSE);
     e34:	6c ee       	ldi	r22, 0xEC	; 236
     e36:	82 e2       	ldi	r24, 0x22	; 34
     e38:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     e3c:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;

		case 's':										// Close shutter
			set_valves(SHUTTERBM, SHUTTERCLOSE);
			break;
     e3e:	08 95       	ret

		default:
			return(1);
     e40:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     e42:	08 95       	ret

00000e44 <open>:

uint8_t open(char *ptr)
{

	ptr++;
	switch (*ptr) {
     e44:	fc 01       	movw	r30, r24
     e46:	81 81       	ldd	r24, Z+1	; 0x01
     e48:	8c 36       	cpi	r24, 0x6C	; 108
     e4a:	99 f0       	breq	.+38     	; 0xe72 <open+0x2e>
     e4c:	18 f4       	brcc	.+6      	; 0xe54 <open+0x10>
     e4e:	82 36       	cpi	r24, 0x62	; 98
     e50:	31 f0       	breq	.+12     	; 0xe5e <open+0x1a>
     e52:	21 c0       	rjmp	.+66     	; 0xe96 <open+0x52>
     e54:	82 37       	cpi	r24, 0x72	; 114
     e56:	99 f0       	breq	.+38     	; 0xe7e <open+0x3a>
     e58:	83 37       	cpi	r24, 0x73	; 115
     e5a:	b9 f0       	breq	.+46     	; 0xe8a <open+0x46>
     e5c:	1c c0       	rjmp	.+56     	; 0xe96 <open+0x52>

		case 'b':
			set_valves(LEFTBM, LEFTOPEN);
     e5e:	6e ea       	ldi	r22, 0xAE	; 174
     e60:	84 e4       	ldi	r24, 0x44	; 68
     e62:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			set_valves(RIGHTBM, RIGHTOPEN);
     e66:	6e e6       	ldi	r22, 0x6E	; 110
     e68:	88 e8       	ldi	r24, 0x88	; 136
     e6a:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     e6e:	80 e0       	ldi	r24, 0x00	; 0
	switch (*ptr) {

		case 'b':
			set_valves(LEFTBM, LEFTOPEN);
			set_valves(RIGHTBM, RIGHTOPEN);
			break;
     e70:	08 95       	ret

		case 'l':
			set_valves(LEFTBM, LEFTOPEN);
     e72:	6e ea       	ldi	r22, 0xAE	; 174
     e74:	84 e4       	ldi	r24, 0x44	; 68
     e76:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     e7a:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTOPEN);
			break;

		case 'l':
			set_valves(LEFTBM, LEFTOPEN);
			break;
     e7c:	08 95       	ret
		
		case 'r':
			set_valves(RIGHTBM, RIGHTOPEN);
     e7e:	6e e6       	ldi	r22, 0x6E	; 110
     e80:	88 e8       	ldi	r24, 0x88	; 136
     e82:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     e86:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(LEFTBM, LEFTOPEN);
			break;
		
		case 'r':
			set_valves(RIGHTBM, RIGHTOPEN);
			break;
     e88:	08 95       	ret

		case 's':
			set_valves(SHUTTERBM, SHUTTEROPEN);
     e8a:	6e ec       	ldi	r22, 0xCE	; 206
     e8c:	82 e2       	ldi	r24, 0x22	; 34
     e8e:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     e92:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTOPEN);
			break;

		case 's':
			set_valves(SHUTTERBM, SHUTTEROPEN);
			break;
     e94:	08 95       	ret

		default:
			return(1);
     e96:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     e98:	08 95       	ret

00000e9a <report>:

uint8_t report(char *ptr)
{
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	cd b7       	in	r28, 0x3d	; 61
     ea4:	de b7       	in	r29, 0x3e	; 62
     ea6:	c2 59       	subi	r28, 0x92	; 146
     ea8:	d1 09       	sbc	r29, r1
     eaa:	cd bf       	out	0x3d, r28	; 61
     eac:	de bf       	out	0x3e, r29	; 62

	char outbuf[81], isotime[21], version[11];
	const char format_BTM[]="$S%dBTM,%s";
     eae:	2b e0       	ldi	r18, 0x0B	; 11
     eb0:	e3 e3       	ldi	r30, 0x33	; 51
     eb2:	fa e5       	ldi	r31, 0x5A	; 90
     eb4:	de 01       	movw	r26, r28
     eb6:	ae 58       	subi	r26, 0x8E	; 142
     eb8:	bf 4f       	sbci	r27, 0xFF	; 255
     eba:	01 90       	ld	r0, Z+
     ebc:	0d 92       	st	X+, r0
     ebe:	2a 95       	dec	r18
     ec0:	e1 f7       	brne	.-8      	; 0xeba <report+0x20>
	const char format_TIM[]="$S%dTIM,%s";
     ec2:	2b e0       	ldi	r18, 0x0B	; 11
     ec4:	ee e3       	ldi	r30, 0x3E	; 62
     ec6:	fa e5       	ldi	r31, 0x5A	; 90
     ec8:	de 01       	movw	r26, r28
     eca:	a3 58       	subi	r26, 0x83	; 131
     ecc:	bf 4f       	sbci	r27, 0xFF	; 255
     ece:	01 90       	ld	r0, Z+
     ed0:	0d 92       	st	X+, r0
     ed2:	2a 95       	dec	r18
     ed4:	e1 f7       	brne	.-8      	; 0xece <report+0x34>
	const char format_VER[]="$S%dVER,%s";
     ed6:	2b e0       	ldi	r18, 0x0B	; 11
     ed8:	e9 e4       	ldi	r30, 0x49	; 73
     eda:	fa e5       	ldi	r31, 0x5A	; 90
     edc:	de 01       	movw	r26, r28
     ede:	a8 57       	subi	r26, 0x78	; 120
     ee0:	bf 4f       	sbci	r27, 0xFF	; 255
     ee2:	01 90       	ld	r0, Z+
     ee4:	0d 92       	st	X+, r0
     ee6:	2a 95       	dec	r18
     ee8:	e1 f7       	brne	.-8      	; 0xee2 <report+0x48>

	ptr++;

	switch(*ptr++) {
     eea:	fc 01       	movw	r30, r24
     eec:	81 81       	ldd	r24, Z+1	; 0x01
     eee:	84 37       	cpi	r24, 0x74	; 116
     ef0:	79 f1       	breq	.+94     	; 0xf50 <report+0xb6>
     ef2:	86 37       	cpi	r24, 0x76	; 118
     ef4:	09 f4       	brne	.+2      	; 0xef8 <report+0x5e>
     ef6:	55 c0       	rjmp	.+170    	; 0xfa2 <report+0x108>
     ef8:	82 36       	cpi	r24, 0x62	; 98
     efa:	09 f0       	breq	.+2      	; 0xefe <report+0x64>
     efc:	7b c0       	rjmp	.+246    	; 0xff4 <report+0x15a>

		case 'b':					// Boot time
			get_BOOTTIME(isotime);
     efe:	8e 01       	movw	r16, r28
     f00:	0e 5a       	subi	r16, 0xAE	; 174
     f02:	1f 4f       	sbci	r17, 0xFF	; 255
     f04:	c8 01       	movw	r24, r16
     f06:	0e 94 a7 06 	call	0xd4e	; 0xd4e <get_BOOTTIME>
			sprintf(outbuf, format_BTM, get_specID(), isotime);
     f0a:	1f 93       	push	r17
     f0c:	0f 93       	push	r16
     f0e:	1f 92       	push	r1
     f10:	82 e0       	ldi	r24, 0x02	; 2
     f12:	8f 93       	push	r24
     f14:	ce 01       	movw	r24, r28
     f16:	8e 58       	subi	r24, 0x8E	; 142
     f18:	9f 4f       	sbci	r25, 0xFF	; 255
     f1a:	9f 93       	push	r25
     f1c:	8f 93       	push	r24
     f1e:	01 55       	subi	r16, 0x51	; 81
     f20:	11 09       	sbc	r17, r1
     f22:	1f 93       	push	r17
     f24:	0f 93       	push	r16
     f26:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
			checksum_NMEA(outbuf);
     f2a:	c8 01       	movw	r24, r16
     f2c:	0e 94 15 05 	call	0xa2a	; 0xa2a <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     f30:	f8 01       	movw	r30, r16
     f32:	01 90       	ld	r0, Z+
     f34:	00 20       	and	r0, r0
     f36:	e9 f7       	brne	.-6      	; 0xf32 <report+0x98>
     f38:	31 97       	sbiw	r30, 0x01	; 1
     f3a:	af 01       	movw	r20, r30
     f3c:	40 1b       	sub	r20, r16
     f3e:	51 0b       	sbc	r21, r17
     f40:	b8 01       	movw	r22, r16
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     f48:	cd bf       	out	0x3d, r28	; 61
     f4a:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     f4c:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     f4e:	53 c0       	rjmp	.+166    	; 0xff6 <report+0x15c>

		case 't':					// Report current time on specMech clock
			get_time(isotime);
     f50:	8e 01       	movw	r16, r28
     f52:	0e 5a       	subi	r16, 0xAE	; 174
     f54:	1f 4f       	sbci	r17, 0xFF	; 255
     f56:	c8 01       	movw	r24, r16
     f58:	0e 94 a4 04 	call	0x948	; 0x948 <get_time>
			sprintf(outbuf, format_TIM, get_specID(), isotime);
     f5c:	1f 93       	push	r17
     f5e:	0f 93       	push	r16
     f60:	1f 92       	push	r1
     f62:	82 e0       	ldi	r24, 0x02	; 2
     f64:	8f 93       	push	r24
     f66:	ce 01       	movw	r24, r28
     f68:	83 58       	subi	r24, 0x83	; 131
     f6a:	9f 4f       	sbci	r25, 0xFF	; 255
     f6c:	9f 93       	push	r25
     f6e:	8f 93       	push	r24
     f70:	01 55       	subi	r16, 0x51	; 81
     f72:	11 09       	sbc	r17, r1
     f74:	1f 93       	push	r17
     f76:	0f 93       	push	r16
     f78:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
			checksum_NMEA(outbuf);
     f7c:	c8 01       	movw	r24, r16
     f7e:	0e 94 15 05 	call	0xa2a	; 0xa2a <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     f82:	f8 01       	movw	r30, r16
     f84:	01 90       	ld	r0, Z+
     f86:	00 20       	and	r0, r0
     f88:	e9 f7       	brne	.-6      	; 0xf84 <report+0xea>
     f8a:	31 97       	sbiw	r30, 0x01	; 1
     f8c:	af 01       	movw	r20, r30
     f8e:	40 1b       	sub	r20, r16
     f90:	51 0b       	sbc	r21, r17
     f92:	b8 01       	movw	r22, r16
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     f9a:	cd bf       	out	0x3d, r28	; 61
     f9c:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     f9e:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     fa0:	2a c0       	rjmp	.+84     	; 0xff6 <report+0x15c>

		case 'v':
			get_VERSION(version);	// Send the specMech version
     fa2:	8e 01       	movw	r16, r28
     fa4:	09 59       	subi	r16, 0x99	; 153
     fa6:	1f 4f       	sbci	r17, 0xFF	; 255
     fa8:	c8 01       	movw	r24, r16
     faa:	0e 94 ae 06 	call	0xd5c	; 0xd5c <get_VERSION>
			sprintf(outbuf, format_VER, get_specID(), version);
     fae:	1f 93       	push	r17
     fb0:	0f 93       	push	r16
     fb2:	1f 92       	push	r1
     fb4:	82 e0       	ldi	r24, 0x02	; 2
     fb6:	8f 93       	push	r24
     fb8:	ce 01       	movw	r24, r28
     fba:	88 57       	subi	r24, 0x78	; 120
     fbc:	9f 4f       	sbci	r25, 0xFF	; 255
     fbe:	9f 93       	push	r25
     fc0:	8f 93       	push	r24
     fc2:	06 56       	subi	r16, 0x66	; 102
     fc4:	11 09       	sbc	r17, r1
     fc6:	1f 93       	push	r17
     fc8:	0f 93       	push	r16
     fca:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
			checksum_NMEA(outbuf);
     fce:	c8 01       	movw	r24, r16
     fd0:	0e 94 15 05 	call	0xa2a	; 0xa2a <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     fd4:	f8 01       	movw	r30, r16
     fd6:	01 90       	ld	r0, Z+
     fd8:	00 20       	and	r0, r0
     fda:	e9 f7       	brne	.-6      	; 0xfd6 <report+0x13c>
     fdc:	31 97       	sbiw	r30, 0x01	; 1
     fde:	af 01       	movw	r20, r30
     fe0:	40 1b       	sub	r20, r16
     fe2:	51 0b       	sbc	r21, r17
     fe4:	b8 01       	movw	r22, r16
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     fec:	cd bf       	out	0x3d, r28	; 61
     fee:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     ff0:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

//			get_EOD(outbuf);
//			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     ff2:	01 c0       	rjmp	.+2      	; 0xff6 <report+0x15c>

		default:
			return(1);
     ff4:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     ff6:	ce 56       	subi	r28, 0x6E	; 110
     ff8:	df 4f       	sbci	r29, 0xFF	; 255
     ffa:	cd bf       	out	0x3d, r28	; 61
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	1f 91       	pop	r17
    1004:	0f 91       	pop	r16
    1006:	08 95       	ret

00001008 <send_prompt>:

void send_prompt(uint8_t prompt_flag)
{
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	6d 97       	sbiw	r28, 0x1d	; 29
    1016:	cd bf       	out	0x3d, r28	; 61
    1018:	de bf       	out	0x3e, r29	; 62

	const char str0[] = ">";
    101a:	2e e3       	ldi	r18, 0x3E	; 62
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	29 83       	std	Y+1, r18	; 0x01
    1020:	3a 83       	std	Y+2, r19	; 0x02
	const char str1[] = "!";
    1022:	21 e2       	ldi	r18, 0x21	; 33
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	2b 83       	std	Y+3, r18	; 0x03
    1028:	3c 83       	std	Y+4, r19	; 0x04

	char prompt_str[25];

	switch (prompt_flag) {
    102a:	81 30       	cpi	r24, 0x01	; 1
    102c:	d1 f0       	breq	.+52     	; 0x1062 <send_prompt+0x5a>
    102e:	18 f0       	brcs	.+6      	; 0x1036 <send_prompt+0x2e>
    1030:	82 30       	cpi	r24, 0x02	; 2
    1032:	e1 f1       	breq	.+120    	; 0x10ac <send_prompt+0xa4>
    1034:	51 c0       	rjmp	.+162    	; 0x10d8 <send_prompt+0xd0>
		case 0:
			strcpy(prompt_str, str0);
    1036:	8e 01       	movw	r16, r28
    1038:	0b 5f       	subi	r16, 0xFB	; 251
    103a:	1f 4f       	sbci	r17, 0xFF	; 255
    103c:	be 01       	movw	r22, r28
    103e:	6f 5f       	subi	r22, 0xFF	; 255
    1040:	7f 4f       	sbci	r23, 0xFF	; 255
    1042:	c8 01       	movw	r24, r16
    1044:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    1048:	f8 01       	movw	r30, r16
    104a:	01 90       	ld	r0, Z+
    104c:	00 20       	and	r0, r0
    104e:	e9 f7       	brne	.-6      	; 0x104a <send_prompt+0x42>
    1050:	31 97       	sbiw	r30, 0x01	; 1
    1052:	af 01       	movw	r20, r30
    1054:	40 1b       	sub	r20, r16
    1056:	51 0b       	sbc	r21, r17
    1058:	b8 01       	movw	r22, r16
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
    1060:	50 c0       	rjmp	.+160    	; 0x1102 <send_prompt+0xfa>

		case 1:
			get_ERR(prompt_str);
    1062:	8e 01       	movw	r16, r28
    1064:	0b 5f       	subi	r16, 0xFB	; 251
    1066:	1f 4f       	sbci	r17, 0xFF	; 255
    1068:	c8 01       	movw	r24, r16
    106a:	0e 94 60 05 	call	0xac0	; 0xac0 <get_ERR>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    106e:	f8 01       	movw	r30, r16
    1070:	01 90       	ld	r0, Z+
    1072:	00 20       	and	r0, r0
    1074:	e9 f7       	brne	.-6      	; 0x1070 <send_prompt+0x68>
    1076:	31 97       	sbiw	r30, 0x01	; 1
    1078:	af 01       	movw	r20, r30
    107a:	40 1b       	sub	r20, r16
    107c:	51 0b       	sbc	r21, r17
    107e:	b8 01       	movw	r22, r16
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
//			get_EOD(prompt_str);
//			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
			strcpy(prompt_str, str0);
    1086:	be 01       	movw	r22, r28
    1088:	6f 5f       	subi	r22, 0xFF	; 255
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	c8 01       	movw	r24, r16
    108e:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    1092:	f8 01       	movw	r30, r16
    1094:	01 90       	ld	r0, Z+
    1096:	00 20       	and	r0, r0
    1098:	e9 f7       	brne	.-6      	; 0x1094 <send_prompt+0x8c>
    109a:	31 97       	sbiw	r30, 0x01	; 1
    109c:	af 01       	movw	r20, r30
    109e:	40 1b       	sub	r20, r16
    10a0:	51 0b       	sbc	r21, r17
    10a2:	b8 01       	movw	r22, r16
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
    10aa:	2b c0       	rjmp	.+86     	; 0x1102 <send_prompt+0xfa>

		case REBOOTNACK:
			strcpy(prompt_str, str1);
    10ac:	8e 01       	movw	r16, r28
    10ae:	0b 5f       	subi	r16, 0xFB	; 251
    10b0:	1f 4f       	sbci	r17, 0xFF	; 255
    10b2:	be 01       	movw	r22, r28
    10b4:	6d 5f       	subi	r22, 0xFD	; 253
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	c8 01       	movw	r24, r16
    10ba:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    10be:	f8 01       	movw	r30, r16
    10c0:	01 90       	ld	r0, Z+
    10c2:	00 20       	and	r0, r0
    10c4:	e9 f7       	brne	.-6      	; 0x10c0 <send_prompt+0xb8>
    10c6:	31 97       	sbiw	r30, 0x01	; 1
    10c8:	af 01       	movw	r20, r30
    10ca:	40 1b       	sub	r20, r16
    10cc:	51 0b       	sbc	r21, r17
    10ce:	b8 01       	movw	r22, r16
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
    10d6:	15 c0       	rjmp	.+42     	; 0x1102 <send_prompt+0xfa>

		default:
			strcpy(prompt_str, str1);
    10d8:	8e 01       	movw	r16, r28
    10da:	0b 5f       	subi	r16, 0xFB	; 251
    10dc:	1f 4f       	sbci	r17, 0xFF	; 255
    10de:	be 01       	movw	r22, r28
    10e0:	6d 5f       	subi	r22, 0xFD	; 253
    10e2:	7f 4f       	sbci	r23, 0xFF	; 255
    10e4:	c8 01       	movw	r24, r16
    10e6:	0e 94 b7 09 	call	0x136e	; 0x136e <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
    10ea:	f8 01       	movw	r30, r16
    10ec:	01 90       	ld	r0, Z+
    10ee:	00 20       	and	r0, r0
    10f0:	e9 f7       	brne	.-6      	; 0x10ec <send_prompt+0xe4>
    10f2:	31 97       	sbiw	r30, 0x01	; 1
    10f4:	af 01       	movw	r20, r30
    10f6:	40 1b       	sub	r20, r16
    10f8:	51 0b       	sbc	r21, r17
    10fa:	b8 01       	movw	r22, r16
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
			
	}


}
    1102:	6d 96       	adiw	r28, 0x1d	; 29
    1104:	cd bf       	out	0x3d, r28	; 61
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <set>:

uint8_t set(char *ptr)
{

	ptr++;
	switch(*ptr) {
    1112:	fc 01       	movw	r30, r24
    1114:	21 81       	ldd	r18, Z+1	; 0x01
    1116:	24 37       	cpi	r18, 0x74	; 116
    1118:	29 f4       	brne	.+10     	; 0x1124 <set+0x12>
		case 't':			// date/time
			ptr++;
			put_time(ptr);
    111a:	02 96       	adiw	r24, 0x02	; 2
    111c:	0e 94 fd 04 	call	0x9fa	; 0x9fa <put_time>

		default:
			return(1);
			break;
	}
	return(0);
    1120:	80 e0       	ldi	r24, 0x00	; 0
    1122:	08 95       	ret
			ptr++;
			put_time(ptr);
			break;

		default:
			return(1);
    1124:	81 e0       	ldi	r24, 0x01	; 1
			break;
	}
	return(0);
    1126:	08 95       	ret

00001128 <commands>:
	return(0);

}

void commands(void)
{
    1128:	0f 93       	push	r16
    112a:	1f 93       	push	r17
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	cd b7       	in	r28, 0x3d	; 61
    1132:	de b7       	in	r29, 0x3e	; 62
    1134:	cc 5b       	subi	r28, 0xBC	; 188
    1136:	d1 09       	sbc	r29, r1
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	de bf       	out	0x3e, r29	; 62
	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
    113c:	20 91 08 29 	lds	r18, 0x2908	; 0x802908 <recv0_buf+0x81>
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	f9 01       	movw	r30, r18
    1144:	e9 57       	subi	r30, 0x79	; 121
    1146:	f7 4d       	sbci	r31, 0xD7	; 215
    1148:	90 81       	ld	r25, Z
    114a:	9d 8b       	std	Y+21, r25	; 0x15
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
    114c:	2f 5f       	subi	r18, 0xFF	; 255
    114e:	3f 4f       	sbci	r19, 0xFF	; 255
    1150:	2f 77       	andi	r18, 0x7F	; 127
    1152:	30 78       	andi	r19, 0x80	; 128
    1154:	33 23       	and	r19, r19
    1156:	34 f4       	brge	.+12     	; 0x1164 <commands+0x3c>
    1158:	21 50       	subi	r18, 0x01	; 1
    115a:	31 09       	sbc	r19, r1
    115c:	20 68       	ori	r18, 0x80	; 128
    115e:	3f 6f       	ori	r19, 0xFF	; 255
    1160:	2f 5f       	subi	r18, 0xFF	; 255
    1162:	3f 4f       	sbci	r19, 0xFF	; 255
    1164:	82 2f       	mov	r24, r18
    1166:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <recv0_buf+0x81>
		if (cmdline[i] == '\0') {
    116a:	99 23       	and	r25, r25
    116c:	09 f4       	brne	.+2      	; 0x1170 <commands+0x48>
    116e:	cc c0       	rjmp	.+408    	; 0x1308 <commands+0x1e0>
	char *ptr, strbuf[40];
	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
    1170:	21 e0       	ldi	r18, 0x01	; 1
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	fc 01       	movw	r30, r24
    1176:	e9 57       	subi	r30, 0x79	; 121
    1178:	f7 4d       	sbci	r31, 0xD7	; 215
    117a:	30 81       	ld	r19, Z
    117c:	e5 e1       	ldi	r30, 0x15	; 21
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	ec 0f       	add	r30, r28
    1182:	fd 1f       	adc	r31, r29
    1184:	e2 0f       	add	r30, r18
    1186:	f1 1d       	adc	r31, r1
    1188:	30 83       	st	Z, r19
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	8f 77       	andi	r24, 0x7F	; 127
    118e:	90 78       	andi	r25, 0x80	; 128
    1190:	99 23       	and	r25, r25
    1192:	24 f4       	brge	.+8      	; 0x119c <commands+0x74>
    1194:	01 97       	sbiw	r24, 0x01	; 1
    1196:	80 68       	ori	r24, 0x80	; 128
    1198:	9f 6f       	ori	r25, 0xFF	; 255
    119a:	01 96       	adiw	r24, 0x01	; 1
		if (cmdline[i] == '\0') {
    119c:	31 11       	cpse	r19, r1
    119e:	03 c0       	rjmp	.+6      	; 0x11a6 <commands+0x7e>
    11a0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <recv0_buf+0x81>
    11a4:	04 c0       	rjmp	.+8      	; 0x11ae <commands+0x86>
	char *ptr, strbuf[40];
	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
    11a6:	2f 5f       	subi	r18, 0xFF	; 255
    11a8:	22 f7       	brpl	.-56     	; 0x1172 <commands+0x4a>
    11aa:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <recv0_buf+0x81>
		if (cmdline[i] == '\0') {
			break;
		}
	}

	if (rebootnack) {			// Rebooted, but not acknowledged
    11ae:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    11b2:	88 23       	and	r24, r24
    11b4:	69 f0       	breq	.+26     	; 0x11d0 <commands+0xa8>
		if (cmdline[0] == '!') {
    11b6:	8d 89       	ldd	r24, Y+21	; 0x15
    11b8:	81 32       	cpi	r24, 0x21	; 33
    11ba:	31 f4       	brne	.+12     	; 0x11c8 <commands+0xa0>
			rebootnack = 0;
    11bc:	10 92 00 28 	sts	0x2800, r1	; 0x802800 <__DATA_REGION_ORIGIN__>
			send_prompt(0);
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	0e 94 04 08 	call	0x1008	; 0x1008 <send_prompt>
			return;
    11c6:	a6 c0       	rjmp	.+332    	; 0x1314 <commands+0x1ec>
		} else {
			send_prompt(REBOOTNACK);
    11c8:	82 e0       	ldi	r24, 0x02	; 2
    11ca:	0e 94 04 08 	call	0x1008	; 0x1008 <send_prompt>
			return;			
    11ce:	a2 c0       	rjmp	.+324    	; 0x1314 <commands+0x1ec>
	}

	prompt_flag = 0;
	ptr = cmdline;

	switch (*ptr) {
    11d0:	8d 89       	ldd	r24, Y+21	; 0x15
    11d2:	85 36       	cpi	r24, 0x65	; 101
    11d4:	11 f1       	breq	.+68     	; 0x121a <commands+0xf2>
    11d6:	68 f4       	brcc	.+26     	; 0x11f2 <commands+0xca>
    11d8:	85 34       	cpi	r24, 0x45	; 69
    11da:	41 f1       	breq	.+80     	; 0x122c <commands+0x104>
    11dc:	20 f4       	brcc	.+8      	; 0x11e6 <commands+0xbe>
    11de:	88 23       	and	r24, r24
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <commands+0xbc>
    11e2:	8e c0       	rjmp	.+284    	; 0x1300 <commands+0x1d8>
    11e4:	13 c0       	rjmp	.+38     	; 0x120c <commands+0xe4>
    11e6:	82 35       	cpi	r24, 0x52	; 82
    11e8:	09 f4       	brne	.+2      	; 0x11ec <commands+0xc4>
    11ea:	81 c0       	rjmp	.+258    	; 0x12ee <commands+0x1c6>
    11ec:	83 36       	cpi	r24, 0x63	; 99
    11ee:	81 f0       	breq	.+32     	; 0x1210 <commands+0xe8>
    11f0:	0d c0       	rjmp	.+26     	; 0x120c <commands+0xe4>
    11f2:	8f 36       	cpi	r24, 0x6F	; 111
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <commands+0xd0>
    11f6:	71 c0       	rjmp	.+226    	; 0x12da <commands+0x1b2>
    11f8:	18 f4       	brcc	.+6      	; 0x1200 <commands+0xd8>
    11fa:	86 36       	cpi	r24, 0x66	; 102
    11fc:	01 f1       	breq	.+64     	; 0x123e <commands+0x116>
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <commands+0xe4>
    1200:	82 37       	cpi	r24, 0x72	; 114
    1202:	09 f4       	brne	.+2      	; 0x1206 <commands+0xde>
    1204:	6f c0       	rjmp	.+222    	; 0x12e4 <commands+0x1bc>
    1206:	83 37       	cpi	r24, 0x73	; 115
    1208:	09 f4       	brne	.+2      	; 0x120c <commands+0xe4>
    120a:	75 c0       	rjmp	.+234    	; 0x12f6 <commands+0x1ce>
		case '\0':
			prompt_flag = 0;
			break;
	
		default:				// send a ?
			prompt_flag = 1;
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	79 c0       	rjmp	.+242    	; 0x1302 <commands+0x1da>
	ptr = cmdline;

	switch (*ptr) {

		case 'c':
			prompt_flag = close(ptr);
    1210:	ce 01       	movw	r24, r28
    1212:	45 96       	adiw	r24, 0x15	; 21
    1214:	0e 94 f7 06 	call	0xdee	; 0xdee <close>
			break;
    1218:	74 c0       	rjmp	.+232    	; 0x1302 <commands+0x1da>

// IGNORE---------------------------------------------
		case 'e':
			ptr++;
			writestr_OLED(0, ptr, 1);
    121a:	41 e0       	ldi	r20, 0x01	; 1
    121c:	be 01       	movw	r22, r28
    121e:	6a 5e       	subi	r22, 0xEA	; 234
    1220:	7f 4f       	sbci	r23, 0xFF	; 255
    1222:	80 e0       	ldi	r24, 0x00	; 0
    1224:	0e 94 4f 06 	call	0xc9e	; 0xc9e <writestr_OLED>
			prompt_flag = 0;
    1228:	80 e0       	ldi	r24, 0x00	; 0
			break;
    122a:	6b c0       	rjmp	.+214    	; 0x1302 <commands+0x1da>

		case 'E':
			ptr++;
			writestr_OLED(0, ptr, 2);
    122c:	42 e0       	ldi	r20, 0x02	; 2
    122e:	be 01       	movw	r22, r28
    1230:	6a 5e       	subi	r22, 0xEA	; 234
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	0e 94 4f 06 	call	0xc9e	; 0xc9e <writestr_OLED>
			prompt_flag = 0;
    123a:	80 e0       	ldi	r24, 0x00	; 0
			break;
    123c:	62 c0       	rjmp	.+196    	; 0x1302 <commands+0x1da>

		case 'f':
			framdata[0] = 'A';
    123e:	81 e4       	ldi	r24, 0x41	; 65
    1240:	89 83       	std	Y+1, r24	; 0x01
			framdata[1] = 'B';
    1242:	82 e4       	ldi	r24, 0x42	; 66
    1244:	8a 83       	std	Y+2, r24	; 0x02
			framdata[2] = 'X';
    1246:	88 e5       	ldi	r24, 0x58	; 88
    1248:	8b 83       	std	Y+3, r24	; 0x03
			framdata[3] = 'D';
    124a:	84 e4       	ldi	r24, 0x44	; 68
    124c:	8c 83       	std	Y+4, r24	; 0x04
			framdata[4] = 'E';
    124e:	85 e4       	ldi	r24, 0x45	; 69
    1250:	8d 83       	std	Y+5, r24	; 0x05
			framdata[5] = 'F';
    1252:	86 e4       	ldi	r24, 0x46	; 70
    1254:	8e 83       	std	Y+6, r24	; 0x06
			framdata[6] = 'G';
    1256:	87 e4       	ldi	r24, 0x47	; 71
    1258:	8f 83       	std	Y+7, r24	; 0x07
			framdata[7] = 'H';
    125a:	88 e4       	ldi	r24, 0x48	; 72
    125c:	88 87       	std	Y+8, r24	; 0x08
			framdata[8] = 'I';
    125e:	89 e4       	ldi	r24, 0x49	; 73
    1260:	89 87       	std	Y+9, r24	; 0x09
			framdata[9] = '\0';
    1262:	1a 86       	std	Y+10, r1	; 0x0a

			memaddress = 0;
			write_FRAM(FRAMADDR, memaddress, framdata, 10);
    1264:	2a e0       	ldi	r18, 0x0A	; 10
    1266:	ae 01       	movw	r20, r28
    1268:	4f 5f       	subi	r20, 0xFF	; 255
    126a:	5f 4f       	sbci	r21, 0xFF	; 255
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	80 ea       	ldi	r24, 0xA0	; 160
    1272:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <write_FRAM>
    1276:	fe 01       	movw	r30, r28
    1278:	3b 96       	adiw	r30, 0x0b	; 11
    127a:	ce 01       	movw	r24, r28
    127c:	45 96       	adiw	r24, 0x15	; 21

			for (i = 0; i < 10; i++) {
				framtest[i] = 0;
    127e:	11 92       	st	Z+, r1
			framdata[9] = '\0';

			memaddress = 0;
			write_FRAM(FRAMADDR, memaddress, framdata, 10);

			for (i = 0; i < 10; i++) {
    1280:	8e 17       	cp	r24, r30
    1282:	9f 07       	cpc	r25, r31
    1284:	e1 f7       	brne	.-8      	; 0x127e <commands+0x156>
				framtest[i] = 0;
			}
			memaddress = 1;
			read_FRAM(FRAMADDR, memaddress, framtest, 9);
    1286:	8e 01       	movw	r16, r28
    1288:	05 5f       	subi	r16, 0xF5	; 245
    128a:	1f 4f       	sbci	r17, 0xFF	; 255
    128c:	29 e0       	ldi	r18, 0x09	; 9
    128e:	a8 01       	movw	r20, r16
    1290:	61 e0       	ldi	r22, 0x01	; 1
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	80 ea       	ldi	r24, 0xA0	; 160
    1296:	0e 94 80 03 	call	0x700	; 0x700 <read_FRAM>
			sprintf(strbuf, "%s read from fram\r\n", framtest);
    129a:	1f 93       	push	r17
    129c:	0f 93       	push	r16
    129e:	84 e5       	ldi	r24, 0x54	; 84
    12a0:	9a e5       	ldi	r25, 0x5A	; 90
    12a2:	9f 93       	push	r25
    12a4:	8f 93       	push	r24
    12a6:	06 57       	subi	r16, 0x76	; 118
    12a8:	1f 4f       	sbci	r17, 0xFF	; 255
    12aa:	1f 93       	push	r17
    12ac:	0f 93       	push	r16
    12ae:	0e 94 be 09 	call	0x137c	; 0x137c <sprintf>
			send_USART(0, (uint8_t*) strbuf, strlen(strbuf));
    12b2:	f8 01       	movw	r30, r16
    12b4:	01 90       	ld	r0, Z+
    12b6:	00 20       	and	r0, r0
    12b8:	e9 f7       	brne	.-6      	; 0x12b4 <commands+0x18c>
    12ba:	31 97       	sbiw	r30, 0x01	; 1
    12bc:	af 01       	movw	r20, r30
    12be:	40 1b       	sub	r20, r16
    12c0:	51 0b       	sbc	r21, r17
    12c2:	b8 01       	movw	r22, r16
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			prompt_flag = 0;
			break;
    12ca:	0f 90       	pop	r0
    12cc:	0f 90       	pop	r0
    12ce:	0f 90       	pop	r0
    12d0:	0f 90       	pop	r0
    12d2:	0f 90       	pop	r0
    12d4:	0f 90       	pop	r0
			}
			memaddress = 1;
			read_FRAM(FRAMADDR, memaddress, framtest, 9);
			sprintf(strbuf, "%s read from fram\r\n", framtest);
			send_USART(0, (uint8_t*) strbuf, strlen(strbuf));
			prompt_flag = 0;
    12d6:	80 e0       	ldi	r24, 0x00	; 0
			break;
    12d8:	14 c0       	rjmp	.+40     	; 0x1302 <commands+0x1da>
// STOP IGNORE----------------------------------------

		case 'o':				// open
			prompt_flag = open(ptr);
    12da:	ce 01       	movw	r24, r28
    12dc:	45 96       	adiw	r24, 0x15	; 21
    12de:	0e 94 22 07 	call	0xe44	; 0xe44 <open>
			break;
    12e2:	0f c0       	rjmp	.+30     	; 0x1302 <commands+0x1da>

		case 'r':				// report
			prompt_flag = report(ptr);
    12e4:	ce 01       	movw	r24, r28
    12e6:	45 96       	adiw	r24, 0x15	; 21
    12e8:	0e 94 4d 07 	call	0xe9a	; 0xe9a <report>
			break;
    12ec:	0a c0       	rjmp	.+20     	; 0x1302 <commands+0x1da>

		case 'R':
			reboot();
    12ee:	0e 94 f1 06 	call	0xde2	; 0xde2 <reboot>
			send_prompt(REBOOTNACK);
			return;			
		}
	}

	prompt_flag = 0;
    12f2:	80 e0       	ldi	r24, 0x00	; 0
			prompt_flag = report(ptr);
			break;

		case 'R':
			reboot();
			break;
    12f4:	06 c0       	rjmp	.+12     	; 0x1302 <commands+0x1da>

		case 's':				// set
			prompt_flag = set(ptr);
    12f6:	ce 01       	movw	r24, r28
    12f8:	45 96       	adiw	r24, 0x15	; 21
    12fa:	0e 94 89 08 	call	0x1112	; 0x1112 <set>
			break;
    12fe:	01 c0       	rjmp	.+2      	; 0x1302 <commands+0x1da>

		case '\0':
			prompt_flag = 0;
    1300:	80 e0       	ldi	r24, 0x00	; 0
			prompt_flag = 1;
			break;

	}

	send_prompt(prompt_flag);
    1302:	0e 94 04 08 	call	0x1008	; 0x1008 <send_prompt>
    1306:	06 c0       	rjmp	.+12     	; 0x1314 <commands+0x1ec>
		if (cmdline[i] == '\0') {
			break;
		}
	}

	if (rebootnack) {			// Rebooted, but not acknowledged
    1308:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    130c:	88 23       	and	r24, r24
    130e:	09 f4       	brne	.+2      	; 0x1312 <commands+0x1ea>
    1310:	5f cf       	rjmp	.-322    	; 0x11d0 <commands+0xa8>
    1312:	5a cf       	rjmp	.-332    	; 0x11c8 <commands+0xa0>

	}

	send_prompt(prompt_flag);

}
    1314:	c4 54       	subi	r28, 0x44	; 68
    1316:	df 4f       	sbci	r29, 0xFF	; 255
    1318:	cd bf       	out	0x3d, r28	; 61
    131a:	de bf       	out	0x3e, r29	; 62
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	1f 91       	pop	r17
    1322:	0f 91       	pop	r16
    1324:	08 95       	ret

00001326 <main>:
	recv0_buf, recv1_buf, recv3_buf;

int main(void)
{

	init_PORTS();
    1326:	0e 94 6f 00 	call	0xde	; 0xde <init_PORTS>
	init_LED();
    132a:	0e 94 a7 00 	call	0x14e	; 0x14e <init_LED>
	init_TWI();
    132e:	0e 94 ad 00 	call	0x15a	; 0x15a <init_TWI>
	init_PNEU();
    1332:	0e 94 68 01 	call	0x2d0	; 0x2d0 <init_PNEU>
	init_USART();
    1336:	0e 94 94 01 	call	0x328	; 0x328 <init_USART>
	init_OLED(0);
    133a:	80 e0       	ldi	r24, 0x00	; 0
    133c:	0e 94 8e 05 	call	0xb1c	; 0xb1c <init_OLED>
	init_EEPROM();
    1340:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <init_EEPROM>
	sei();
    1344:	78 94       	sei

	for (;;) {
		if (recv0_buf.done) {
    1346:	cb e0       	ldi	r28, 0x0B	; 11
    1348:	d9 e2       	ldi	r29, 0x29	; 41
    134a:	88 81       	ld	r24, Y
    134c:	88 23       	and	r24, r24
    134e:	e9 f3       	breq	.-6      	; 0x134a <main+0x24>
			recv0_buf.done = NO;
    1350:	18 82       	st	Y, r1
			commands();
    1352:	0e 94 94 08 	call	0x1128	; 0x1128 <commands>
    1356:	f9 cf       	rjmp	.-14     	; 0x134a <main+0x24>

00001358 <strcat>:
    1358:	fb 01       	movw	r30, r22
    135a:	dc 01       	movw	r26, r24
    135c:	0d 90       	ld	r0, X+
    135e:	00 20       	and	r0, r0
    1360:	e9 f7       	brne	.-6      	; 0x135c <strcat+0x4>
    1362:	11 97       	sbiw	r26, 0x01	; 1
    1364:	01 90       	ld	r0, Z+
    1366:	0d 92       	st	X+, r0
    1368:	00 20       	and	r0, r0
    136a:	e1 f7       	brne	.-8      	; 0x1364 <strcat+0xc>
    136c:	08 95       	ret

0000136e <strcpy>:
    136e:	fb 01       	movw	r30, r22
    1370:	dc 01       	movw	r26, r24
    1372:	01 90       	ld	r0, Z+
    1374:	0d 92       	st	X+, r0
    1376:	00 20       	and	r0, r0
    1378:	e1 f7       	brne	.-8      	; 0x1372 <strcpy+0x4>
    137a:	08 95       	ret

0000137c <sprintf>:
    137c:	ae e0       	ldi	r26, 0x0E	; 14
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e4 ec       	ldi	r30, 0xC4	; 196
    1382:	f9 e0       	ldi	r31, 0x09	; 9
    1384:	0c 94 ba 0c 	jmp	0x1974	; 0x1974 <__prologue_saves__+0x1c>
    1388:	0d 89       	ldd	r16, Y+21	; 0x15
    138a:	1e 89       	ldd	r17, Y+22	; 0x16
    138c:	86 e0       	ldi	r24, 0x06	; 6
    138e:	8c 83       	std	Y+4, r24	; 0x04
    1390:	09 83       	std	Y+1, r16	; 0x01
    1392:	1a 83       	std	Y+2, r17	; 0x02
    1394:	8f ef       	ldi	r24, 0xFF	; 255
    1396:	9f e7       	ldi	r25, 0x7F	; 127
    1398:	8d 83       	std	Y+5, r24	; 0x05
    139a:	9e 83       	std	Y+6, r25	; 0x06
    139c:	ae 01       	movw	r20, r28
    139e:	47 5e       	subi	r20, 0xE7	; 231
    13a0:	5f 4f       	sbci	r21, 0xFF	; 255
    13a2:	6f 89       	ldd	r22, Y+23	; 0x17
    13a4:	78 8d       	ldd	r23, Y+24	; 0x18
    13a6:	ce 01       	movw	r24, r28
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <vfprintf>
    13ae:	ef 81       	ldd	r30, Y+7	; 0x07
    13b0:	f8 85       	ldd	r31, Y+8	; 0x08
    13b2:	e0 0f       	add	r30, r16
    13b4:	f1 1f       	adc	r31, r17
    13b6:	10 82       	st	Z, r1
    13b8:	2e 96       	adiw	r28, 0x0e	; 14
    13ba:	e4 e0       	ldi	r30, 0x04	; 4
    13bc:	0c 94 d3 0c 	jmp	0x19a6	; 0x19a6 <__epilogue_restores__+0x1c>

000013c0 <vfprintf>:
    13c0:	ab e0       	ldi	r26, 0x0B	; 11
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	e6 ee       	ldi	r30, 0xE6	; 230
    13c6:	f9 e0       	ldi	r31, 0x09	; 9
    13c8:	0c 94 ac 0c 	jmp	0x1958	; 0x1958 <__prologue_saves__>
    13cc:	6c 01       	movw	r12, r24
    13ce:	7b 01       	movw	r14, r22
    13d0:	8a 01       	movw	r16, r20
    13d2:	fc 01       	movw	r30, r24
    13d4:	16 82       	std	Z+6, r1	; 0x06
    13d6:	17 82       	std	Z+7, r1	; 0x07
    13d8:	83 81       	ldd	r24, Z+3	; 0x03
    13da:	81 ff       	sbrs	r24, 1
    13dc:	cc c1       	rjmp	.+920    	; 0x1776 <vfprintf+0x3b6>
    13de:	ce 01       	movw	r24, r28
    13e0:	01 96       	adiw	r24, 0x01	; 1
    13e2:	3c 01       	movw	r6, r24
    13e4:	f6 01       	movw	r30, r12
    13e6:	93 81       	ldd	r25, Z+3	; 0x03
    13e8:	f7 01       	movw	r30, r14
    13ea:	93 fd       	sbrc	r25, 3
    13ec:	85 91       	lpm	r24, Z+
    13ee:	93 ff       	sbrs	r25, 3
    13f0:	81 91       	ld	r24, Z+
    13f2:	7f 01       	movw	r14, r30
    13f4:	88 23       	and	r24, r24
    13f6:	09 f4       	brne	.+2      	; 0x13fa <vfprintf+0x3a>
    13f8:	ba c1       	rjmp	.+884    	; 0x176e <vfprintf+0x3ae>
    13fa:	85 32       	cpi	r24, 0x25	; 37
    13fc:	39 f4       	brne	.+14     	; 0x140c <vfprintf+0x4c>
    13fe:	93 fd       	sbrc	r25, 3
    1400:	85 91       	lpm	r24, Z+
    1402:	93 ff       	sbrs	r25, 3
    1404:	81 91       	ld	r24, Z+
    1406:	7f 01       	movw	r14, r30
    1408:	85 32       	cpi	r24, 0x25	; 37
    140a:	29 f4       	brne	.+10     	; 0x1416 <vfprintf+0x56>
    140c:	b6 01       	movw	r22, r12
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1414:	e7 cf       	rjmp	.-50     	; 0x13e4 <vfprintf+0x24>
    1416:	91 2c       	mov	r9, r1
    1418:	21 2c       	mov	r2, r1
    141a:	31 2c       	mov	r3, r1
    141c:	ff e1       	ldi	r31, 0x1F	; 31
    141e:	f3 15       	cp	r31, r3
    1420:	d8 f0       	brcs	.+54     	; 0x1458 <vfprintf+0x98>
    1422:	8b 32       	cpi	r24, 0x2B	; 43
    1424:	79 f0       	breq	.+30     	; 0x1444 <vfprintf+0x84>
    1426:	38 f4       	brcc	.+14     	; 0x1436 <vfprintf+0x76>
    1428:	80 32       	cpi	r24, 0x20	; 32
    142a:	79 f0       	breq	.+30     	; 0x144a <vfprintf+0x8a>
    142c:	83 32       	cpi	r24, 0x23	; 35
    142e:	a1 f4       	brne	.+40     	; 0x1458 <vfprintf+0x98>
    1430:	23 2d       	mov	r18, r3
    1432:	20 61       	ori	r18, 0x10	; 16
    1434:	1d c0       	rjmp	.+58     	; 0x1470 <vfprintf+0xb0>
    1436:	8d 32       	cpi	r24, 0x2D	; 45
    1438:	61 f0       	breq	.+24     	; 0x1452 <vfprintf+0x92>
    143a:	80 33       	cpi	r24, 0x30	; 48
    143c:	69 f4       	brne	.+26     	; 0x1458 <vfprintf+0x98>
    143e:	23 2d       	mov	r18, r3
    1440:	21 60       	ori	r18, 0x01	; 1
    1442:	16 c0       	rjmp	.+44     	; 0x1470 <vfprintf+0xb0>
    1444:	83 2d       	mov	r24, r3
    1446:	82 60       	ori	r24, 0x02	; 2
    1448:	38 2e       	mov	r3, r24
    144a:	e3 2d       	mov	r30, r3
    144c:	e4 60       	ori	r30, 0x04	; 4
    144e:	3e 2e       	mov	r3, r30
    1450:	2a c0       	rjmp	.+84     	; 0x14a6 <vfprintf+0xe6>
    1452:	f3 2d       	mov	r31, r3
    1454:	f8 60       	ori	r31, 0x08	; 8
    1456:	1d c0       	rjmp	.+58     	; 0x1492 <vfprintf+0xd2>
    1458:	37 fc       	sbrc	r3, 7
    145a:	2d c0       	rjmp	.+90     	; 0x14b6 <vfprintf+0xf6>
    145c:	20 ed       	ldi	r18, 0xD0	; 208
    145e:	28 0f       	add	r18, r24
    1460:	2a 30       	cpi	r18, 0x0A	; 10
    1462:	40 f0       	brcs	.+16     	; 0x1474 <vfprintf+0xb4>
    1464:	8e 32       	cpi	r24, 0x2E	; 46
    1466:	b9 f4       	brne	.+46     	; 0x1496 <vfprintf+0xd6>
    1468:	36 fc       	sbrc	r3, 6
    146a:	81 c1       	rjmp	.+770    	; 0x176e <vfprintf+0x3ae>
    146c:	23 2d       	mov	r18, r3
    146e:	20 64       	ori	r18, 0x40	; 64
    1470:	32 2e       	mov	r3, r18
    1472:	19 c0       	rjmp	.+50     	; 0x14a6 <vfprintf+0xe6>
    1474:	36 fe       	sbrs	r3, 6
    1476:	06 c0       	rjmp	.+12     	; 0x1484 <vfprintf+0xc4>
    1478:	8a e0       	ldi	r24, 0x0A	; 10
    147a:	98 9e       	mul	r9, r24
    147c:	20 0d       	add	r18, r0
    147e:	11 24       	eor	r1, r1
    1480:	92 2e       	mov	r9, r18
    1482:	11 c0       	rjmp	.+34     	; 0x14a6 <vfprintf+0xe6>
    1484:	ea e0       	ldi	r30, 0x0A	; 10
    1486:	2e 9e       	mul	r2, r30
    1488:	20 0d       	add	r18, r0
    148a:	11 24       	eor	r1, r1
    148c:	22 2e       	mov	r2, r18
    148e:	f3 2d       	mov	r31, r3
    1490:	f0 62       	ori	r31, 0x20	; 32
    1492:	3f 2e       	mov	r3, r31
    1494:	08 c0       	rjmp	.+16     	; 0x14a6 <vfprintf+0xe6>
    1496:	8c 36       	cpi	r24, 0x6C	; 108
    1498:	21 f4       	brne	.+8      	; 0x14a2 <vfprintf+0xe2>
    149a:	83 2d       	mov	r24, r3
    149c:	80 68       	ori	r24, 0x80	; 128
    149e:	38 2e       	mov	r3, r24
    14a0:	02 c0       	rjmp	.+4      	; 0x14a6 <vfprintf+0xe6>
    14a2:	88 36       	cpi	r24, 0x68	; 104
    14a4:	41 f4       	brne	.+16     	; 0x14b6 <vfprintf+0xf6>
    14a6:	f7 01       	movw	r30, r14
    14a8:	93 fd       	sbrc	r25, 3
    14aa:	85 91       	lpm	r24, Z+
    14ac:	93 ff       	sbrs	r25, 3
    14ae:	81 91       	ld	r24, Z+
    14b0:	7f 01       	movw	r14, r30
    14b2:	81 11       	cpse	r24, r1
    14b4:	b3 cf       	rjmp	.-154    	; 0x141c <vfprintf+0x5c>
    14b6:	98 2f       	mov	r25, r24
    14b8:	9f 7d       	andi	r25, 0xDF	; 223
    14ba:	95 54       	subi	r25, 0x45	; 69
    14bc:	93 30       	cpi	r25, 0x03	; 3
    14be:	28 f4       	brcc	.+10     	; 0x14ca <vfprintf+0x10a>
    14c0:	0c 5f       	subi	r16, 0xFC	; 252
    14c2:	1f 4f       	sbci	r17, 0xFF	; 255
    14c4:	9f e3       	ldi	r25, 0x3F	; 63
    14c6:	99 83       	std	Y+1, r25	; 0x01
    14c8:	0d c0       	rjmp	.+26     	; 0x14e4 <vfprintf+0x124>
    14ca:	83 36       	cpi	r24, 0x63	; 99
    14cc:	31 f0       	breq	.+12     	; 0x14da <vfprintf+0x11a>
    14ce:	83 37       	cpi	r24, 0x73	; 115
    14d0:	71 f0       	breq	.+28     	; 0x14ee <vfprintf+0x12e>
    14d2:	83 35       	cpi	r24, 0x53	; 83
    14d4:	09 f0       	breq	.+2      	; 0x14d8 <vfprintf+0x118>
    14d6:	59 c0       	rjmp	.+178    	; 0x158a <vfprintf+0x1ca>
    14d8:	21 c0       	rjmp	.+66     	; 0x151c <vfprintf+0x15c>
    14da:	f8 01       	movw	r30, r16
    14dc:	80 81       	ld	r24, Z
    14de:	89 83       	std	Y+1, r24	; 0x01
    14e0:	0e 5f       	subi	r16, 0xFE	; 254
    14e2:	1f 4f       	sbci	r17, 0xFF	; 255
    14e4:	88 24       	eor	r8, r8
    14e6:	83 94       	inc	r8
    14e8:	91 2c       	mov	r9, r1
    14ea:	53 01       	movw	r10, r6
    14ec:	13 c0       	rjmp	.+38     	; 0x1514 <vfprintf+0x154>
    14ee:	28 01       	movw	r4, r16
    14f0:	f2 e0       	ldi	r31, 0x02	; 2
    14f2:	4f 0e       	add	r4, r31
    14f4:	51 1c       	adc	r5, r1
    14f6:	f8 01       	movw	r30, r16
    14f8:	a0 80       	ld	r10, Z
    14fa:	b1 80       	ldd	r11, Z+1	; 0x01
    14fc:	36 fe       	sbrs	r3, 6
    14fe:	03 c0       	rjmp	.+6      	; 0x1506 <vfprintf+0x146>
    1500:	69 2d       	mov	r22, r9
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	02 c0       	rjmp	.+4      	; 0x150a <vfprintf+0x14a>
    1506:	6f ef       	ldi	r22, 0xFF	; 255
    1508:	7f ef       	ldi	r23, 0xFF	; 255
    150a:	c5 01       	movw	r24, r10
    150c:	0e 94 cc 0b 	call	0x1798	; 0x1798 <strnlen>
    1510:	4c 01       	movw	r8, r24
    1512:	82 01       	movw	r16, r4
    1514:	f3 2d       	mov	r31, r3
    1516:	ff 77       	andi	r31, 0x7F	; 127
    1518:	3f 2e       	mov	r3, r31
    151a:	16 c0       	rjmp	.+44     	; 0x1548 <vfprintf+0x188>
    151c:	28 01       	movw	r4, r16
    151e:	22 e0       	ldi	r18, 0x02	; 2
    1520:	42 0e       	add	r4, r18
    1522:	51 1c       	adc	r5, r1
    1524:	f8 01       	movw	r30, r16
    1526:	a0 80       	ld	r10, Z
    1528:	b1 80       	ldd	r11, Z+1	; 0x01
    152a:	36 fe       	sbrs	r3, 6
    152c:	03 c0       	rjmp	.+6      	; 0x1534 <vfprintf+0x174>
    152e:	69 2d       	mov	r22, r9
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	02 c0       	rjmp	.+4      	; 0x1538 <vfprintf+0x178>
    1534:	6f ef       	ldi	r22, 0xFF	; 255
    1536:	7f ef       	ldi	r23, 0xFF	; 255
    1538:	c5 01       	movw	r24, r10
    153a:	0e 94 c1 0b 	call	0x1782	; 0x1782 <strnlen_P>
    153e:	4c 01       	movw	r8, r24
    1540:	f3 2d       	mov	r31, r3
    1542:	f0 68       	ori	r31, 0x80	; 128
    1544:	3f 2e       	mov	r3, r31
    1546:	82 01       	movw	r16, r4
    1548:	33 fc       	sbrc	r3, 3
    154a:	1b c0       	rjmp	.+54     	; 0x1582 <vfprintf+0x1c2>
    154c:	82 2d       	mov	r24, r2
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	88 16       	cp	r8, r24
    1552:	99 06       	cpc	r9, r25
    1554:	b0 f4       	brcc	.+44     	; 0x1582 <vfprintf+0x1c2>
    1556:	b6 01       	movw	r22, r12
    1558:	80 e2       	ldi	r24, 0x20	; 32
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1560:	2a 94       	dec	r2
    1562:	f4 cf       	rjmp	.-24     	; 0x154c <vfprintf+0x18c>
    1564:	f5 01       	movw	r30, r10
    1566:	37 fc       	sbrc	r3, 7
    1568:	85 91       	lpm	r24, Z+
    156a:	37 fe       	sbrs	r3, 7
    156c:	81 91       	ld	r24, Z+
    156e:	5f 01       	movw	r10, r30
    1570:	b6 01       	movw	r22, r12
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1578:	21 10       	cpse	r2, r1
    157a:	2a 94       	dec	r2
    157c:	21 e0       	ldi	r18, 0x01	; 1
    157e:	82 1a       	sub	r8, r18
    1580:	91 08       	sbc	r9, r1
    1582:	81 14       	cp	r8, r1
    1584:	91 04       	cpc	r9, r1
    1586:	71 f7       	brne	.-36     	; 0x1564 <vfprintf+0x1a4>
    1588:	e8 c0       	rjmp	.+464    	; 0x175a <vfprintf+0x39a>
    158a:	84 36       	cpi	r24, 0x64	; 100
    158c:	11 f0       	breq	.+4      	; 0x1592 <vfprintf+0x1d2>
    158e:	89 36       	cpi	r24, 0x69	; 105
    1590:	41 f5       	brne	.+80     	; 0x15e2 <vfprintf+0x222>
    1592:	f8 01       	movw	r30, r16
    1594:	37 fe       	sbrs	r3, 7
    1596:	07 c0       	rjmp	.+14     	; 0x15a6 <vfprintf+0x1e6>
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	0c 5f       	subi	r16, 0xFC	; 252
    15a2:	1f 4f       	sbci	r17, 0xFF	; 255
    15a4:	08 c0       	rjmp	.+16     	; 0x15b6 <vfprintf+0x1f6>
    15a6:	60 81       	ld	r22, Z
    15a8:	71 81       	ldd	r23, Z+1	; 0x01
    15aa:	07 2e       	mov	r0, r23
    15ac:	00 0c       	add	r0, r0
    15ae:	88 0b       	sbc	r24, r24
    15b0:	99 0b       	sbc	r25, r25
    15b2:	0e 5f       	subi	r16, 0xFE	; 254
    15b4:	1f 4f       	sbci	r17, 0xFF	; 255
    15b6:	f3 2d       	mov	r31, r3
    15b8:	ff 76       	andi	r31, 0x6F	; 111
    15ba:	3f 2e       	mov	r3, r31
    15bc:	97 ff       	sbrs	r25, 7
    15be:	09 c0       	rjmp	.+18     	; 0x15d2 <vfprintf+0x212>
    15c0:	90 95       	com	r25
    15c2:	80 95       	com	r24
    15c4:	70 95       	com	r23
    15c6:	61 95       	neg	r22
    15c8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ca:	8f 4f       	sbci	r24, 0xFF	; 255
    15cc:	9f 4f       	sbci	r25, 0xFF	; 255
    15ce:	f0 68       	ori	r31, 0x80	; 128
    15d0:	3f 2e       	mov	r3, r31
    15d2:	2a e0       	ldi	r18, 0x0A	; 10
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	a3 01       	movw	r20, r6
    15d8:	0e 94 13 0c 	call	0x1826	; 0x1826 <__ultoa_invert>
    15dc:	88 2e       	mov	r8, r24
    15de:	86 18       	sub	r8, r6
    15e0:	45 c0       	rjmp	.+138    	; 0x166c <vfprintf+0x2ac>
    15e2:	85 37       	cpi	r24, 0x75	; 117
    15e4:	31 f4       	brne	.+12     	; 0x15f2 <vfprintf+0x232>
    15e6:	23 2d       	mov	r18, r3
    15e8:	2f 7e       	andi	r18, 0xEF	; 239
    15ea:	b2 2e       	mov	r11, r18
    15ec:	2a e0       	ldi	r18, 0x0A	; 10
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	25 c0       	rjmp	.+74     	; 0x163c <vfprintf+0x27c>
    15f2:	93 2d       	mov	r25, r3
    15f4:	99 7f       	andi	r25, 0xF9	; 249
    15f6:	b9 2e       	mov	r11, r25
    15f8:	8f 36       	cpi	r24, 0x6F	; 111
    15fa:	c1 f0       	breq	.+48     	; 0x162c <vfprintf+0x26c>
    15fc:	18 f4       	brcc	.+6      	; 0x1604 <vfprintf+0x244>
    15fe:	88 35       	cpi	r24, 0x58	; 88
    1600:	79 f0       	breq	.+30     	; 0x1620 <vfprintf+0x260>
    1602:	b5 c0       	rjmp	.+362    	; 0x176e <vfprintf+0x3ae>
    1604:	80 37       	cpi	r24, 0x70	; 112
    1606:	19 f0       	breq	.+6      	; 0x160e <vfprintf+0x24e>
    1608:	88 37       	cpi	r24, 0x78	; 120
    160a:	21 f0       	breq	.+8      	; 0x1614 <vfprintf+0x254>
    160c:	b0 c0       	rjmp	.+352    	; 0x176e <vfprintf+0x3ae>
    160e:	e9 2f       	mov	r30, r25
    1610:	e0 61       	ori	r30, 0x10	; 16
    1612:	be 2e       	mov	r11, r30
    1614:	b4 fe       	sbrs	r11, 4
    1616:	0d c0       	rjmp	.+26     	; 0x1632 <vfprintf+0x272>
    1618:	fb 2d       	mov	r31, r11
    161a:	f4 60       	ori	r31, 0x04	; 4
    161c:	bf 2e       	mov	r11, r31
    161e:	09 c0       	rjmp	.+18     	; 0x1632 <vfprintf+0x272>
    1620:	34 fe       	sbrs	r3, 4
    1622:	0a c0       	rjmp	.+20     	; 0x1638 <vfprintf+0x278>
    1624:	29 2f       	mov	r18, r25
    1626:	26 60       	ori	r18, 0x06	; 6
    1628:	b2 2e       	mov	r11, r18
    162a:	06 c0       	rjmp	.+12     	; 0x1638 <vfprintf+0x278>
    162c:	28 e0       	ldi	r18, 0x08	; 8
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	05 c0       	rjmp	.+10     	; 0x163c <vfprintf+0x27c>
    1632:	20 e1       	ldi	r18, 0x10	; 16
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	02 c0       	rjmp	.+4      	; 0x163c <vfprintf+0x27c>
    1638:	20 e1       	ldi	r18, 0x10	; 16
    163a:	32 e0       	ldi	r19, 0x02	; 2
    163c:	f8 01       	movw	r30, r16
    163e:	b7 fe       	sbrs	r11, 7
    1640:	07 c0       	rjmp	.+14     	; 0x1650 <vfprintf+0x290>
    1642:	60 81       	ld	r22, Z
    1644:	71 81       	ldd	r23, Z+1	; 0x01
    1646:	82 81       	ldd	r24, Z+2	; 0x02
    1648:	93 81       	ldd	r25, Z+3	; 0x03
    164a:	0c 5f       	subi	r16, 0xFC	; 252
    164c:	1f 4f       	sbci	r17, 0xFF	; 255
    164e:	06 c0       	rjmp	.+12     	; 0x165c <vfprintf+0x29c>
    1650:	60 81       	ld	r22, Z
    1652:	71 81       	ldd	r23, Z+1	; 0x01
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	0e 5f       	subi	r16, 0xFE	; 254
    165a:	1f 4f       	sbci	r17, 0xFF	; 255
    165c:	a3 01       	movw	r20, r6
    165e:	0e 94 13 0c 	call	0x1826	; 0x1826 <__ultoa_invert>
    1662:	88 2e       	mov	r8, r24
    1664:	86 18       	sub	r8, r6
    1666:	fb 2d       	mov	r31, r11
    1668:	ff 77       	andi	r31, 0x7F	; 127
    166a:	3f 2e       	mov	r3, r31
    166c:	36 fe       	sbrs	r3, 6
    166e:	0d c0       	rjmp	.+26     	; 0x168a <vfprintf+0x2ca>
    1670:	23 2d       	mov	r18, r3
    1672:	2e 7f       	andi	r18, 0xFE	; 254
    1674:	a2 2e       	mov	r10, r18
    1676:	89 14       	cp	r8, r9
    1678:	58 f4       	brcc	.+22     	; 0x1690 <vfprintf+0x2d0>
    167a:	34 fe       	sbrs	r3, 4
    167c:	0b c0       	rjmp	.+22     	; 0x1694 <vfprintf+0x2d4>
    167e:	32 fc       	sbrc	r3, 2
    1680:	09 c0       	rjmp	.+18     	; 0x1694 <vfprintf+0x2d4>
    1682:	83 2d       	mov	r24, r3
    1684:	8e 7e       	andi	r24, 0xEE	; 238
    1686:	a8 2e       	mov	r10, r24
    1688:	05 c0       	rjmp	.+10     	; 0x1694 <vfprintf+0x2d4>
    168a:	b8 2c       	mov	r11, r8
    168c:	a3 2c       	mov	r10, r3
    168e:	03 c0       	rjmp	.+6      	; 0x1696 <vfprintf+0x2d6>
    1690:	b8 2c       	mov	r11, r8
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <vfprintf+0x2d6>
    1694:	b9 2c       	mov	r11, r9
    1696:	a4 fe       	sbrs	r10, 4
    1698:	0f c0       	rjmp	.+30     	; 0x16b8 <vfprintf+0x2f8>
    169a:	fe 01       	movw	r30, r28
    169c:	e8 0d       	add	r30, r8
    169e:	f1 1d       	adc	r31, r1
    16a0:	80 81       	ld	r24, Z
    16a2:	80 33       	cpi	r24, 0x30	; 48
    16a4:	21 f4       	brne	.+8      	; 0x16ae <vfprintf+0x2ee>
    16a6:	9a 2d       	mov	r25, r10
    16a8:	99 7e       	andi	r25, 0xE9	; 233
    16aa:	a9 2e       	mov	r10, r25
    16ac:	09 c0       	rjmp	.+18     	; 0x16c0 <vfprintf+0x300>
    16ae:	a2 fe       	sbrs	r10, 2
    16b0:	06 c0       	rjmp	.+12     	; 0x16be <vfprintf+0x2fe>
    16b2:	b3 94       	inc	r11
    16b4:	b3 94       	inc	r11
    16b6:	04 c0       	rjmp	.+8      	; 0x16c0 <vfprintf+0x300>
    16b8:	8a 2d       	mov	r24, r10
    16ba:	86 78       	andi	r24, 0x86	; 134
    16bc:	09 f0       	breq	.+2      	; 0x16c0 <vfprintf+0x300>
    16be:	b3 94       	inc	r11
    16c0:	a3 fc       	sbrc	r10, 3
    16c2:	11 c0       	rjmp	.+34     	; 0x16e6 <vfprintf+0x326>
    16c4:	a0 fe       	sbrs	r10, 0
    16c6:	06 c0       	rjmp	.+12     	; 0x16d4 <vfprintf+0x314>
    16c8:	b2 14       	cp	r11, r2
    16ca:	88 f4       	brcc	.+34     	; 0x16ee <vfprintf+0x32e>
    16cc:	28 0c       	add	r2, r8
    16ce:	92 2c       	mov	r9, r2
    16d0:	9b 18       	sub	r9, r11
    16d2:	0e c0       	rjmp	.+28     	; 0x16f0 <vfprintf+0x330>
    16d4:	b2 14       	cp	r11, r2
    16d6:	60 f4       	brcc	.+24     	; 0x16f0 <vfprintf+0x330>
    16d8:	b6 01       	movw	r22, r12
    16da:	80 e2       	ldi	r24, 0x20	; 32
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    16e2:	b3 94       	inc	r11
    16e4:	f7 cf       	rjmp	.-18     	; 0x16d4 <vfprintf+0x314>
    16e6:	b2 14       	cp	r11, r2
    16e8:	18 f4       	brcc	.+6      	; 0x16f0 <vfprintf+0x330>
    16ea:	2b 18       	sub	r2, r11
    16ec:	02 c0       	rjmp	.+4      	; 0x16f2 <vfprintf+0x332>
    16ee:	98 2c       	mov	r9, r8
    16f0:	21 2c       	mov	r2, r1
    16f2:	a4 fe       	sbrs	r10, 4
    16f4:	10 c0       	rjmp	.+32     	; 0x1716 <vfprintf+0x356>
    16f6:	b6 01       	movw	r22, r12
    16f8:	80 e3       	ldi	r24, 0x30	; 48
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1700:	a2 fe       	sbrs	r10, 2
    1702:	17 c0       	rjmp	.+46     	; 0x1732 <vfprintf+0x372>
    1704:	a1 fc       	sbrc	r10, 1
    1706:	03 c0       	rjmp	.+6      	; 0x170e <vfprintf+0x34e>
    1708:	88 e7       	ldi	r24, 0x78	; 120
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	02 c0       	rjmp	.+4      	; 0x1712 <vfprintf+0x352>
    170e:	88 e5       	ldi	r24, 0x58	; 88
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	b6 01       	movw	r22, r12
    1714:	0c c0       	rjmp	.+24     	; 0x172e <vfprintf+0x36e>
    1716:	8a 2d       	mov	r24, r10
    1718:	86 78       	andi	r24, 0x86	; 134
    171a:	59 f0       	breq	.+22     	; 0x1732 <vfprintf+0x372>
    171c:	a1 fe       	sbrs	r10, 1
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <vfprintf+0x364>
    1720:	8b e2       	ldi	r24, 0x2B	; 43
    1722:	01 c0       	rjmp	.+2      	; 0x1726 <vfprintf+0x366>
    1724:	80 e2       	ldi	r24, 0x20	; 32
    1726:	a7 fc       	sbrc	r10, 7
    1728:	8d e2       	ldi	r24, 0x2D	; 45
    172a:	b6 01       	movw	r22, r12
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1732:	89 14       	cp	r8, r9
    1734:	38 f4       	brcc	.+14     	; 0x1744 <vfprintf+0x384>
    1736:	b6 01       	movw	r22, r12
    1738:	80 e3       	ldi	r24, 0x30	; 48
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1740:	9a 94       	dec	r9
    1742:	f7 cf       	rjmp	.-18     	; 0x1732 <vfprintf+0x372>
    1744:	8a 94       	dec	r8
    1746:	f3 01       	movw	r30, r6
    1748:	e8 0d       	add	r30, r8
    174a:	f1 1d       	adc	r31, r1
    174c:	80 81       	ld	r24, Z
    174e:	b6 01       	movw	r22, r12
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    1756:	81 10       	cpse	r8, r1
    1758:	f5 cf       	rjmp	.-22     	; 0x1744 <vfprintf+0x384>
    175a:	22 20       	and	r2, r2
    175c:	09 f4       	brne	.+2      	; 0x1760 <vfprintf+0x3a0>
    175e:	42 ce       	rjmp	.-892    	; 0x13e4 <vfprintf+0x24>
    1760:	b6 01       	movw	r22, r12
    1762:	80 e2       	ldi	r24, 0x20	; 32
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <fputc>
    176a:	2a 94       	dec	r2
    176c:	f6 cf       	rjmp	.-20     	; 0x175a <vfprintf+0x39a>
    176e:	f6 01       	movw	r30, r12
    1770:	86 81       	ldd	r24, Z+6	; 0x06
    1772:	97 81       	ldd	r25, Z+7	; 0x07
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0x3ba>
    1776:	8f ef       	ldi	r24, 0xFF	; 255
    1778:	9f ef       	ldi	r25, 0xFF	; 255
    177a:	2b 96       	adiw	r28, 0x0b	; 11
    177c:	e2 e1       	ldi	r30, 0x12	; 18
    177e:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__epilogue_restores__>

00001782 <strnlen_P>:
    1782:	fc 01       	movw	r30, r24
    1784:	05 90       	lpm	r0, Z+
    1786:	61 50       	subi	r22, 0x01	; 1
    1788:	70 40       	sbci	r23, 0x00	; 0
    178a:	01 10       	cpse	r0, r1
    178c:	d8 f7       	brcc	.-10     	; 0x1784 <strnlen_P+0x2>
    178e:	80 95       	com	r24
    1790:	90 95       	com	r25
    1792:	8e 0f       	add	r24, r30
    1794:	9f 1f       	adc	r25, r31
    1796:	08 95       	ret

00001798 <strnlen>:
    1798:	fc 01       	movw	r30, r24
    179a:	61 50       	subi	r22, 0x01	; 1
    179c:	70 40       	sbci	r23, 0x00	; 0
    179e:	01 90       	ld	r0, Z+
    17a0:	01 10       	cpse	r0, r1
    17a2:	d8 f7       	brcc	.-10     	; 0x179a <strnlen+0x2>
    17a4:	80 95       	com	r24
    17a6:	90 95       	com	r25
    17a8:	8e 0f       	add	r24, r30
    17aa:	9f 1f       	adc	r25, r31
    17ac:	08 95       	ret

000017ae <fputc>:
    17ae:	0f 93       	push	r16
    17b0:	1f 93       	push	r17
    17b2:	cf 93       	push	r28
    17b4:	df 93       	push	r29
    17b6:	fb 01       	movw	r30, r22
    17b8:	23 81       	ldd	r18, Z+3	; 0x03
    17ba:	21 fd       	sbrc	r18, 1
    17bc:	03 c0       	rjmp	.+6      	; 0x17c4 <fputc+0x16>
    17be:	8f ef       	ldi	r24, 0xFF	; 255
    17c0:	9f ef       	ldi	r25, 0xFF	; 255
    17c2:	2c c0       	rjmp	.+88     	; 0x181c <__DATA_REGION_LENGTH__+0x1c>
    17c4:	22 ff       	sbrs	r18, 2
    17c6:	16 c0       	rjmp	.+44     	; 0x17f4 <fputc+0x46>
    17c8:	46 81       	ldd	r20, Z+6	; 0x06
    17ca:	57 81       	ldd	r21, Z+7	; 0x07
    17cc:	24 81       	ldd	r18, Z+4	; 0x04
    17ce:	35 81       	ldd	r19, Z+5	; 0x05
    17d0:	42 17       	cp	r20, r18
    17d2:	53 07       	cpc	r21, r19
    17d4:	44 f4       	brge	.+16     	; 0x17e6 <fputc+0x38>
    17d6:	a0 81       	ld	r26, Z
    17d8:	b1 81       	ldd	r27, Z+1	; 0x01
    17da:	9d 01       	movw	r18, r26
    17dc:	2f 5f       	subi	r18, 0xFF	; 255
    17de:	3f 4f       	sbci	r19, 0xFF	; 255
    17e0:	20 83       	st	Z, r18
    17e2:	31 83       	std	Z+1, r19	; 0x01
    17e4:	8c 93       	st	X, r24
    17e6:	26 81       	ldd	r18, Z+6	; 0x06
    17e8:	37 81       	ldd	r19, Z+7	; 0x07
    17ea:	2f 5f       	subi	r18, 0xFF	; 255
    17ec:	3f 4f       	sbci	r19, 0xFF	; 255
    17ee:	26 83       	std	Z+6, r18	; 0x06
    17f0:	37 83       	std	Z+7, r19	; 0x07
    17f2:	14 c0       	rjmp	.+40     	; 0x181c <__DATA_REGION_LENGTH__+0x1c>
    17f4:	8b 01       	movw	r16, r22
    17f6:	ec 01       	movw	r28, r24
    17f8:	fb 01       	movw	r30, r22
    17fa:	00 84       	ldd	r0, Z+8	; 0x08
    17fc:	f1 85       	ldd	r31, Z+9	; 0x09
    17fe:	e0 2d       	mov	r30, r0
    1800:	09 95       	icall
    1802:	89 2b       	or	r24, r25
    1804:	e1 f6       	brne	.-72     	; 0x17be <fputc+0x10>
    1806:	d8 01       	movw	r26, r16
    1808:	16 96       	adiw	r26, 0x06	; 6
    180a:	8d 91       	ld	r24, X+
    180c:	9c 91       	ld	r25, X
    180e:	17 97       	sbiw	r26, 0x07	; 7
    1810:	01 96       	adiw	r24, 0x01	; 1
    1812:	16 96       	adiw	r26, 0x06	; 6
    1814:	8d 93       	st	X+, r24
    1816:	9c 93       	st	X, r25
    1818:	17 97       	sbiw	r26, 0x07	; 7
    181a:	ce 01       	movw	r24, r28
    181c:	df 91       	pop	r29
    181e:	cf 91       	pop	r28
    1820:	1f 91       	pop	r17
    1822:	0f 91       	pop	r16
    1824:	08 95       	ret

00001826 <__ultoa_invert>:
    1826:	fa 01       	movw	r30, r20
    1828:	aa 27       	eor	r26, r26
    182a:	28 30       	cpi	r18, 0x08	; 8
    182c:	51 f1       	breq	.+84     	; 0x1882 <__ultoa_invert+0x5c>
    182e:	20 31       	cpi	r18, 0x10	; 16
    1830:	81 f1       	breq	.+96     	; 0x1892 <__ultoa_invert+0x6c>
    1832:	e8 94       	clt
    1834:	6f 93       	push	r22
    1836:	6e 7f       	andi	r22, 0xFE	; 254
    1838:	6e 5f       	subi	r22, 0xFE	; 254
    183a:	7f 4f       	sbci	r23, 0xFF	; 255
    183c:	8f 4f       	sbci	r24, 0xFF	; 255
    183e:	9f 4f       	sbci	r25, 0xFF	; 255
    1840:	af 4f       	sbci	r26, 0xFF	; 255
    1842:	b1 e0       	ldi	r27, 0x01	; 1
    1844:	3e d0       	rcall	.+124    	; 0x18c2 <__ultoa_invert+0x9c>
    1846:	b4 e0       	ldi	r27, 0x04	; 4
    1848:	3c d0       	rcall	.+120    	; 0x18c2 <__ultoa_invert+0x9c>
    184a:	67 0f       	add	r22, r23
    184c:	78 1f       	adc	r23, r24
    184e:	89 1f       	adc	r24, r25
    1850:	9a 1f       	adc	r25, r26
    1852:	a1 1d       	adc	r26, r1
    1854:	68 0f       	add	r22, r24
    1856:	79 1f       	adc	r23, r25
    1858:	8a 1f       	adc	r24, r26
    185a:	91 1d       	adc	r25, r1
    185c:	a1 1d       	adc	r26, r1
    185e:	6a 0f       	add	r22, r26
    1860:	71 1d       	adc	r23, r1
    1862:	81 1d       	adc	r24, r1
    1864:	91 1d       	adc	r25, r1
    1866:	a1 1d       	adc	r26, r1
    1868:	20 d0       	rcall	.+64     	; 0x18aa <__ultoa_invert+0x84>
    186a:	09 f4       	brne	.+2      	; 0x186e <__ultoa_invert+0x48>
    186c:	68 94       	set
    186e:	3f 91       	pop	r19
    1870:	2a e0       	ldi	r18, 0x0A	; 10
    1872:	26 9f       	mul	r18, r22
    1874:	11 24       	eor	r1, r1
    1876:	30 19       	sub	r19, r0
    1878:	30 5d       	subi	r19, 0xD0	; 208
    187a:	31 93       	st	Z+, r19
    187c:	de f6       	brtc	.-74     	; 0x1834 <__ultoa_invert+0xe>
    187e:	cf 01       	movw	r24, r30
    1880:	08 95       	ret
    1882:	46 2f       	mov	r20, r22
    1884:	47 70       	andi	r20, 0x07	; 7
    1886:	40 5d       	subi	r20, 0xD0	; 208
    1888:	41 93       	st	Z+, r20
    188a:	b3 e0       	ldi	r27, 0x03	; 3
    188c:	0f d0       	rcall	.+30     	; 0x18ac <__ultoa_invert+0x86>
    188e:	c9 f7       	brne	.-14     	; 0x1882 <__ultoa_invert+0x5c>
    1890:	f6 cf       	rjmp	.-20     	; 0x187e <__ultoa_invert+0x58>
    1892:	46 2f       	mov	r20, r22
    1894:	4f 70       	andi	r20, 0x0F	; 15
    1896:	40 5d       	subi	r20, 0xD0	; 208
    1898:	4a 33       	cpi	r20, 0x3A	; 58
    189a:	18 f0       	brcs	.+6      	; 0x18a2 <__ultoa_invert+0x7c>
    189c:	49 5d       	subi	r20, 0xD9	; 217
    189e:	31 fd       	sbrc	r19, 1
    18a0:	40 52       	subi	r20, 0x20	; 32
    18a2:	41 93       	st	Z+, r20
    18a4:	02 d0       	rcall	.+4      	; 0x18aa <__ultoa_invert+0x84>
    18a6:	a9 f7       	brne	.-22     	; 0x1892 <__ultoa_invert+0x6c>
    18a8:	ea cf       	rjmp	.-44     	; 0x187e <__ultoa_invert+0x58>
    18aa:	b4 e0       	ldi	r27, 0x04	; 4
    18ac:	a6 95       	lsr	r26
    18ae:	97 95       	ror	r25
    18b0:	87 95       	ror	r24
    18b2:	77 95       	ror	r23
    18b4:	67 95       	ror	r22
    18b6:	ba 95       	dec	r27
    18b8:	c9 f7       	brne	.-14     	; 0x18ac <__ultoa_invert+0x86>
    18ba:	00 97       	sbiw	r24, 0x00	; 0
    18bc:	61 05       	cpc	r22, r1
    18be:	71 05       	cpc	r23, r1
    18c0:	08 95       	ret
    18c2:	9b 01       	movw	r18, r22
    18c4:	ac 01       	movw	r20, r24
    18c6:	0a 2e       	mov	r0, r26
    18c8:	06 94       	lsr	r0
    18ca:	57 95       	ror	r21
    18cc:	47 95       	ror	r20
    18ce:	37 95       	ror	r19
    18d0:	27 95       	ror	r18
    18d2:	ba 95       	dec	r27
    18d4:	c9 f7       	brne	.-14     	; 0x18c8 <__ultoa_invert+0xa2>
    18d6:	62 0f       	add	r22, r18
    18d8:	73 1f       	adc	r23, r19
    18da:	84 1f       	adc	r24, r20
    18dc:	95 1f       	adc	r25, r21
    18de:	a0 1d       	adc	r26, r0
    18e0:	08 95       	ret

000018e2 <eeprom_read_block>:
    18e2:	60 50       	subi	r22, 0x00	; 0
    18e4:	7c 4e       	sbci	r23, 0xEC	; 236
    18e6:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <memcpy>

000018ea <eeprom_update_block>:
    18ea:	dc 01       	movw	r26, r24
    18ec:	a4 0f       	add	r26, r20
    18ee:	b5 1f       	adc	r27, r21
    18f0:	41 50       	subi	r20, 0x01	; 1
    18f2:	50 40       	sbci	r21, 0x00	; 0
    18f4:	48 f0       	brcs	.+18     	; 0x1908 <eeprom_update_block+0x1e>
    18f6:	cb 01       	movw	r24, r22
    18f8:	84 0f       	add	r24, r20
    18fa:	95 1f       	adc	r25, r21
    18fc:	2e 91       	ld	r18, -X
    18fe:	0e 94 86 0c 	call	0x190c	; 0x190c <eeprom_update_r18>
    1902:	41 50       	subi	r20, 0x01	; 1
    1904:	50 40       	sbci	r21, 0x00	; 0
    1906:	d0 f7       	brcc	.-12     	; 0x18fc <eeprom_update_block+0x12>
    1908:	08 95       	ret

0000190a <eeprom_update_byte>:
    190a:	26 2f       	mov	r18, r22

0000190c <eeprom_update_r18>:
    190c:	0e 94 a8 0c 	call	0x1950	; 0x1950 <eeprom_mapen>
    1910:	00 80       	ld	r0, Z
    1912:	02 16       	cp	r0, r18
    1914:	19 f0       	breq	.+6      	; 0x191c <eeprom_update_r18+0x10>
    1916:	0e 94 91 0c 	call	0x1922	; 0x1922 <eeprom_write_r18>
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	01 97       	sbiw	r24, 0x01	; 1
    191e:	08 95       	ret

00001920 <eeprom_write_byte>:
    1920:	26 2f       	mov	r18, r22

00001922 <eeprom_write_r18>:
    1922:	af 93       	push	r26
    1924:	bf 93       	push	r27
    1926:	e0 e0       	ldi	r30, 0x00	; 0
    1928:	f0 e1       	ldi	r31, 0x10	; 16
    192a:	32 81       	ldd	r19, Z+2	; 0x02
    192c:	31 fd       	sbrc	r19, 1
    192e:	fd cf       	rjmp	.-6      	; 0x192a <eeprom_write_r18+0x8>
    1930:	dc 01       	movw	r26, r24
    1932:	a0 50       	subi	r26, 0x00	; 0
    1934:	bc 4e       	sbci	r27, 0xEC	; 236
    1936:	2c 93       	st	X, r18
    1938:	2d e9       	ldi	r18, 0x9D	; 157
    193a:	24 bf       	out	0x34, r18	; 52
    193c:	23 e0       	ldi	r18, 0x03	; 3
    193e:	20 83       	st	Z, r18
    1940:	01 96       	adiw	r24, 0x01	; 1
    1942:	bf 91       	pop	r27
    1944:	af 91       	pop	r26
    1946:	08 95       	ret

00001948 <eeprom_read_byte>:
    1948:	03 d0       	rcall	.+6      	; 0x1950 <eeprom_mapen>
    194a:	80 81       	ld	r24, Z
    194c:	99 27       	eor	r25, r25
    194e:	08 95       	ret

00001950 <eeprom_mapen>:
    1950:	fc 01       	movw	r30, r24
    1952:	e0 50       	subi	r30, 0x00	; 0
    1954:	fc 4e       	sbci	r31, 0xEC	; 236
    1956:	08 95       	ret

00001958 <__prologue_saves__>:
    1958:	2f 92       	push	r2
    195a:	3f 92       	push	r3
    195c:	4f 92       	push	r4
    195e:	5f 92       	push	r5
    1960:	6f 92       	push	r6
    1962:	7f 92       	push	r7
    1964:	8f 92       	push	r8
    1966:	9f 92       	push	r9
    1968:	af 92       	push	r10
    196a:	bf 92       	push	r11
    196c:	cf 92       	push	r12
    196e:	df 92       	push	r13
    1970:	ef 92       	push	r14
    1972:	ff 92       	push	r15
    1974:	0f 93       	push	r16
    1976:	1f 93       	push	r17
    1978:	cf 93       	push	r28
    197a:	df 93       	push	r29
    197c:	cd b7       	in	r28, 0x3d	; 61
    197e:	de b7       	in	r29, 0x3e	; 62
    1980:	ca 1b       	sub	r28, r26
    1982:	db 0b       	sbc	r29, r27
    1984:	cd bf       	out	0x3d, r28	; 61
    1986:	de bf       	out	0x3e, r29	; 62
    1988:	09 94       	ijmp

0000198a <__epilogue_restores__>:
    198a:	2a 88       	ldd	r2, Y+18	; 0x12
    198c:	39 88       	ldd	r3, Y+17	; 0x11
    198e:	48 88       	ldd	r4, Y+16	; 0x10
    1990:	5f 84       	ldd	r5, Y+15	; 0x0f
    1992:	6e 84       	ldd	r6, Y+14	; 0x0e
    1994:	7d 84       	ldd	r7, Y+13	; 0x0d
    1996:	8c 84       	ldd	r8, Y+12	; 0x0c
    1998:	9b 84       	ldd	r9, Y+11	; 0x0b
    199a:	aa 84       	ldd	r10, Y+10	; 0x0a
    199c:	b9 84       	ldd	r11, Y+9	; 0x09
    199e:	c8 84       	ldd	r12, Y+8	; 0x08
    19a0:	df 80       	ldd	r13, Y+7	; 0x07
    19a2:	ee 80       	ldd	r14, Y+6	; 0x06
    19a4:	fd 80       	ldd	r15, Y+5	; 0x05
    19a6:	0c 81       	ldd	r16, Y+4	; 0x04
    19a8:	1b 81       	ldd	r17, Y+3	; 0x03
    19aa:	aa 81       	ldd	r26, Y+2	; 0x02
    19ac:	b9 81       	ldd	r27, Y+1	; 0x01
    19ae:	ce 0f       	add	r28, r30
    19b0:	d1 1d       	adc	r29, r1
    19b2:	cd bf       	out	0x3d, r28	; 61
    19b4:	de bf       	out	0x3e, r29	; 62
    19b6:	ed 01       	movw	r28, r26
    19b8:	08 95       	ret

000019ba <memcpy>:
    19ba:	fb 01       	movw	r30, r22
    19bc:	dc 01       	movw	r26, r24
    19be:	02 c0       	rjmp	.+4      	; 0x19c4 <memcpy+0xa>
    19c0:	01 90       	ld	r0, Z+
    19c2:	0d 92       	st	X+, r0
    19c4:	41 50       	subi	r20, 0x01	; 1
    19c6:	50 40       	sbci	r21, 0x00	; 0
    19c8:	d8 f7       	brcc	.-10     	; 0x19c0 <memcpy+0x6>
    19ca:	08 95       	ret

000019cc <_exit>:
    19cc:	f8 94       	cli

000019ce <__stop_program>:
    19ce:	ff cf       	rjmp	.-2      	; 0x19ce <__stop_program>
