
specMech.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  0000187a  0000192e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017de  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000009c  000057de  000017de  00001892  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000031e  00802802  00802802  00001930  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000248  00000000  00000000  000019d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004a2c  00000000  00000000  00001c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000026af  00000000  00000000  00006644  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000015f9  00000000  00000000  00008cf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005f8  00000000  00000000  0000a2ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001969  00000000  00000000  0000a8e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000018e0  00000000  00000000  0000c24d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000198  00000000  00000000  0000db2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
       4:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
       8:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
       c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      10:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      14:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      18:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      1c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      20:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      24:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      28:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      2c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      30:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      34:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      38:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      3c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      40:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      44:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__vector_17>
      48:	0c 94 8a 02 	jmp	0x514	; 0x514 <__vector_18>
      4c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      50:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      54:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      58:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      5c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      60:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      64:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      68:	0c 94 ba 02 	jmp	0x574	; 0x574 <__vector_26>
      6c:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__vector_27>
      70:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      74:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      78:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      7c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      80:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      84:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      88:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      8c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      90:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
      94:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_37>
      98:	0c 94 52 03 	jmp	0x6a4	; 0x6a4 <__vector_38>
      9c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>

000000a0 <__ctors_end>:
      a0:	11 24       	eor	r1, r1
      a2:	1f be       	out	0x3f, r1	; 63
      a4:	cf ef       	ldi	r28, 0xFF	; 255
      a6:	cd bf       	out	0x3d, r28	; 61
      a8:	df e3       	ldi	r29, 0x3F	; 63
      aa:	de bf       	out	0x3e, r29	; 62

000000ac <__do_copy_data>:
      ac:	18 e2       	ldi	r17, 0x28	; 40
      ae:	a0 e0       	ldi	r26, 0x00	; 0
      b0:	b8 e2       	ldi	r27, 0x28	; 40
      b2:	ea e7       	ldi	r30, 0x7A	; 122
      b4:	f8 e1       	ldi	r31, 0x18	; 24
      b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x10>
      b8:	05 90       	lpm	r0, Z+
      ba:	0d 92       	st	X+, r0
      bc:	a2 30       	cpi	r26, 0x02	; 2
      be:	b1 07       	cpc	r27, r17
      c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0xc>

000000c2 <__do_clear_bss>:
      c2:	2b e2       	ldi	r18, 0x2B	; 43
      c4:	a2 e0       	ldi	r26, 0x02	; 2
      c6:	b8 e2       	ldi	r27, 0x28	; 40
      c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
      ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
      cc:	a0 32       	cpi	r26, 0x20	; 32
      ce:	b2 07       	cpc	r27, r18
      d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
      d2:	0e 94 9a 08 	call	0x1134	; 0x1134 <main>
      d6:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <_exit>

000000da <__bad_interrupt>:
      da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000de <init_PORTS>:
	char blanks[] = "                ";	// Does const put this in flash?

	writestr_OLED(displaynumber, blanks, 1);
	writestr_OLED(displaynumber, blanks, 2);

}
      de:	e0 e0       	ldi	r30, 0x00	; 0
      e0:	f4 e0       	ldi	r31, 0x04	; 4
      e2:	88 e0       	ldi	r24, 0x08	; 8
      e4:	80 8b       	std	Z+16, r24	; 0x10
      e6:	81 8b       	std	Z+17, r24	; 0x11
      e8:	82 8b       	std	Z+18, r24	; 0x12
      ea:	83 8b       	std	Z+19, r24	; 0x13
      ec:	84 8b       	std	Z+20, r24	; 0x14
      ee:	85 8b       	std	Z+21, r24	; 0x15
      f0:	86 8b       	std	Z+22, r24	; 0x16
      f2:	87 8b       	std	Z+23, r24	; 0x17
      f4:	e0 e2       	ldi	r30, 0x20	; 32
      f6:	f4 e0       	ldi	r31, 0x04	; 4
      f8:	80 8b       	std	Z+16, r24	; 0x10
      fa:	81 8b       	std	Z+17, r24	; 0x11
      fc:	82 8b       	std	Z+18, r24	; 0x12
      fe:	83 8b       	std	Z+19, r24	; 0x13
     100:	84 8b       	std	Z+20, r24	; 0x14
     102:	85 8b       	std	Z+21, r24	; 0x15
     104:	e0 e4       	ldi	r30, 0x40	; 64
     106:	f4 e0       	ldi	r31, 0x04	; 4
     108:	80 8b       	std	Z+16, r24	; 0x10
     10a:	81 8b       	std	Z+17, r24	; 0x11
     10c:	82 8b       	std	Z+18, r24	; 0x12
     10e:	83 8b       	std	Z+19, r24	; 0x13
     110:	84 8b       	std	Z+20, r24	; 0x14
     112:	85 8b       	std	Z+21, r24	; 0x15
     114:	86 8b       	std	Z+22, r24	; 0x16
     116:	87 8b       	std	Z+23, r24	; 0x17
     118:	e0 e6       	ldi	r30, 0x60	; 96
     11a:	f4 e0       	ldi	r31, 0x04	; 4
     11c:	94 e0       	ldi	r25, 0x04	; 4
     11e:	90 8b       	std	Z+16, r25	; 0x10
     120:	91 8b       	std	Z+17, r25	; 0x11
     122:	92 8b       	std	Z+18, r25	; 0x12
     124:	93 8b       	std	Z+19, r25	; 0x13
     126:	94 8b       	std	Z+20, r25	; 0x14
     128:	95 8b       	std	Z+21, r25	; 0x15
     12a:	96 8b       	std	Z+22, r25	; 0x16
     12c:	97 8b       	std	Z+23, r25	; 0x17
     12e:	e0 e8       	ldi	r30, 0x80	; 128
     130:	f4 e0       	ldi	r31, 0x04	; 4
     132:	80 8b       	std	Z+16, r24	; 0x10
     134:	81 8b       	std	Z+17, r24	; 0x11
     136:	82 8b       	std	Z+18, r24	; 0x12
     138:	83 8b       	std	Z+19, r24	; 0x13
     13a:	e0 ea       	ldi	r30, 0xA0	; 160
     13c:	f4 e0       	ldi	r31, 0x04	; 4
     13e:	80 8b       	std	Z+16, r24	; 0x10
     140:	81 8b       	std	Z+17, r24	; 0x11
     142:	82 8b       	std	Z+18, r24	; 0x12
     144:	83 8b       	std	Z+19, r24	; 0x13
     146:	84 8b       	std	Z+20, r24	; 0x14
     148:	85 8b       	std	Z+21, r24	; 0x15
     14a:	86 8b       	std	Z+22, r24	; 0x16
     14c:	08 95       	ret

0000014e <init_LED>:
     14e:	e0 ea       	ldi	r30, 0xA0	; 160
     150:	f4 e0       	ldi	r31, 0x04	; 4
     152:	80 e2       	ldi	r24, 0x20	; 32
     154:	85 83       	std	Z+5, r24	; 0x05
     156:	81 83       	std	Z+1, r24	; 0x01
     158:	08 95       	ret

0000015a <init_TWI>:
     15a:	e0 ea       	ldi	r30, 0xA0	; 160
     15c:	f8 e0       	ldi	r31, 0x08	; 8
     15e:	8b e0       	ldi	r24, 0x0B	; 11
     160:	86 83       	std	Z+6, r24	; 0x06
     162:	83 81       	ldd	r24, Z+3	; 0x03
     164:	81 60       	ori	r24, 0x01	; 1
     166:	83 83       	std	Z+3, r24	; 0x03
     168:	85 81       	ldd	r24, Z+5	; 0x05
     16a:	81 60       	ori	r24, 0x01	; 1
     16c:	85 83       	std	Z+5, r24	; 0x05
     16e:	08 95       	ret

00000170 <read_TWI>:
     170:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     174:	88 23       	and	r24, r24
     176:	34 f0       	brlt	.+12     	; 0x184 <read_TWI+0x14>
     178:	e0 ea       	ldi	r30, 0xA0	; 160
     17a:	f8 e0       	ldi	r31, 0x08	; 8
     17c:	00 00       	nop
     17e:	85 81       	ldd	r24, Z+5	; 0x05
     180:	88 23       	and	r24, r24
     182:	e4 f7       	brge	.-8      	; 0x17c <read_TWI+0xc>
     184:	e0 ea       	ldi	r30, 0xA0	; 160
     186:	f8 e0       	ldi	r31, 0x08	; 8
     188:	84 81       	ldd	r24, Z+4	; 0x04
     18a:	8b 7f       	andi	r24, 0xFB	; 251
     18c:	84 83       	std	Z+4, r24	; 0x04
     18e:	80 85       	ldd	r24, Z+8	; 0x08
     190:	94 81       	ldd	r25, Z+4	; 0x04
     192:	92 60       	ori	r25, 0x02	; 2
     194:	94 83       	std	Z+4, r25	; 0x04
     196:	08 95       	ret

00000198 <readlast_TWI>:
     198:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     19c:	88 23       	and	r24, r24
     19e:	34 f0       	brlt	.+12     	; 0x1ac <readlast_TWI+0x14>
     1a0:	e0 ea       	ldi	r30, 0xA0	; 160
     1a2:	f8 e0       	ldi	r31, 0x08	; 8
     1a4:	00 00       	nop
     1a6:	85 81       	ldd	r24, Z+5	; 0x05
     1a8:	88 23       	and	r24, r24
     1aa:	e4 f7       	brge	.-8      	; 0x1a4 <readlast_TWI+0xc>
     1ac:	e0 ea       	ldi	r30, 0xA0	; 160
     1ae:	f8 e0       	ldi	r31, 0x08	; 8
     1b0:	84 81       	ldd	r24, Z+4	; 0x04
     1b2:	84 60       	ori	r24, 0x04	; 4
     1b4:	84 83       	std	Z+4, r24	; 0x04
     1b6:	80 85       	ldd	r24, Z+8	; 0x08
     1b8:	08 95       	ret

000001ba <start_TWI>:
     1ba:	61 30       	cpi	r22, 0x01	; 1
     1bc:	11 f4       	brne	.+4      	; 0x1c2 <start_TWI+0x8>
     1be:	81 60       	ori	r24, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <start_TWI+0xa>
     1c2:	8e 7f       	andi	r24, 0xFE	; 254
     1c4:	e0 ea       	ldi	r30, 0xA0	; 160
     1c6:	f8 e0       	ldi	r31, 0x08	; 8
     1c8:	87 83       	std	Z+7, r24	; 0x07
     1ca:	85 81       	ldd	r24, Z+5	; 0x05
     1cc:	80 7c       	andi	r24, 0xC0	; 192
     1ce:	21 f4       	brne	.+8      	; 0x1d8 <start_TWI+0x1e>
     1d0:	00 00       	nop
     1d2:	85 81       	ldd	r24, Z+5	; 0x05
     1d4:	80 7c       	andi	r24, 0xC0	; 192
     1d6:	e1 f3       	breq	.-8      	; 0x1d0 <start_TWI+0x16>
     1d8:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1dc:	82 fd       	sbrc	r24, 2
     1de:	0b c0       	rjmp	.+22     	; 0x1f6 <start_TWI+0x3c>
     1e0:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1e4:	83 fd       	sbrc	r24, 3
     1e6:	09 c0       	rjmp	.+18     	; 0x1fa <start_TWI+0x40>
     1e8:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     1ec:	89 2f       	mov	r24, r25
     1ee:	80 71       	andi	r24, 0x10	; 16
     1f0:	94 fd       	sbrc	r25, 4
     1f2:	05 c0       	rjmp	.+10     	; 0x1fe <start_TWI+0x44>
     1f4:	08 95       	ret
     1f6:	81 e0       	ldi	r24, 0x01	; 1
     1f8:	08 95       	ret
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	08 95       	ret
     1fe:	84 e0       	ldi	r24, 0x04	; 4
     200:	08 95       	ret

00000202 <write_TWI>:
     202:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     206:	96 fd       	sbrc	r25, 6
     208:	06 c0       	rjmp	.+12     	; 0x216 <write_TWI+0x14>
     20a:	e0 ea       	ldi	r30, 0xA0	; 160
     20c:	f8 e0       	ldi	r31, 0x08	; 8
     20e:	00 00       	nop
     210:	95 81       	ldd	r25, Z+5	; 0x05
     212:	96 ff       	sbrs	r25, 6
     214:	fc cf       	rjmp	.-8      	; 0x20e <write_TWI+0xc>
     216:	e0 ea       	ldi	r30, 0xA0	; 160
     218:	f8 e0       	ldi	r31, 0x08	; 8
     21a:	80 87       	std	Z+8, r24	; 0x08
     21c:	85 81       	ldd	r24, Z+5	; 0x05
     21e:	86 fd       	sbrc	r24, 6
     220:	04 c0       	rjmp	.+8      	; 0x22a <write_TWI+0x28>
     222:	00 00       	nop
     224:	85 81       	ldd	r24, Z+5	; 0x05
     226:	86 ff       	sbrs	r24, 6
     228:	fc cf       	rjmp	.-8      	; 0x222 <write_TWI+0x20>
     22a:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
     22e:	89 2f       	mov	r24, r25
     230:	80 71       	andi	r24, 0x10	; 16
     232:	94 fd       	sbrc	r25, 4
     234:	83 e0       	ldi	r24, 0x03	; 3
     236:	08 95       	ret

00000238 <read_MCP23008>:
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	c8 2f       	mov	r28, r24
     242:	d6 2f       	mov	r29, r22
     244:	8a 01       	movw	r16, r20
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     24c:	81 11       	cpse	r24, r1
     24e:	15 c0       	rjmp	.+42     	; 0x27a <read_MCP23008+0x42>
     250:	8d 2f       	mov	r24, r29
     252:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     256:	81 11       	cpse	r24, r1
     258:	10 c0       	rjmp	.+32     	; 0x27a <read_MCP23008+0x42>
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	8c 2f       	mov	r24, r28
     25e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     262:	c8 2f       	mov	r28, r24
     264:	81 11       	cpse	r24, r1
     266:	09 c0       	rjmp	.+18     	; 0x27a <read_MCP23008+0x42>
     268:	0e 94 cc 00 	call	0x198	; 0x198 <readlast_TWI>
     26c:	f8 01       	movw	r30, r16
     26e:	80 83       	st	Z, r24
     270:	87 e0       	ldi	r24, 0x07	; 7
     272:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     276:	8c 2f       	mov	r24, r28
     278:	00 c0       	rjmp	.+0      	; 0x27a <read_MCP23008+0x42>
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	08 95       	ret

00000284 <write_MCP23008>:
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	c6 2f       	mov	r28, r22
     28a:	d4 2f       	mov	r29, r20
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     292:	88 23       	and	r24, r24
     294:	21 f0       	breq	.+8      	; 0x29e <write_MCP23008+0x1a>
     296:	97 e0       	ldi	r25, 0x07	; 7
     298:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     29c:	16 c0       	rjmp	.+44     	; 0x2ca <write_MCP23008+0x46>
     29e:	8c 2f       	mov	r24, r28
     2a0:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     2a4:	88 23       	and	r24, r24
     2a6:	21 f0       	breq	.+8      	; 0x2b0 <write_MCP23008+0x2c>
     2a8:	97 e0       	ldi	r25, 0x07	; 7
     2aa:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2ae:	0d c0       	rjmp	.+26     	; 0x2ca <write_MCP23008+0x46>
     2b0:	8d 2f       	mov	r24, r29
     2b2:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     2b6:	88 23       	and	r24, r24
     2b8:	21 f0       	breq	.+8      	; 0x2c2 <write_MCP23008+0x3e>
     2ba:	97 e0       	ldi	r25, 0x07	; 7
     2bc:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <write_MCP23008+0x46>
     2c2:	87 e0       	ldi	r24, 0x07	; 7
     2c4:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <init_PNEU>:
     2d0:	40 e0       	ldi	r20, 0x00	; 0
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	80 e4       	ldi	r24, 0x40	; 64
     2d6:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     2da:	81 11       	cpse	r24, r1
     2dc:	05 c0       	rjmp	.+10     	; 0x2e8 <init_PNEU+0x18>
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	6a e0       	ldi	r22, 0x0A	; 10
     2e2:	80 e4       	ldi	r24, 0x40	; 64
     2e4:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     2e8:	08 95       	ret

000002ea <set_valves>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	1f 92       	push	r1
     2f4:	cd b7       	in	r28, 0x3d	; 61
     2f6:	de b7       	in	r29, 0x3e	; 62
     2f8:	08 2f       	mov	r16, r24
     2fa:	16 2f       	mov	r17, r22
     2fc:	ae 01       	movw	r20, r28
     2fe:	4f 5f       	subi	r20, 0xFF	; 255
     300:	5f 4f       	sbci	r21, 0xFF	; 255
     302:	69 e0       	ldi	r22, 0x09	; 9
     304:	80 e4       	ldi	r24, 0x40	; 64
     306:	0e 94 1c 01 	call	0x238	; 0x238 <read_MCP23008>
     30a:	81 11       	cpse	r24, r1
     30c:	07 c0       	rjmp	.+14     	; 0x31c <set_valves+0x32>
     30e:	49 81       	ldd	r20, Y+1	; 0x01
     310:	40 2b       	or	r20, r16
     312:	41 23       	and	r20, r17
     314:	6a e0       	ldi	r22, 0x0A	; 10
     316:	80 e4       	ldi	r24, 0x40	; 64
     318:	0e 94 42 01 	call	0x284	; 0x284 <write_MCP23008>
     31c:	0f 90       	pop	r0
     31e:	df 91       	pop	r29
     320:	cf 91       	pop	r28
     322:	1f 91       	pop	r17
     324:	0f 91       	pop	r16
     326:	08 95       	ret

00000328 <init_USART>:
     328:	e0 e0       	ldi	r30, 0x00	; 0
     32a:	f4 e0       	ldi	r31, 0x04	; 4
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	85 83       	std	Z+5, r24	; 0x05
     330:	81 83       	std	Z+1, r24	; 0x01
     332:	e0 e0       	ldi	r30, 0x00	; 0
     334:	f8 e0       	ldi	r31, 0x08	; 8
     336:	2d e6       	ldi	r18, 0x6D	; 109
     338:	35 e0       	ldi	r19, 0x05	; 5
     33a:	20 87       	std	Z+8, r18	; 0x08
     33c:	31 87       	std	Z+9, r19	; 0x09
     33e:	95 81       	ldd	r25, Z+5	; 0x05
     340:	90 68       	ori	r25, 0x80	; 128
     342:	95 83       	std	Z+5, r25	; 0x05
     344:	96 81       	ldd	r25, Z+6	; 0x06
     346:	90 64       	ori	r25, 0x40	; 64
     348:	96 83       	std	Z+6, r25	; 0x06
     34a:	96 81       	ldd	r25, Z+6	; 0x06
     34c:	90 68       	ori	r25, 0x80	; 128
     34e:	96 83       	std	Z+6, r25	; 0x06
     350:	10 92 8c 29 	sts	0x298C, r1	; 0x80298c <send0_buf+0x80>
     354:	10 92 8d 29 	sts	0x298D, r1	; 0x80298d <send0_buf+0x81>
     358:	80 93 90 29 	sts	0x2990, r24	; 0x802990 <send0_buf+0x84>
     35c:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <recv0_buf+0x80>
     360:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <recv0_buf+0x81>
     364:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <recv0_buf>
     368:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <recv0_buf+0x84>
     36c:	e0 e4       	ldi	r30, 0x40	; 64
     36e:	f4 e0       	ldi	r31, 0x04	; 4
     370:	85 83       	std	Z+5, r24	; 0x05
     372:	81 83       	std	Z+1, r24	; 0x01
     374:	e0 e2       	ldi	r30, 0x20	; 32
     376:	f8 e0       	ldi	r31, 0x08	; 8
     378:	20 87       	std	Z+8, r18	; 0x08
     37a:	31 87       	std	Z+9, r19	; 0x09
     37c:	96 81       	ldd	r25, Z+6	; 0x06
     37e:	90 64       	ori	r25, 0x40	; 64
     380:	96 83       	std	Z+6, r25	; 0x06
     382:	96 81       	ldd	r25, Z+6	; 0x06
     384:	90 68       	ori	r25, 0x80	; 128
     386:	96 83       	std	Z+6, r25	; 0x06
     388:	80 93 1f 2b 	sts	0x2B1F, r24	; 0x802b1f <send1_buf+0x84>
     38c:	10 92 86 28 	sts	0x2886, r1	; 0x802886 <__data_end+0x84>
     390:	e0 e2       	ldi	r30, 0x20	; 32
     392:	f4 e0       	ldi	r31, 0x04	; 4
     394:	85 83       	std	Z+5, r24	; 0x05
     396:	81 83       	std	Z+1, r24	; 0x01
     398:	e0 e6       	ldi	r30, 0x60	; 96
     39a:	f8 e0       	ldi	r31, 0x08	; 8
     39c:	20 87       	std	Z+8, r18	; 0x08
     39e:	31 87       	std	Z+9, r19	; 0x09
     3a0:	96 81       	ldd	r25, Z+6	; 0x06
     3a2:	90 64       	ori	r25, 0x40	; 64
     3a4:	96 83       	std	Z+6, r25	; 0x06
     3a6:	96 81       	ldd	r25, Z+6	; 0x06
     3a8:	90 68       	ori	r25, 0x80	; 128
     3aa:	96 83       	std	Z+6, r25	; 0x06
     3ac:	80 93 9a 2a 	sts	0x2A9A, r24	; 0x802a9a <send3_buf+0x84>
     3b0:	10 92 15 2a 	sts	0x2A15, r1	; 0x802a15 <recv3_buf+0x84>
     3b4:	08 95       	ret

000003b6 <send_USART>:
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	81 30       	cpi	r24, 0x01	; 1
     3bc:	39 f0       	breq	.+14     	; 0x3cc <send_USART+0x16>
     3be:	48 f0       	brcs	.+18     	; 0x3d2 <send_USART+0x1c>
     3c0:	83 30       	cpi	r24, 0x03	; 3
     3c2:	09 f0       	breq	.+2      	; 0x3c6 <send_USART+0x10>
     3c4:	70 c0       	rjmp	.+224    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     3c6:	41 11       	cpse	r20, r1
     3c8:	4c c0       	rjmp	.+152    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     3ca:	68 c0       	rjmp	.+208    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     3cc:	41 11       	cpse	r20, r1
     3ce:	26 c0       	rjmp	.+76     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3d0:	42 c0       	rjmp	.+132    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     3d2:	44 23       	and	r20, r20
     3d4:	e9 f0       	breq	.+58     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3d6:	fb 01       	movw	r30, r22
     3d8:	41 50       	subi	r20, 0x01	; 1
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	4f 5f       	subi	r20, 0xFF	; 255
     3de:	5f 4f       	sbci	r21, 0xFF	; 255
     3e0:	64 0f       	add	r22, r20
     3e2:	75 1f       	adc	r23, r21
     3e4:	ac e8       	ldi	r26, 0x8C	; 140
     3e6:	b9 e2       	ldi	r27, 0x29	; 41
     3e8:	8c 91       	ld	r24, X
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	21 91       	ld	r18, Z+
     3ee:	ec 01       	movw	r28, r24
     3f0:	c4 5f       	subi	r28, 0xF4	; 244
     3f2:	d6 4d       	sbci	r29, 0xD6	; 214
     3f4:	28 83       	st	Y, r18
     3f6:	01 96       	adiw	r24, 0x01	; 1
     3f8:	8f 77       	andi	r24, 0x7F	; 127
     3fa:	90 78       	andi	r25, 0x80	; 128
     3fc:	99 23       	and	r25, r25
     3fe:	24 f4       	brge	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	80 68       	ori	r24, 0x80	; 128
     404:	9f 6f       	ori	r25, 0xFF	; 255
     406:	01 96       	adiw	r24, 0x01	; 1
     408:	8c 93       	st	X, r24
     40a:	6e 17       	cp	r22, r30
     40c:	7f 07       	cpc	r23, r31
     40e:	61 f7       	brne	.-40     	; 0x3e8 <send_USART+0x32>
     410:	e0 e0       	ldi	r30, 0x00	; 0
     412:	f8 e0       	ldi	r31, 0x08	; 8
     414:	85 81       	ldd	r24, Z+5	; 0x05
     416:	80 62       	ori	r24, 0x20	; 32
     418:	85 83       	std	Z+5, r24	; 0x05
     41a:	45 c0       	rjmp	.+138    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     41c:	fb 01       	movw	r30, r22
     41e:	41 50       	subi	r20, 0x01	; 1
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	4f 5f       	subi	r20, 0xFF	; 255
     424:	5f 4f       	sbci	r21, 0xFF	; 255
     426:	64 0f       	add	r22, r20
     428:	75 1f       	adc	r23, r21
     42a:	ab e1       	ldi	r26, 0x1B	; 27
     42c:	bb e2       	ldi	r27, 0x2B	; 43
     42e:	8c 91       	ld	r24, X
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	21 91       	ld	r18, Z+
     434:	ec 01       	movw	r28, r24
     436:	c5 56       	subi	r28, 0x65	; 101
     438:	d5 4d       	sbci	r29, 0xD5	; 213
     43a:	28 83       	st	Y, r18
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	8f 77       	andi	r24, 0x7F	; 127
     440:	90 78       	andi	r25, 0x80	; 128
     442:	99 23       	and	r25, r25
     444:	24 f4       	brge	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	80 68       	ori	r24, 0x80	; 128
     44a:	9f 6f       	ori	r25, 0xFF	; 255
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	8c 93       	st	X, r24
     450:	6e 17       	cp	r22, r30
     452:	7f 07       	cpc	r23, r31
     454:	61 f7       	brne	.-40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     456:	e0 e2       	ldi	r30, 0x20	; 32
     458:	f8 e0       	ldi	r31, 0x08	; 8
     45a:	85 81       	ldd	r24, Z+5	; 0x05
     45c:	80 62       	ori	r24, 0x20	; 32
     45e:	85 83       	std	Z+5, r24	; 0x05
     460:	22 c0       	rjmp	.+68     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     462:	fb 01       	movw	r30, r22
     464:	41 50       	subi	r20, 0x01	; 1
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	4f 5f       	subi	r20, 0xFF	; 255
     46a:	5f 4f       	sbci	r21, 0xFF	; 255
     46c:	64 0f       	add	r22, r20
     46e:	75 1f       	adc	r23, r21
     470:	a6 e9       	ldi	r26, 0x96	; 150
     472:	ba e2       	ldi	r27, 0x2A	; 42
     474:	8c 91       	ld	r24, X
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	21 91       	ld	r18, Z+
     47a:	ec 01       	movw	r28, r24
     47c:	ca 5e       	subi	r28, 0xEA	; 234
     47e:	d5 4d       	sbci	r29, 0xD5	; 213
     480:	28 83       	st	Y, r18
     482:	01 96       	adiw	r24, 0x01	; 1
     484:	8f 77       	andi	r24, 0x7F	; 127
     486:	90 78       	andi	r25, 0x80	; 128
     488:	99 23       	and	r25, r25
     48a:	24 f4       	brge	.+8      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     48c:	01 97       	sbiw	r24, 0x01	; 1
     48e:	80 68       	ori	r24, 0x80	; 128
     490:	9f 6f       	ori	r25, 0xFF	; 255
     492:	01 96       	adiw	r24, 0x01	; 1
     494:	8c 93       	st	X, r24
     496:	6e 17       	cp	r22, r30
     498:	7f 07       	cpc	r23, r31
     49a:	61 f7       	brne	.-40     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     49c:	e0 e6       	ldi	r30, 0x60	; 96
     49e:	f8 e0       	ldi	r31, 0x08	; 8
     4a0:	85 81       	ldd	r24, Z+5	; 0x05
     4a2:	80 62       	ori	r24, 0x20	; 32
     4a4:	85 83       	std	Z+5, r24	; 0x05
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	08 95       	ret

000004ac <__vector_17>:
     4ac:	1f 92       	push	r1
     4ae:	0f 92       	push	r0
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	0f 92       	push	r0
     4b4:	11 24       	eor	r1, r1
     4b6:	8f 93       	push	r24
     4b8:	9f 93       	push	r25
     4ba:	ef 93       	push	r30
     4bc:	ff 93       	push	r31
     4be:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f4800>
     4c2:	8d 30       	cpi	r24, 0x0D	; 13
     4c4:	51 f4       	brne	.+20     	; 0x4da <__vector_17+0x2e>
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <recv0_buf+0x84>
     4cc:	e0 91 07 29 	lds	r30, 0x2907	; 0x802907 <recv0_buf+0x80>
     4d0:	f0 e0       	ldi	r31, 0x00	; 0
     4d2:	e9 57       	subi	r30, 0x79	; 121
     4d4:	f7 4d       	sbci	r31, 0xD7	; 215
     4d6:	10 82       	st	Z, r1
     4d8:	06 c0       	rjmp	.+12     	; 0x4e6 <__vector_17+0x3a>
     4da:	e0 91 07 29 	lds	r30, 0x2907	; 0x802907 <recv0_buf+0x80>
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	e9 57       	subi	r30, 0x79	; 121
     4e2:	f7 4d       	sbci	r31, 0xD7	; 215
     4e4:	80 83       	st	Z, r24
     4e6:	e7 e0       	ldi	r30, 0x07	; 7
     4e8:	f9 e2       	ldi	r31, 0x29	; 41
     4ea:	80 81       	ld	r24, Z
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	01 96       	adiw	r24, 0x01	; 1
     4f0:	8f 77       	andi	r24, 0x7F	; 127
     4f2:	90 78       	andi	r25, 0x80	; 128
     4f4:	99 23       	and	r25, r25
     4f6:	24 f4       	brge	.+8      	; 0x500 <__vector_17+0x54>
     4f8:	01 97       	sbiw	r24, 0x01	; 1
     4fa:	80 68       	ori	r24, 0x80	; 128
     4fc:	9f 6f       	ori	r25, 0xFF	; 255
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	80 83       	st	Z, r24
     502:	ff 91       	pop	r31
     504:	ef 91       	pop	r30
     506:	9f 91       	pop	r25
     508:	8f 91       	pop	r24
     50a:	0f 90       	pop	r0
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	0f 90       	pop	r0
     510:	1f 90       	pop	r1
     512:	18 95       	reti

00000514 <__vector_18>:
     514:	1f 92       	push	r1
     516:	0f 92       	push	r0
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	0f 92       	push	r0
     51c:	11 24       	eor	r1, r1
     51e:	8f 93       	push	r24
     520:	9f 93       	push	r25
     522:	ef 93       	push	r30
     524:	ff 93       	push	r31
     526:	e0 e0       	ldi	r30, 0x00	; 0
     528:	f8 e0       	ldi	r31, 0x08	; 8
     52a:	85 81       	ldd	r24, Z+5	; 0x05
     52c:	8f 7d       	andi	r24, 0xDF	; 223
     52e:	85 83       	std	Z+5, r24	; 0x05
     530:	e0 91 8d 29 	lds	r30, 0x298D	; 0x80298d <send0_buf+0x81>
     534:	80 91 8c 29 	lds	r24, 0x298C	; 0x80298c <send0_buf+0x80>
     538:	8e 17       	cp	r24, r30
     53a:	81 f0       	breq	.+32     	; 0x55c <__vector_18+0x48>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	8e 0f       	add	r24, r30
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	e4 5f       	subi	r30, 0xF4	; 244
     544:	f6 4d       	sbci	r31, 0xD6	; 214
     546:	90 81       	ld	r25, Z
     548:	e0 e0       	ldi	r30, 0x00	; 0
     54a:	f8 e0       	ldi	r31, 0x08	; 8
     54c:	92 83       	std	Z+2, r25	; 0x02
     54e:	8f 77       	andi	r24, 0x7F	; 127
     550:	80 93 8d 29 	sts	0x298D, r24	; 0x80298d <send0_buf+0x81>
     554:	85 81       	ldd	r24, Z+5	; 0x05
     556:	80 62       	ori	r24, 0x20	; 32
     558:	85 83       	std	Z+5, r24	; 0x05
     55a:	03 c0       	rjmp	.+6      	; 0x562 <__vector_18+0x4e>
     55c:	81 e0       	ldi	r24, 0x01	; 1
     55e:	80 93 90 29 	sts	0x2990, r24	; 0x802990 <send0_buf+0x84>
     562:	ff 91       	pop	r31
     564:	ef 91       	pop	r30
     566:	9f 91       	pop	r25
     568:	8f 91       	pop	r24
     56a:	0f 90       	pop	r0
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	0f 90       	pop	r0
     570:	1f 90       	pop	r1
     572:	18 95       	reti

00000574 <__vector_26>:
     574:	1f 92       	push	r1
     576:	0f 92       	push	r0
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	0f 92       	push	r0
     57c:	11 24       	eor	r1, r1
     57e:	8f 93       	push	r24
     580:	9f 93       	push	r25
     582:	af 93       	push	r26
     584:	bf 93       	push	r27
     586:	ef 93       	push	r30
     588:	ff 93       	push	r31
     58a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7f4820>
     58e:	8d 30       	cpi	r24, 0x0D	; 13
     590:	21 f0       	breq	.+8      	; 0x59a <__vector_26+0x26>
     592:	e0 91 85 28 	lds	r30, 0x2885	; 0x802885 <__data_end+0x83>
     596:	ef 37       	cpi	r30, 0x7F	; 127
     598:	78 f0       	brcs	.+30     	; 0x5b8 <__vector_26+0x44>
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	80 93 86 28 	sts	0x2886, r24	; 0x802886 <__data_end+0x84>
     5a0:	a5 e8       	ldi	r26, 0x85	; 133
     5a2:	b8 e2       	ldi	r27, 0x28	; 40
     5a4:	8c 91       	ld	r24, X
     5a6:	e8 2f       	mov	r30, r24
     5a8:	f0 e0       	ldi	r31, 0x00	; 0
     5aa:	ee 5f       	subi	r30, 0xFE	; 254
     5ac:	f7 4d       	sbci	r31, 0xD7	; 215
     5ae:	10 82       	st	Z, r1
     5b0:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <__data_end+0x82>
     5b4:	1c 92       	st	X, r1
     5b6:	08 c0       	rjmp	.+16     	; 0x5c8 <__vector_26+0x54>
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	9e 0f       	add	r25, r30
     5bc:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <__data_end+0x83>
     5c0:	f0 e0       	ldi	r31, 0x00	; 0
     5c2:	ee 5f       	subi	r30, 0xFE	; 254
     5c4:	f7 4d       	sbci	r31, 0xD7	; 215
     5c6:	80 83       	st	Z, r24
     5c8:	ff 91       	pop	r31
     5ca:	ef 91       	pop	r30
     5cc:	bf 91       	pop	r27
     5ce:	af 91       	pop	r26
     5d0:	9f 91       	pop	r25
     5d2:	8f 91       	pop	r24
     5d4:	0f 90       	pop	r0
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	0f 90       	pop	r0
     5da:	1f 90       	pop	r1
     5dc:	18 95       	reti

000005de <__vector_27>:
     5de:	1f 92       	push	r1
     5e0:	0f 92       	push	r0
     5e2:	0f b6       	in	r0, 0x3f	; 63
     5e4:	0f 92       	push	r0
     5e6:	11 24       	eor	r1, r1
     5e8:	8f 93       	push	r24
     5ea:	9f 93       	push	r25
     5ec:	af 93       	push	r26
     5ee:	bf 93       	push	r27
     5f0:	ef 93       	push	r30
     5f2:	ff 93       	push	r31
     5f4:	ae e1       	ldi	r26, 0x1E	; 30
     5f6:	bb e2       	ldi	r27, 0x2B	; 43
     5f8:	ec 91       	ld	r30, X
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	8e 0f       	add	r24, r30
     5fe:	8c 93       	st	X, r24
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	e5 56       	subi	r30, 0x65	; 101
     604:	f5 4d       	sbci	r31, 0xD5	; 213
     606:	90 81       	ld	r25, Z
     608:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7f4822>
     60c:	90 91 1d 2b 	lds	r25, 0x2B1D	; 0x802b1d <send1_buf+0x82>
     610:	89 17       	cp	r24, r25
     612:	40 f0       	brcs	.+16     	; 0x624 <__vector_27+0x46>
     614:	e0 e2       	ldi	r30, 0x20	; 32
     616:	f8 e0       	ldi	r31, 0x08	; 8
     618:	85 81       	ldd	r24, Z+5	; 0x05
     61a:	8f 7d       	andi	r24, 0xDF	; 223
     61c:	85 83       	std	Z+5, r24	; 0x05
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	80 93 1f 2b 	sts	0x2B1F, r24	; 0x802b1f <send1_buf+0x84>
     624:	ff 91       	pop	r31
     626:	ef 91       	pop	r30
     628:	bf 91       	pop	r27
     62a:	af 91       	pop	r26
     62c:	9f 91       	pop	r25
     62e:	8f 91       	pop	r24
     630:	0f 90       	pop	r0
     632:	0f be       	out	0x3f, r0	; 63
     634:	0f 90       	pop	r0
     636:	1f 90       	pop	r1
     638:	18 95       	reti

0000063a <__vector_37>:
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	8f 93       	push	r24
     646:	9f 93       	push	r25
     648:	af 93       	push	r26
     64a:	bf 93       	push	r27
     64c:	ef 93       	push	r30
     64e:	ff 93       	push	r31
     650:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7f4860>
     654:	8d 30       	cpi	r24, 0x0D	; 13
     656:	21 f0       	breq	.+8      	; 0x660 <__vector_37+0x26>
     658:	e0 91 14 2a 	lds	r30, 0x2A14	; 0x802a14 <recv3_buf+0x83>
     65c:	ef 37       	cpi	r30, 0x7F	; 127
     65e:	78 f0       	brcs	.+30     	; 0x67e <__vector_37+0x44>
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	80 93 15 2a 	sts	0x2A15, r24	; 0x802a15 <recv3_buf+0x84>
     666:	a4 e1       	ldi	r26, 0x14	; 20
     668:	ba e2       	ldi	r27, 0x2A	; 42
     66a:	8c 91       	ld	r24, X
     66c:	e8 2f       	mov	r30, r24
     66e:	f0 e0       	ldi	r31, 0x00	; 0
     670:	ef 56       	subi	r30, 0x6F	; 111
     672:	f6 4d       	sbci	r31, 0xD6	; 214
     674:	10 82       	st	Z, r1
     676:	80 93 13 2a 	sts	0x2A13, r24	; 0x802a13 <recv3_buf+0x82>
     67a:	1c 92       	st	X, r1
     67c:	08 c0       	rjmp	.+16     	; 0x68e <__vector_37+0x54>
     67e:	91 e0       	ldi	r25, 0x01	; 1
     680:	9e 0f       	add	r25, r30
     682:	90 93 14 2a 	sts	0x2A14, r25	; 0x802a14 <recv3_buf+0x83>
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	ef 56       	subi	r30, 0x6F	; 111
     68a:	f6 4d       	sbci	r31, 0xD6	; 214
     68c:	80 83       	st	Z, r24
     68e:	ff 91       	pop	r31
     690:	ef 91       	pop	r30
     692:	bf 91       	pop	r27
     694:	af 91       	pop	r26
     696:	9f 91       	pop	r25
     698:	8f 91       	pop	r24
     69a:	0f 90       	pop	r0
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	0f 90       	pop	r0
     6a0:	1f 90       	pop	r1
     6a2:	18 95       	reti

000006a4 <__vector_38>:
     6a4:	1f 92       	push	r1
     6a6:	0f 92       	push	r0
     6a8:	0f b6       	in	r0, 0x3f	; 63
     6aa:	0f 92       	push	r0
     6ac:	11 24       	eor	r1, r1
     6ae:	8f 93       	push	r24
     6b0:	9f 93       	push	r25
     6b2:	af 93       	push	r26
     6b4:	bf 93       	push	r27
     6b6:	ef 93       	push	r30
     6b8:	ff 93       	push	r31
     6ba:	a9 e9       	ldi	r26, 0x99	; 153
     6bc:	ba e2       	ldi	r27, 0x2A	; 42
     6be:	ec 91       	ld	r30, X
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	8e 0f       	add	r24, r30
     6c4:	8c 93       	st	X, r24
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	ea 5e       	subi	r30, 0xEA	; 234
     6ca:	f5 4d       	sbci	r31, 0xD5	; 213
     6cc:	90 81       	ld	r25, Z
     6ce:	90 93 62 08 	sts	0x0862, r25	; 0x800862 <__TEXT_REGION_LENGTH__+0x7f4862>
     6d2:	90 91 98 2a 	lds	r25, 0x2A98	; 0x802a98 <send3_buf+0x82>
     6d6:	89 17       	cp	r24, r25
     6d8:	40 f0       	brcs	.+16     	; 0x6ea <__vector_38+0x46>
     6da:	e0 e6       	ldi	r30, 0x60	; 96
     6dc:	f8 e0       	ldi	r31, 0x08	; 8
     6de:	85 81       	ldd	r24, Z+5	; 0x05
     6e0:	8f 7d       	andi	r24, 0xDF	; 223
     6e2:	85 83       	std	Z+5, r24	; 0x05
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	80 93 9a 2a 	sts	0x2A9A, r24	; 0x802a9a <send3_buf+0x84>
     6ea:	ff 91       	pop	r31
     6ec:	ef 91       	pop	r30
     6ee:	bf 91       	pop	r27
     6f0:	af 91       	pop	r26
     6f2:	9f 91       	pop	r25
     6f4:	8f 91       	pop	r24
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <convert_ds2iso>:
     700:	fb 01       	movw	r30, r22
     702:	20 81       	ld	r18, Z
     704:	1f 92       	push	r1
     706:	2f 93       	push	r18
     708:	21 81       	ldd	r18, Z+1	; 0x01
     70a:	1f 92       	push	r1
     70c:	2f 93       	push	r18
     70e:	22 81       	ldd	r18, Z+2	; 0x02
     710:	1f 92       	push	r1
     712:	2f 93       	push	r18
     714:	24 81       	ldd	r18, Z+4	; 0x04
     716:	1f 92       	push	r1
     718:	2f 93       	push	r18
     71a:	25 81       	ldd	r18, Z+5	; 0x05
     71c:	1f 92       	push	r1
     71e:	2f 93       	push	r18
     720:	26 81       	ldd	r18, Z+6	; 0x06
     722:	1f 92       	push	r1
     724:	2f 93       	push	r18
     726:	2e ed       	ldi	r18, 0xDE	; 222
     728:	37 e5       	ldi	r19, 0x57	; 87
     72a:	3f 93       	push	r19
     72c:	2f 93       	push	r18
     72e:	9f 93       	push	r25
     730:	8f 93       	push	r24
     732:	0e 94 c5 08 	call	0x118a	; 0x118a <sprintf>
     736:	8d b7       	in	r24, 0x3d	; 61
     738:	9e b7       	in	r25, 0x3e	; 62
     73a:	40 96       	adiw	r24, 0x10	; 16
     73c:	8d bf       	out	0x3d, r24	; 61
     73e:	9e bf       	out	0x3e, r25	; 62
     740:	08 95       	ret

00000742 <read_DS3231>:
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	0f 93       	push	r16
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	7b 01       	movw	r14, r22
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     756:	88 23       	and	r24, r24
     758:	21 f0       	breq	.+8      	; 0x762 <read_DS3231+0x20>
     75a:	97 e0       	ldi	r25, 0x07	; 7
     75c:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     760:	25 c0       	rjmp	.+74     	; 0x7ac <read_DS3231+0x6a>
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     768:	88 23       	and	r24, r24
     76a:	21 f0       	breq	.+8      	; 0x774 <read_DS3231+0x32>
     76c:	97 e0       	ldi	r25, 0x07	; 7
     76e:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     772:	1c c0       	rjmp	.+56     	; 0x7ac <read_DS3231+0x6a>
     774:	61 e0       	ldi	r22, 0x01	; 1
     776:	80 ed       	ldi	r24, 0xD0	; 208
     778:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     77c:	88 23       	and	r24, r24
     77e:	21 f0       	breq	.+8      	; 0x788 <read_DS3231+0x46>
     780:	97 e0       	ldi	r25, 0x07	; 7
     782:	90 93 a4 08 	sts	0x08A4, r25	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     786:	12 c0       	rjmp	.+36     	; 0x7ac <read_DS3231+0x6a>
     788:	e7 01       	movw	r28, r14
     78a:	87 01       	movw	r16, r14
     78c:	0a 5f       	subi	r16, 0xFA	; 250
     78e:	1f 4f       	sbci	r17, 0xFF	; 255
     790:	0e 94 b8 00 	call	0x170	; 0x170 <read_TWI>
     794:	89 93       	st	Y+, r24
     796:	c0 17       	cp	r28, r16
     798:	d1 07       	cpc	r29, r17
     79a:	d1 f7       	brne	.-12     	; 0x790 <read_DS3231+0x4e>
     79c:	0e 94 cc 00 	call	0x198	; 0x198 <readlast_TWI>
     7a0:	f7 01       	movw	r30, r14
     7a2:	86 83       	std	Z+6, r24	; 0x06
     7a4:	87 e0       	ldi	r24, 0x07	; 7
     7a6:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	08 95       	ret

000007ba <get_time>:
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	cd b7       	in	r28, 0x3d	; 61
     7c4:	de b7       	in	r29, 0x3e	; 62
     7c6:	27 97       	sbiw	r28, 0x07	; 7
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	de bf       	out	0x3e, r29	; 62
     7cc:	8c 01       	movw	r16, r24
     7ce:	be 01       	movw	r22, r28
     7d0:	6f 5f       	subi	r22, 0xFF	; 255
     7d2:	7f 4f       	sbci	r23, 0xFF	; 255
     7d4:	80 ed       	ldi	r24, 0xD0	; 208
     7d6:	0e 94 a1 03 	call	0x742	; 0x742 <read_DS3231>
     7da:	88 23       	and	r24, r24
     7dc:	49 f0       	breq	.+18     	; 0x7f0 <get_time+0x36>
     7de:	92 e1       	ldi	r25, 0x12	; 18
     7e0:	ef ef       	ldi	r30, 0xFF	; 255
     7e2:	f7 e5       	ldi	r31, 0x57	; 87
     7e4:	d8 01       	movw	r26, r16
     7e6:	01 90       	ld	r0, Z+
     7e8:	0d 92       	st	X+, r0
     7ea:	9a 95       	dec	r25
     7ec:	e1 f7       	brne	.-8      	; 0x7e6 <get_time+0x2c>
     7ee:	07 c0       	rjmp	.+14     	; 0x7fe <get_time+0x44>
     7f0:	be 01       	movw	r22, r28
     7f2:	6f 5f       	subi	r22, 0xFF	; 255
     7f4:	7f 4f       	sbci	r23, 0xFF	; 255
     7f6:	c8 01       	movw	r24, r16
     7f8:	0e 94 80 03 	call	0x700	; 0x700 <convert_ds2iso>
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	27 96       	adiw	r28, 0x07	; 7
     800:	cd bf       	out	0x3d, r28	; 61
     802:	de bf       	out	0x3e, r29	; 62
     804:	df 91       	pop	r29
     806:	cf 91       	pop	r28
     808:	1f 91       	pop	r17
     80a:	0f 91       	pop	r16
     80c:	08 95       	ret

0000080e <checksum_NMEA>:
     80e:	ef 92       	push	r14
     810:	ff 92       	push	r15
     812:	0f 93       	push	r16
     814:	1f 93       	push	r17
     816:	cf 93       	push	r28
     818:	df 93       	push	r29
     81a:	cd b7       	in	r28, 0x3d	; 61
     81c:	de b7       	in	r29, 0x3e	; 62
     81e:	2e 97       	sbiw	r28, 0x0e	; 14
     820:	cd bf       	out	0x3d, r28	; 61
     822:	de bf       	out	0x3e, r29	; 62
     824:	8c 01       	movw	r16, r24
     826:	88 e0       	ldi	r24, 0x08	; 8
     828:	e1 e1       	ldi	r30, 0x11	; 17
     82a:	f8 e5       	ldi	r31, 0x58	; 88
     82c:	de 01       	movw	r26, r28
     82e:	11 96       	adiw	r26, 0x01	; 1
     830:	01 90       	ld	r0, Z+
     832:	0d 92       	st	X+, r0
     834:	8a 95       	dec	r24
     836:	e1 f7       	brne	.-8      	; 0x830 <checksum_NMEA+0x22>
     838:	f8 01       	movw	r30, r16
     83a:	01 90       	ld	r0, Z+
     83c:	00 20       	and	r0, r0
     83e:	e9 f7       	brne	.-6      	; 0x83a <checksum_NMEA+0x2c>
     840:	31 97       	sbiw	r30, 0x01	; 1
     842:	3e 2f       	mov	r19, r30
     844:	30 1b       	sub	r19, r16
     846:	32 30       	cpi	r19, 0x02	; 2
     848:	50 f0       	brcs	.+20     	; 0x85e <checksum_NMEA+0x50>
     84a:	f8 01       	movw	r30, r16
     84c:	31 96       	adiw	r30, 0x01	; 1
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	21 91       	ld	r18, Z+
     854:	92 27       	eor	r25, r18
     856:	8f 5f       	subi	r24, 0xFF	; 255
     858:	38 13       	cpse	r19, r24
     85a:	fb cf       	rjmp	.-10     	; 0x852 <checksum_NMEA+0x44>
     85c:	01 c0       	rjmp	.+2      	; 0x860 <checksum_NMEA+0x52>
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	1f 92       	push	r1
     862:	9f 93       	push	r25
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	9f 93       	push	r25
     86a:	8f 93       	push	r24
     86c:	7e 01       	movw	r14, r28
     86e:	89 e0       	ldi	r24, 0x09	; 9
     870:	e8 0e       	add	r14, r24
     872:	f1 1c       	adc	r15, r1
     874:	ff 92       	push	r15
     876:	ef 92       	push	r14
     878:	0e 94 c5 08 	call	0x118a	; 0x118a <sprintf>
     87c:	b7 01       	movw	r22, r14
     87e:	c8 01       	movw	r24, r16
     880:	0e 94 b3 08 	call	0x1166	; 0x1166 <strcat>
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	2e 96       	adiw	r28, 0x0e	; 14
     892:	cd bf       	out	0x3d, r28	; 61
     894:	de bf       	out	0x3e, r29	; 62
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	ff 90       	pop	r15
     8a0:	ef 90       	pop	r14
     8a2:	08 95       	ret

000008a4 <get_EOD>:
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	cd b7       	in	r28, 0x3d	; 61
     8aa:	de b7       	in	r29, 0x3e	; 62
     8ac:	2c 97       	sbiw	r28, 0x0c	; 12
     8ae:	cd bf       	out	0x3d, r28	; 61
     8b0:	de bf       	out	0x3e, r29	; 62
     8b2:	2c e0       	ldi	r18, 0x0C	; 12
     8b4:	e9 e1       	ldi	r30, 0x19	; 25
     8b6:	f8 e5       	ldi	r31, 0x58	; 88
     8b8:	de 01       	movw	r26, r28
     8ba:	11 96       	adiw	r26, 0x01	; 1
     8bc:	01 90       	ld	r0, Z+
     8be:	0d 92       	st	X+, r0
     8c0:	2a 95       	dec	r18
     8c2:	e1 f7       	brne	.-8      	; 0x8bc <get_EOD+0x18>
     8c4:	be 01       	movw	r22, r28
     8c6:	6f 5f       	subi	r22, 0xFF	; 255
     8c8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ca:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
     8ce:	2c 96       	adiw	r28, 0x0c	; 12
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	08 95       	ret

000008da <get_ERR>:
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	cd b7       	in	r28, 0x3d	; 61
     8e0:	de b7       	in	r29, 0x3e	; 62
     8e2:	2c 97       	sbiw	r28, 0x0c	; 12
     8e4:	cd bf       	out	0x3d, r28	; 61
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	2c e0       	ldi	r18, 0x0C	; 12
     8ea:	e5 e2       	ldi	r30, 0x25	; 37
     8ec:	f8 e5       	ldi	r31, 0x58	; 88
     8ee:	de 01       	movw	r26, r28
     8f0:	11 96       	adiw	r26, 0x01	; 1
     8f2:	01 90       	ld	r0, Z+
     8f4:	0d 92       	st	X+, r0
     8f6:	2a 95       	dec	r18
     8f8:	e1 f7       	brne	.-8      	; 0x8f2 <get_ERR+0x18>
     8fa:	be 01       	movw	r22, r28
     8fc:	6f 5f       	subi	r22, 0xFF	; 255
     8fe:	7f 4f       	sbci	r23, 0xFF	; 255
     900:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
     904:	2c 96       	adiw	r28, 0x0c	; 12
     906:	cd bf       	out	0x3d, r28	; 61
     908:	de bf       	out	0x3e, r29	; 62
     90a:	df 91       	pop	r29
     90c:	cf 91       	pop	r28
     90e:	08 95       	ret

00000910 <write_OLED>:
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	d6 2f       	mov	r29, r22
     916:	c4 2f       	mov	r28, r20
     918:	60 e0       	ldi	r22, 0x00	; 0
     91a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <start_TWI>
     91e:	8d 2f       	mov	r24, r29
     920:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     924:	8c 2f       	mov	r24, r28
     926:	0e 94 01 01 	call	0x202	; 0x202 <write_TWI>
     92a:	87 e0       	ldi	r24, 0x07	; 7
     92c:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	08 95       	ret

00000936 <init_OLED>:
     936:	cf 93       	push	r28
     938:	81 11       	cpse	r24, r1
     93a:	0d c0       	rjmp	.+26     	; 0x956 <init_OLED+0x20>
     93c:	e0 e8       	ldi	r30, 0x80	; 128
     93e:	f4 e0       	ldi	r31, 0x04	; 4
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	86 83       	std	Z+6, r24	; 0x06
     944:	81 83       	std	Z+1, r24	; 0x01
     946:	a1 e4       	ldi	r26, 0x41	; 65
     948:	b3 e0       	ldi	r27, 0x03	; 3
     94a:	11 97       	sbiw	r26, 0x01	; 1
     94c:	f1 f7       	brne	.-4      	; 0x94a <init_OLED+0x14>
     94e:	00 00       	nop
     950:	85 83       	std	Z+5, r24	; 0x05
     952:	c8 e7       	ldi	r28, 0x78	; 120
     954:	0c c0       	rjmp	.+24     	; 0x96e <init_OLED+0x38>
     956:	e0 e8       	ldi	r30, 0x80	; 128
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	82 e0       	ldi	r24, 0x02	; 2
     95c:	86 83       	std	Z+6, r24	; 0x06
     95e:	81 83       	std	Z+1, r24	; 0x01
     960:	a1 e4       	ldi	r26, 0x41	; 65
     962:	b3 e0       	ldi	r27, 0x03	; 3
     964:	11 97       	sbiw	r26, 0x01	; 1
     966:	f1 f7       	brne	.-4      	; 0x964 <init_OLED+0x2e>
     968:	00 00       	nop
     96a:	85 83       	std	Z+5, r24	; 0x05
     96c:	ca e7       	ldi	r28, 0x7A	; 122
     96e:	4a e2       	ldi	r20, 0x2A	; 42
     970:	60 e0       	ldi	r22, 0x00	; 0
     972:	8c 2f       	mov	r24, r28
     974:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     978:	41 e7       	ldi	r20, 0x71	; 113
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	8c 2f       	mov	r24, r28
     97e:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     982:	4c e5       	ldi	r20, 0x5C	; 92
     984:	60 e4       	ldi	r22, 0x40	; 64
     986:	8c 2f       	mov	r24, r28
     988:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     98c:	48 e2       	ldi	r20, 0x28	; 40
     98e:	60 e0       	ldi	r22, 0x00	; 0
     990:	8c 2f       	mov	r24, r28
     992:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     996:	48 e0       	ldi	r20, 0x08	; 8
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	8c 2f       	mov	r24, r28
     99c:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9a0:	4a e2       	ldi	r20, 0x2A	; 42
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	8c 2f       	mov	r24, r28
     9a6:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9aa:	49 e7       	ldi	r20, 0x79	; 121
     9ac:	60 e0       	ldi	r22, 0x00	; 0
     9ae:	8c 2f       	mov	r24, r28
     9b0:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9b4:	45 ed       	ldi	r20, 0xD5	; 213
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	8c 2f       	mov	r24, r28
     9ba:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9be:	40 e7       	ldi	r20, 0x70	; 112
     9c0:	60 e0       	ldi	r22, 0x00	; 0
     9c2:	8c 2f       	mov	r24, r28
     9c4:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9c8:	48 e7       	ldi	r20, 0x78	; 120
     9ca:	60 e0       	ldi	r22, 0x00	; 0
     9cc:	8c 2f       	mov	r24, r28
     9ce:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9d2:	48 e0       	ldi	r20, 0x08	; 8
     9d4:	60 e0       	ldi	r22, 0x00	; 0
     9d6:	8c 2f       	mov	r24, r28
     9d8:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9dc:	46 e0       	ldi	r20, 0x06	; 6
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	8c 2f       	mov	r24, r28
     9e2:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9e6:	42 e7       	ldi	r20, 0x72	; 114
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	8c 2f       	mov	r24, r28
     9ec:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9f0:	40 e0       	ldi	r20, 0x00	; 0
     9f2:	60 e4       	ldi	r22, 0x40	; 64
     9f4:	8c 2f       	mov	r24, r28
     9f6:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     9fa:	4a e2       	ldi	r20, 0x2A	; 42
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	8c 2f       	mov	r24, r28
     a00:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a04:	49 e7       	ldi	r20, 0x79	; 121
     a06:	60 e0       	ldi	r22, 0x00	; 0
     a08:	8c 2f       	mov	r24, r28
     a0a:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a0e:	4a ed       	ldi	r20, 0xDA	; 218
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	8c 2f       	mov	r24, r28
     a14:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a18:	40 e0       	ldi	r20, 0x00	; 0
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	8c 2f       	mov	r24, r28
     a1e:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a22:	4c ed       	ldi	r20, 0xDC	; 220
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	8c 2f       	mov	r24, r28
     a28:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a2c:	40 e0       	ldi	r20, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	8c 2f       	mov	r24, r28
     a32:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a36:	41 e8       	ldi	r20, 0x81	; 129
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	8c 2f       	mov	r24, r28
     a3c:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a40:	4f e7       	ldi	r20, 0x7F	; 127
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	8c 2f       	mov	r24, r28
     a46:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a4a:	49 ed       	ldi	r20, 0xD9	; 217
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	8c 2f       	mov	r24, r28
     a50:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a54:	41 ef       	ldi	r20, 0xF1	; 241
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	8c 2f       	mov	r24, r28
     a5a:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a5e:	4b ed       	ldi	r20, 0xDB	; 219
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	8c 2f       	mov	r24, r28
     a64:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a68:	40 e4       	ldi	r20, 0x40	; 64
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	8c 2f       	mov	r24, r28
     a6e:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a72:	48 e7       	ldi	r20, 0x78	; 120
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	8c 2f       	mov	r24, r28
     a78:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a7c:	48 e2       	ldi	r20, 0x28	; 40
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	8c 2f       	mov	r24, r28
     a82:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a86:	41 e0       	ldi	r20, 0x01	; 1
     a88:	60 e0       	ldi	r22, 0x00	; 0
     a8a:	8c 2f       	mov	r24, r28
     a8c:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a90:	40 e8       	ldi	r20, 0x80	; 128
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	8c 2f       	mov	r24, r28
     a96:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     a9a:	4c e0       	ldi	r20, 0x0C	; 12
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	8c 2f       	mov	r24, r28
     aa0:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     aa4:	ba e6       	ldi	r27, 0x6A	; 106
     aa6:	24 e0       	ldi	r18, 0x04	; 4
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	b1 50       	subi	r27, 0x01	; 1
     aac:	20 40       	sbci	r18, 0x00	; 0
     aae:	80 40       	sbci	r24, 0x00	; 0
     ab0:	e1 f7       	brne	.-8      	; 0xaaa <init_OLED+0x174>
     ab2:	00 c0       	rjmp	.+0      	; 0xab4 <init_OLED+0x17e>
     ab4:	cf 91       	pop	r28
     ab6:	08 95       	ret

00000ab8 <writestr_OLED>:
     ab8:	cf 92       	push	r12
     aba:	df 92       	push	r13
     abc:	ff 92       	push	r15
     abe:	0f 93       	push	r16
     ac0:	1f 93       	push	r17
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	e2 97       	sbiw	r28, 0x32	; 50
     acc:	cd bf       	out	0x3d, r28	; 61
     ace:	de bf       	out	0x3e, r29	; 62
     ad0:	14 2f       	mov	r17, r20
     ad2:	91 e1       	ldi	r25, 0x11	; 17
     ad4:	e1 e3       	ldi	r30, 0x31	; 49
     ad6:	f8 e5       	ldi	r31, 0x58	; 88
     ad8:	de 01       	movw	r26, r28
     ada:	92 96       	adiw	r26, 0x22	; 34
     adc:	01 90       	ld	r0, Z+
     ade:	0d 92       	st	X+, r0
     ae0:	9a 95       	dec	r25
     ae2:	e1 f7       	brne	.-8      	; 0xadc <writestr_OLED+0x24>
     ae4:	88 23       	and	r24, r24
     ae6:	29 f0       	breq	.+10     	; 0xaf2 <writestr_OLED+0x3a>
     ae8:	0f 2e       	mov	r0, r31
     aea:	fa e7       	ldi	r31, 0x7A	; 122
     aec:	ff 2e       	mov	r15, r31
     aee:	f0 2d       	mov	r31, r0
     af0:	04 c0       	rjmp	.+8      	; 0xafa <writestr_OLED+0x42>
     af2:	0f 2e       	mov	r0, r31
     af4:	f8 e7       	ldi	r31, 0x78	; 120
     af6:	ff 2e       	mov	r15, r31
     af8:	f0 2d       	mov	r31, r0
     afa:	ce 01       	movw	r24, r28
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
     b02:	be 01       	movw	r22, r28
     b04:	6e 5d       	subi	r22, 0xDE	; 222
     b06:	7f 4f       	sbci	r23, 0xFF	; 255
     b08:	ce 01       	movw	r24, r28
     b0a:	01 96       	adiw	r24, 0x01	; 1
     b0c:	0e 94 b3 08 	call	0x1166	; 0x1166 <strcat>
     b10:	11 30       	cpi	r17, 0x01	; 1
     b12:	31 f4       	brne	.+12     	; 0xb20 <writestr_OLED+0x68>
     b14:	40 e8       	ldi	r20, 0x80	; 128
     b16:	60 e0       	ldi	r22, 0x00	; 0
     b18:	8f 2d       	mov	r24, r15
     b1a:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     b1e:	11 c0       	rjmp	.+34     	; 0xb42 <writestr_OLED+0x8a>
     b20:	40 ec       	ldi	r20, 0xC0	; 192
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	8f 2d       	mov	r24, r15
     b26:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     b2a:	0b c0       	rjmp	.+22     	; 0xb42 <writestr_OLED+0x8a>
     b2c:	f8 01       	movw	r30, r16
     b2e:	41 91       	ld	r20, Z+
     b30:	8f 01       	movw	r16, r30
     b32:	60 e4       	ldi	r22, 0x40	; 64
     b34:	8f 2d       	mov	r24, r15
     b36:	0e 94 88 04 	call	0x910	; 0x910 <write_OLED>
     b3a:	0c 15       	cp	r16, r12
     b3c:	1d 05       	cpc	r17, r13
     b3e:	b1 f7       	brne	.-20     	; 0xb2c <writestr_OLED+0x74>
     b40:	08 c0       	rjmp	.+16     	; 0xb52 <writestr_OLED+0x9a>
     b42:	8e 01       	movw	r16, r28
     b44:	0f 5f       	subi	r16, 0xFF	; 255
     b46:	1f 4f       	sbci	r17, 0xFF	; 255
     b48:	6e 01       	movw	r12, r28
     b4a:	f1 e1       	ldi	r31, 0x11	; 17
     b4c:	cf 0e       	add	r12, r31
     b4e:	d1 1c       	adc	r13, r1
     b50:	ed cf       	rjmp	.-38     	; 0xb2c <writestr_OLED+0x74>
     b52:	e2 96       	adiw	r28, 0x32	; 50
     b54:	cd bf       	out	0x3d, r28	; 61
     b56:	de bf       	out	0x3e, r29	; 62
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	1f 91       	pop	r17
     b5e:	0f 91       	pop	r16
     b60:	ff 90       	pop	r15
     b62:	df 90       	pop	r13
     b64:	cf 90       	pop	r12
     b66:	08 95       	ret

00000b68 <get_BOOTTIME>:
void update_VERSION(void);

void get_BOOTTIME(char *boottime)
{

	eeprom_read_block((void *)boottime, (const void *)BOOTTIMEADDR, BOOTTIMESIZE);
     b68:	45 e1       	ldi	r20, 0x15	; 21
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	6b e0       	ldi	r22, 0x0B	; 11
     b6e:	70 e0       	ldi	r23, 0x00	; 0
     b70:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <eeprom_read_block>
     b74:	08 95       	ret

00000b76 <get_VERSION>:
}

void get_VERSION(char *version)
{

	eeprom_read_block((void *)version, (const void *)VERSIONADDR, VERSIONSIZE);
     b76:	4b e0       	ldi	r20, 0x0B	; 11
     b78:	50 e0       	ldi	r21, 0x00	; 0
     b7a:	60 e0       	ldi	r22, 0x00	; 0
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <eeprom_read_block>
     b82:	08 95       	ret

00000b84 <update_BOOTTIME>:
	update_BOOTTIME();
	update_VERSION();
}

void update_BOOTTIME(void)
{
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	cd b7       	in	r28, 0x3d	; 61
     b8a:	de b7       	in	r29, 0x3e	; 62
     b8c:	65 97       	sbiw	r28, 0x15	; 21
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	de bf       	out	0x3e, r29	; 62

	char boottime[21];

//	get_time(boottime);
	eeprom_update_block((const void *)boottime, (void *)BOOTTIMEADDR, BOOTTIMESIZE);
     b92:	45 e1       	ldi	r20, 0x15	; 21
     b94:	50 e0       	ldi	r21, 0x00	; 0
     b96:	6b e0       	ldi	r22, 0x0B	; 11
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	ce 01       	movw	r24, r28
     b9c:	01 96       	adiw	r24, 0x01	; 1
     b9e:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <eeprom_update_block>

}
     ba2:	65 96       	adiw	r28, 0x15	; 21
     ba4:	cd bf       	out	0x3d, r28	; 61
     ba6:	de bf       	out	0x3e, r29	; 62
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	08 95       	ret

00000bae <update_VERSION>:

void update_VERSION(void)
{
     bae:	cf 93       	push	r28
     bb0:	df 93       	push	r29
     bb2:	cd b7       	in	r28, 0x3d	; 61
     bb4:	de b7       	in	r29, 0x3e	; 62
     bb6:	2b 97       	sbiw	r28, 0x0b	; 11
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	de bf       	out	0x3e, r29	; 62

	char version[11];

	strcpy(version, VERSION);
     bbc:	8b e0       	ldi	r24, 0x0B	; 11
     bbe:	e2 e4       	ldi	r30, 0x42	; 66
     bc0:	f8 e5       	ldi	r31, 0x58	; 88
     bc2:	de 01       	movw	r26, r28
     bc4:	11 96       	adiw	r26, 0x01	; 1
     bc6:	01 90       	ld	r0, Z+
     bc8:	0d 92       	st	X+, r0
     bca:	8a 95       	dec	r24
     bcc:	e1 f7       	brne	.-8      	; 0xbc6 <update_VERSION+0x18>
	eeprom_update_block((const void *)version, (void *)VERSIONADDR, VERSIONSIZE);
     bce:	4b e0       	ldi	r20, 0x0B	; 11
     bd0:	50 e0       	ldi	r21, 0x00	; 0
     bd2:	60 e0       	ldi	r22, 0x00	; 0
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	ce 01       	movw	r24, r28
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <eeprom_update_block>

}
     bde:	2b 96       	adiw	r28, 0x0b	; 11
     be0:	cd bf       	out	0x3d, r28	; 61
     be2:	de bf       	out	0x3e, r29	; 62
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	08 95       	ret

00000bea <init_EEPROM>:

}

void init_EEPROM(void)
{
	update_BOOTTIME();
     bea:	0e 94 c2 05 	call	0xb84	; 0xb84 <update_BOOTTIME>
	update_VERSION();
     bee:	0e 94 d7 05 	call	0xbae	; 0xbae <update_VERSION>
     bf2:	08 95       	ret

00000bf4 <reboot>:
void reboot(void);

void reboot(void)
{

	CPU_CCP = CCP_IOREG_gc;
     bf4:	88 ed       	ldi	r24, 0xD8	; 216
     bf6:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = WDT_PERIOD_8CLK_gc;
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f4100>
     bfe:	08 95       	ret

00000c00 <close>:
uint8_t close(char *ptr)
{

	ptr++;

	switch (*ptr) {
     c00:	fc 01       	movw	r30, r24
     c02:	81 81       	ldd	r24, Z+1	; 0x01
     c04:	8c 36       	cpi	r24, 0x6C	; 108
     c06:	99 f0       	breq	.+38     	; 0xc2e <close+0x2e>
     c08:	18 f4       	brcc	.+6      	; 0xc10 <close+0x10>
     c0a:	82 36       	cpi	r24, 0x62	; 98
     c0c:	31 f0       	breq	.+12     	; 0xc1a <close+0x1a>
     c0e:	21 c0       	rjmp	.+66     	; 0xc52 <close+0x52>
     c10:	82 37       	cpi	r24, 0x72	; 114
     c12:	99 f0       	breq	.+38     	; 0xc3a <close+0x3a>
     c14:	83 37       	cpi	r24, 0x73	; 115
     c16:	b9 f0       	breq	.+46     	; 0xc46 <close+0x46>
     c18:	1c c0       	rjmp	.+56     	; 0xc52 <close+0x52>

		case 'b':
			set_valves(LEFTBM, LEFTCLOSE);
     c1a:	6a ee       	ldi	r22, 0xEA	; 234
     c1c:	84 e4       	ldi	r24, 0x44	; 68
     c1e:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			set_valves(RIGHTBM, RIGHTCLOSE);
     c22:	66 ee       	ldi	r22, 0xE6	; 230
     c24:	88 e8       	ldi	r24, 0x88	; 136
     c26:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     c2a:	80 e0       	ldi	r24, 0x00	; 0
	switch (*ptr) {

		case 'b':
			set_valves(LEFTBM, LEFTCLOSE);
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;
     c2c:	08 95       	ret

		case 'l':
			set_valves(LEFTBM, LEFTCLOSE);
     c2e:	6a ee       	ldi	r22, 0xEA	; 234
     c30:	84 e4       	ldi	r24, 0x44	; 68
     c32:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     c36:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;

		case 'l':
			set_valves(LEFTBM, LEFTCLOSE);
			break;
     c38:	08 95       	ret
			
		case 'r':
			set_valves(RIGHTBM, RIGHTCLOSE);
     c3a:	66 ee       	ldi	r22, 0xE6	; 230
     c3c:	88 e8       	ldi	r24, 0x88	; 136
     c3e:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     c42:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(LEFTBM, LEFTCLOSE);
			break;
			
		case 'r':
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;
     c44:	08 95       	ret

		case 's':										// Close shutter
			set_valves(SHUTTERBM, SHUTTERCLOSE);
     c46:	6c ee       	ldi	r22, 0xEC	; 236
     c48:	82 e2       	ldi	r24, 0x22	; 34
     c4a:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			return(1);
			break;

	}

	return(0);
     c4e:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTCLOSE);
			break;

		case 's':										// Close shutter
			set_valves(SHUTTERBM, SHUTTERCLOSE);
			break;
     c50:	08 95       	ret

		default:
			return(1);
     c52:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     c54:	08 95       	ret

00000c56 <open>:

uint8_t open(char *ptr)
{

	ptr++;
	switch (*ptr) {
     c56:	fc 01       	movw	r30, r24
     c58:	81 81       	ldd	r24, Z+1	; 0x01
     c5a:	8c 36       	cpi	r24, 0x6C	; 108
     c5c:	99 f0       	breq	.+38     	; 0xc84 <open+0x2e>
     c5e:	18 f4       	brcc	.+6      	; 0xc66 <open+0x10>
     c60:	82 36       	cpi	r24, 0x62	; 98
     c62:	31 f0       	breq	.+12     	; 0xc70 <open+0x1a>
     c64:	21 c0       	rjmp	.+66     	; 0xca8 <open+0x52>
     c66:	82 37       	cpi	r24, 0x72	; 114
     c68:	99 f0       	breq	.+38     	; 0xc90 <open+0x3a>
     c6a:	83 37       	cpi	r24, 0x73	; 115
     c6c:	b9 f0       	breq	.+46     	; 0xc9c <open+0x46>
     c6e:	1c c0       	rjmp	.+56     	; 0xca8 <open+0x52>

		case 'b':
			set_valves(LEFTBM, LEFTOPEN);
     c70:	6e ea       	ldi	r22, 0xAE	; 174
     c72:	84 e4       	ldi	r24, 0x44	; 68
     c74:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
			set_valves(RIGHTBM, RIGHTOPEN);
     c78:	6e e6       	ldi	r22, 0x6E	; 110
     c7a:	88 e8       	ldi	r24, 0x88	; 136
     c7c:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     c80:	80 e0       	ldi	r24, 0x00	; 0
	switch (*ptr) {

		case 'b':
			set_valves(LEFTBM, LEFTOPEN);
			set_valves(RIGHTBM, RIGHTOPEN);
			break;
     c82:	08 95       	ret

		case 'l':
			set_valves(LEFTBM, LEFTOPEN);
     c84:	6e ea       	ldi	r22, 0xAE	; 174
     c86:	84 e4       	ldi	r24, 0x44	; 68
     c88:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     c8c:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTOPEN);
			break;

		case 'l':
			set_valves(LEFTBM, LEFTOPEN);
			break;
     c8e:	08 95       	ret
		
		case 'r':
			set_valves(RIGHTBM, RIGHTOPEN);
     c90:	6e e6       	ldi	r22, 0x6E	; 110
     c92:	88 e8       	ldi	r24, 0x88	; 136
     c94:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     c98:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(LEFTBM, LEFTOPEN);
			break;
		
		case 'r':
			set_valves(RIGHTBM, RIGHTOPEN);
			break;
     c9a:	08 95       	ret

		case 's':
			set_valves(SHUTTERBM, SHUTTEROPEN);
     c9c:	6e ec       	ldi	r22, 0xCE	; 206
     c9e:	82 e2       	ldi	r24, 0x22	; 34
     ca0:	0e 94 75 01 	call	0x2ea	; 0x2ea <set_valves>
		default:
			return(1);

	}

	return(0);
     ca4:	80 e0       	ldi	r24, 0x00	; 0
			set_valves(RIGHTBM, RIGHTOPEN);
			break;

		case 's':
			set_valves(SHUTTERBM, SHUTTEROPEN);
			break;
     ca6:	08 95       	ret

		default:
			return(1);
     ca8:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     caa:	08 95       	ret

00000cac <report>:

uint8_t report(char *ptr)
{
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	c2 59       	subi	r28, 0x92	; 146
     cba:	d1 09       	sbc	r29, r1
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	de bf       	out	0x3e, r29	; 62

	char outbuf[81], isotime[21], version[11];
	const char format_BTM[]="$S%dBTM,%s";
     cc0:	2b e0       	ldi	r18, 0x0B	; 11
     cc2:	ed e4       	ldi	r30, 0x4D	; 77
     cc4:	f8 e5       	ldi	r31, 0x58	; 88
     cc6:	de 01       	movw	r26, r28
     cc8:	ae 58       	subi	r26, 0x8E	; 142
     cca:	bf 4f       	sbci	r27, 0xFF	; 255
     ccc:	01 90       	ld	r0, Z+
     cce:	0d 92       	st	X+, r0
     cd0:	2a 95       	dec	r18
     cd2:	e1 f7       	brne	.-8      	; 0xccc <report+0x20>
	const char format_TIM[]="$S%dTIM,%s";
     cd4:	2b e0       	ldi	r18, 0x0B	; 11
     cd6:	e8 e5       	ldi	r30, 0x58	; 88
     cd8:	f8 e5       	ldi	r31, 0x58	; 88
     cda:	de 01       	movw	r26, r28
     cdc:	a3 58       	subi	r26, 0x83	; 131
     cde:	bf 4f       	sbci	r27, 0xFF	; 255
     ce0:	01 90       	ld	r0, Z+
     ce2:	0d 92       	st	X+, r0
     ce4:	2a 95       	dec	r18
     ce6:	e1 f7       	brne	.-8      	; 0xce0 <report+0x34>
	const char format_VER[]="$S%dVER,%s";
     ce8:	2b e0       	ldi	r18, 0x0B	; 11
     cea:	e3 e6       	ldi	r30, 0x63	; 99
     cec:	f8 e5       	ldi	r31, 0x58	; 88
     cee:	de 01       	movw	r26, r28
     cf0:	a8 57       	subi	r26, 0x78	; 120
     cf2:	bf 4f       	sbci	r27, 0xFF	; 255
     cf4:	01 90       	ld	r0, Z+
     cf6:	0d 92       	st	X+, r0
     cf8:	2a 95       	dec	r18
     cfa:	e1 f7       	brne	.-8      	; 0xcf4 <report+0x48>

	ptr++;

	switch(*ptr++) {
     cfc:	fc 01       	movw	r30, r24
     cfe:	81 81       	ldd	r24, Z+1	; 0x01
     d00:	84 37       	cpi	r24, 0x74	; 116
     d02:	f1 f1       	breq	.+124    	; 0xd80 <report+0xd4>
     d04:	86 37       	cpi	r24, 0x76	; 118
     d06:	09 f4       	brne	.+2      	; 0xd0a <report+0x5e>
     d08:	73 c0       	rjmp	.+230    	; 0xdf0 <report+0x144>
     d0a:	82 36       	cpi	r24, 0x62	; 98
     d0c:	09 f0       	breq	.+2      	; 0xd10 <report+0x64>
     d0e:	a8 c0       	rjmp	.+336    	; 0xe60 <report+0x1b4>

		case 'b':					// Boot time
			get_BOOTTIME(isotime);
     d10:	8e 01       	movw	r16, r28
     d12:	0e 5a       	subi	r16, 0xAE	; 174
     d14:	1f 4f       	sbci	r17, 0xFF	; 255
     d16:	c8 01       	movw	r24, r16
     d18:	0e 94 b4 05 	call	0xb68	; 0xb68 <get_BOOTTIME>
			sprintf(outbuf, format_BTM, get_specID(), isotime);
     d1c:	1f 93       	push	r17
     d1e:	0f 93       	push	r16
     d20:	1f 92       	push	r1
     d22:	82 e0       	ldi	r24, 0x02	; 2
     d24:	8f 93       	push	r24
     d26:	ce 01       	movw	r24, r28
     d28:	8e 58       	subi	r24, 0x8E	; 142
     d2a:	9f 4f       	sbci	r25, 0xFF	; 255
     d2c:	9f 93       	push	r25
     d2e:	8f 93       	push	r24
     d30:	01 55       	subi	r16, 0x51	; 81
     d32:	11 09       	sbc	r17, r1
     d34:	1f 93       	push	r17
     d36:	0f 93       	push	r16
     d38:	0e 94 c5 08 	call	0x118a	; 0x118a <sprintf>
			checksum_NMEA(outbuf);
     d3c:	c8 01       	movw	r24, r16
     d3e:	0e 94 07 04 	call	0x80e	; 0x80e <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     d42:	f8 01       	movw	r30, r16
     d44:	01 90       	ld	r0, Z+
     d46:	00 20       	and	r0, r0
     d48:	e9 f7       	brne	.-6      	; 0xd44 <report+0x98>
     d4a:	31 97       	sbiw	r30, 0x01	; 1
     d4c:	af 01       	movw	r20, r30
     d4e:	40 1b       	sub	r20, r16
     d50:	51 0b       	sbc	r21, r17
     d52:	b8 01       	movw	r22, r16
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

			get_EOD(outbuf);
     d5a:	c8 01       	movw	r24, r16
     d5c:	0e 94 52 04 	call	0x8a4	; 0x8a4 <get_EOD>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     d60:	f8 01       	movw	r30, r16
     d62:	01 90       	ld	r0, Z+
     d64:	00 20       	and	r0, r0
     d66:	e9 f7       	brne	.-6      	; 0xd62 <report+0xb6>
     d68:	31 97       	sbiw	r30, 0x01	; 1
     d6a:	af 01       	movw	r20, r30
     d6c:	40 1b       	sub	r20, r16
     d6e:	51 0b       	sbc	r21, r17
     d70:	b8 01       	movw	r22, r16
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     d78:	cd bf       	out	0x3d, r28	; 61
     d7a:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     d7c:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

			get_EOD(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     d7e:	71 c0       	rjmp	.+226    	; 0xe62 <report+0x1b6>

		case 't':					// Send current time on specMech clock
			get_time(isotime);
     d80:	8e 01       	movw	r16, r28
     d82:	0e 5a       	subi	r16, 0xAE	; 174
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	c8 01       	movw	r24, r16
     d88:	0e 94 dd 03 	call	0x7ba	; 0x7ba <get_time>
			sprintf(outbuf, format_TIM, get_specID(), isotime);
     d8c:	1f 93       	push	r17
     d8e:	0f 93       	push	r16
     d90:	1f 92       	push	r1
     d92:	82 e0       	ldi	r24, 0x02	; 2
     d94:	8f 93       	push	r24
     d96:	ce 01       	movw	r24, r28
     d98:	83 58       	subi	r24, 0x83	; 131
     d9a:	9f 4f       	sbci	r25, 0xFF	; 255
     d9c:	9f 93       	push	r25
     d9e:	8f 93       	push	r24
     da0:	01 55       	subi	r16, 0x51	; 81
     da2:	11 09       	sbc	r17, r1
     da4:	1f 93       	push	r17
     da6:	0f 93       	push	r16
     da8:	0e 94 c5 08 	call	0x118a	; 0x118a <sprintf>
			checksum_NMEA(outbuf);
     dac:	c8 01       	movw	r24, r16
     dae:	0e 94 07 04 	call	0x80e	; 0x80e <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     db2:	f8 01       	movw	r30, r16
     db4:	01 90       	ld	r0, Z+
     db6:	00 20       	and	r0, r0
     db8:	e9 f7       	brne	.-6      	; 0xdb4 <report+0x108>
     dba:	31 97       	sbiw	r30, 0x01	; 1
     dbc:	af 01       	movw	r20, r30
     dbe:	40 1b       	sub	r20, r16
     dc0:	51 0b       	sbc	r21, r17
     dc2:	b8 01       	movw	r22, r16
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

			get_EOD(outbuf);
     dca:	c8 01       	movw	r24, r16
     dcc:	0e 94 52 04 	call	0x8a4	; 0x8a4 <get_EOD>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     dd0:	f8 01       	movw	r30, r16
     dd2:	01 90       	ld	r0, Z+
     dd4:	00 20       	and	r0, r0
     dd6:	e9 f7       	brne	.-6      	; 0xdd2 <report+0x126>
     dd8:	31 97       	sbiw	r30, 0x01	; 1
     dda:	af 01       	movw	r20, r30
     ddc:	40 1b       	sub	r20, r16
     dde:	51 0b       	sbc	r21, r17
     de0:	b8 01       	movw	r22, r16
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     de8:	cd bf       	out	0x3d, r28	; 61
     dea:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     dec:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

			get_EOD(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     dee:	39 c0       	rjmp	.+114    	; 0xe62 <report+0x1b6>

		case 'v':
			get_VERSION(version);	// Send the specMech version
     df0:	8e 01       	movw	r16, r28
     df2:	09 59       	subi	r16, 0x99	; 153
     df4:	1f 4f       	sbci	r17, 0xFF	; 255
     df6:	c8 01       	movw	r24, r16
     df8:	0e 94 bb 05 	call	0xb76	; 0xb76 <get_VERSION>
			sprintf(outbuf, format_VER, get_specID(), version);
     dfc:	1f 93       	push	r17
     dfe:	0f 93       	push	r16
     e00:	1f 92       	push	r1
     e02:	82 e0       	ldi	r24, 0x02	; 2
     e04:	8f 93       	push	r24
     e06:	ce 01       	movw	r24, r28
     e08:	88 57       	subi	r24, 0x78	; 120
     e0a:	9f 4f       	sbci	r25, 0xFF	; 255
     e0c:	9f 93       	push	r25
     e0e:	8f 93       	push	r24
     e10:	06 56       	subi	r16, 0x66	; 102
     e12:	11 09       	sbc	r17, r1
     e14:	1f 93       	push	r17
     e16:	0f 93       	push	r16
     e18:	0e 94 c5 08 	call	0x118a	; 0x118a <sprintf>
			checksum_NMEA(outbuf);
     e1c:	c8 01       	movw	r24, r16
     e1e:	0e 94 07 04 	call	0x80e	; 0x80e <checksum_NMEA>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     e22:	f8 01       	movw	r30, r16
     e24:	01 90       	ld	r0, Z+
     e26:	00 20       	and	r0, r0
     e28:	e9 f7       	brne	.-6      	; 0xe24 <report+0x178>
     e2a:	31 97       	sbiw	r30, 0x01	; 1
     e2c:	af 01       	movw	r20, r30
     e2e:	40 1b       	sub	r20, r16
     e30:	51 0b       	sbc	r21, r17
     e32:	b8 01       	movw	r22, r16
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>

			get_EOD(outbuf);
     e3a:	c8 01       	movw	r24, r16
     e3c:	0e 94 52 04 	call	0x8a4	; 0x8a4 <get_EOD>
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
     e40:	f8 01       	movw	r30, r16
     e42:	01 90       	ld	r0, Z+
     e44:	00 20       	and	r0, r0
     e46:	e9 f7       	brne	.-6      	; 0xe42 <report+0x196>
     e48:	31 97       	sbiw	r30, 0x01	; 1
     e4a:	af 01       	movw	r20, r30
     e4c:	40 1b       	sub	r20, r16
     e4e:	51 0b       	sbc	r21, r17
     e50:	b8 01       	movw	r22, r16
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     e58:	cd bf       	out	0x3d, r28	; 61
     e5a:	de bf       	out	0x3e, r29	; 62
			return(1);
			break;

	}

	return(0);
     e5c:	80 e0       	ldi	r24, 0x00	; 0
			checksum_NMEA(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));

			get_EOD(outbuf);
			send_USART(0, (uint8_t*) outbuf, strlen(outbuf));
			break;
     e5e:	01 c0       	rjmp	.+2      	; 0xe62 <report+0x1b6>

		default:
			return(1);
     e60:	81 e0       	ldi	r24, 0x01	; 1

	}

	return(0);

}
     e62:	ce 56       	subi	r28, 0x6E	; 110
     e64:	df 4f       	sbci	r29, 0xFF	; 255
     e66:	cd bf       	out	0x3d, r28	; 61
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	08 95       	ret

00000e74 <send_prompt>:

void send_prompt(uint8_t prompt_flag)
{
     e74:	0f 93       	push	r16
     e76:	1f 93       	push	r17
     e78:	cf 93       	push	r28
     e7a:	df 93       	push	r29
     e7c:	cd b7       	in	r28, 0x3d	; 61
     e7e:	de b7       	in	r29, 0x3e	; 62
     e80:	6d 97       	sbiw	r28, 0x1d	; 29
     e82:	cd bf       	out	0x3d, r28	; 61
     e84:	de bf       	out	0x3e, r29	; 62

	const char str0[] = ">";
     e86:	2e e3       	ldi	r18, 0x3E	; 62
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	29 83       	std	Y+1, r18	; 0x01
     e8c:	3a 83       	std	Y+2, r19	; 0x02
	const char str1[] = "!";
     e8e:	21 e2       	ldi	r18, 0x21	; 33
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	2b 83       	std	Y+3, r18	; 0x03
     e94:	3c 83       	std	Y+4, r19	; 0x04

	char prompt_str[25];

	switch (prompt_flag) {
     e96:	81 30       	cpi	r24, 0x01	; 1
     e98:	d9 f0       	breq	.+54     	; 0xed0 <send_prompt+0x5c>
     e9a:	20 f0       	brcs	.+8      	; 0xea4 <send_prompt+0x30>
     e9c:	82 30       	cpi	r24, 0x02	; 2
     e9e:	09 f4       	brne	.+2      	; 0xea2 <send_prompt+0x2e>
     ea0:	4b c0       	rjmp	.+150    	; 0xf38 <send_prompt+0xc4>
     ea2:	60 c0       	rjmp	.+192    	; 0xf64 <send_prompt+0xf0>
		case 0:
			strcpy(prompt_str, str0);
     ea4:	8e 01       	movw	r16, r28
     ea6:	0b 5f       	subi	r16, 0xFB	; 251
     ea8:	1f 4f       	sbci	r17, 0xFF	; 255
     eaa:	be 01       	movw	r22, r28
     eac:	6f 5f       	subi	r22, 0xFF	; 255
     eae:	7f 4f       	sbci	r23, 0xFF	; 255
     eb0:	c8 01       	movw	r24, r16
     eb2:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     eb6:	f8 01       	movw	r30, r16
     eb8:	01 90       	ld	r0, Z+
     eba:	00 20       	and	r0, r0
     ebc:	e9 f7       	brne	.-6      	; 0xeb8 <send_prompt+0x44>
     ebe:	31 97       	sbiw	r30, 0x01	; 1
     ec0:	af 01       	movw	r20, r30
     ec2:	40 1b       	sub	r20, r16
     ec4:	51 0b       	sbc	r21, r17
     ec6:	b8 01       	movw	r22, r16
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     ece:	5f c0       	rjmp	.+190    	; 0xf8e <send_prompt+0x11a>

		case 1:
			get_ERR(prompt_str);
     ed0:	8e 01       	movw	r16, r28
     ed2:	0b 5f       	subi	r16, 0xFB	; 251
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	c8 01       	movw	r24, r16
     ed8:	0e 94 6d 04 	call	0x8da	; 0x8da <get_ERR>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     edc:	f8 01       	movw	r30, r16
     ede:	01 90       	ld	r0, Z+
     ee0:	00 20       	and	r0, r0
     ee2:	e9 f7       	brne	.-6      	; 0xede <send_prompt+0x6a>
     ee4:	31 97       	sbiw	r30, 0x01	; 1
     ee6:	af 01       	movw	r20, r30
     ee8:	40 1b       	sub	r20, r16
     eea:	51 0b       	sbc	r21, r17
     eec:	b8 01       	movw	r22, r16
     eee:	80 e0       	ldi	r24, 0x00	; 0
     ef0:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			get_EOD(prompt_str);
     ef4:	c8 01       	movw	r24, r16
     ef6:	0e 94 52 04 	call	0x8a4	; 0x8a4 <get_EOD>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     efa:	f8 01       	movw	r30, r16
     efc:	01 90       	ld	r0, Z+
     efe:	00 20       	and	r0, r0
     f00:	e9 f7       	brne	.-6      	; 0xefc <send_prompt+0x88>
     f02:	31 97       	sbiw	r30, 0x01	; 1
     f04:	af 01       	movw	r20, r30
     f06:	40 1b       	sub	r20, r16
     f08:	51 0b       	sbc	r21, r17
     f0a:	b8 01       	movw	r22, r16
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			strcpy(prompt_str, str0);
     f12:	be 01       	movw	r22, r28
     f14:	6f 5f       	subi	r22, 0xFF	; 255
     f16:	7f 4f       	sbci	r23, 0xFF	; 255
     f18:	c8 01       	movw	r24, r16
     f1a:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     f1e:	f8 01       	movw	r30, r16
     f20:	01 90       	ld	r0, Z+
     f22:	00 20       	and	r0, r0
     f24:	e9 f7       	brne	.-6      	; 0xf20 <send_prompt+0xac>
     f26:	31 97       	sbiw	r30, 0x01	; 1
     f28:	af 01       	movw	r20, r30
     f2a:	40 1b       	sub	r20, r16
     f2c:	51 0b       	sbc	r21, r17
     f2e:	b8 01       	movw	r22, r16
     f30:	80 e0       	ldi	r24, 0x00	; 0
     f32:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     f36:	2b c0       	rjmp	.+86     	; 0xf8e <send_prompt+0x11a>

		case REBOOTNACK:
			strcpy(prompt_str, str1);
     f38:	8e 01       	movw	r16, r28
     f3a:	0b 5f       	subi	r16, 0xFB	; 251
     f3c:	1f 4f       	sbci	r17, 0xFF	; 255
     f3e:	be 01       	movw	r22, r28
     f40:	6d 5f       	subi	r22, 0xFD	; 253
     f42:	7f 4f       	sbci	r23, 0xFF	; 255
     f44:	c8 01       	movw	r24, r16
     f46:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     f4a:	f8 01       	movw	r30, r16
     f4c:	01 90       	ld	r0, Z+
     f4e:	00 20       	and	r0, r0
     f50:	e9 f7       	brne	.-6      	; 0xf4c <send_prompt+0xd8>
     f52:	31 97       	sbiw	r30, 0x01	; 1
     f54:	af 01       	movw	r20, r30
     f56:	40 1b       	sub	r20, r16
     f58:	51 0b       	sbc	r21, r17
     f5a:	b8 01       	movw	r22, r16
     f5c:	80 e0       	ldi	r24, 0x00	; 0
     f5e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
     f62:	15 c0       	rjmp	.+42     	; 0xf8e <send_prompt+0x11a>

		default:
			strcpy(prompt_str, str1);
     f64:	8e 01       	movw	r16, r28
     f66:	0b 5f       	subi	r16, 0xFB	; 251
     f68:	1f 4f       	sbci	r17, 0xFF	; 255
     f6a:	be 01       	movw	r22, r28
     f6c:	6d 5f       	subi	r22, 0xFD	; 253
     f6e:	7f 4f       	sbci	r23, 0xFF	; 255
     f70:	c8 01       	movw	r24, r16
     f72:	0e 94 be 08 	call	0x117c	; 0x117c <strcpy>
			send_USART(0, (uint8_t*) prompt_str, strlen(prompt_str));
     f76:	f8 01       	movw	r30, r16
     f78:	01 90       	ld	r0, Z+
     f7a:	00 20       	and	r0, r0
     f7c:	e9 f7       	brne	.-6      	; 0xf78 <send_prompt+0x104>
     f7e:	31 97       	sbiw	r30, 0x01	; 1
     f80:	af 01       	movw	r20, r30
     f82:	40 1b       	sub	r20, r16
     f84:	51 0b       	sbc	r21, r17
     f86:	b8 01       	movw	r22, r16
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			break;
			
	}


}
     f8e:	6d 96       	adiw	r28, 0x1d	; 29
     f90:	cd bf       	out	0x3d, r28	; 61
     f92:	de bf       	out	0x3e, r29	; 62
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	08 95       	ret

00000f9e <set>:

uint8_t set(char *ptr)
{

	ptr++;
	switch(*ptr) {
     f9e:	fc 01       	movw	r30, r24
     fa0:	81 81       	ldd	r24, Z+1	; 0x01
     fa2:	84 37       	cpi	r24, 0x74	; 116
     fa4:	11 f4       	brne	.+4      	; 0xfaa <set+0xc>

		default:
			return(1);
			break;
	}
	return(0);
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	08 95       	ret
			ptr++;
//			put_time(ptr);
			break;

		default:
			return(1);
     faa:	81 e0       	ldi	r24, 0x01	; 1
			break;
	}
	return(0);
     fac:	08 95       	ret

00000fae <commands>:
	return(0);

}

void commands(void)
{
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	cd b7       	in	r28, 0x3d	; 61
     fb4:	de b7       	in	r29, 0x3e	; 62
     fb6:	c4 59       	subi	r28, 0x94	; 148
     fb8:	d1 09       	sbc	r29, r1
     fba:	cd bf       	out	0x3d, r28	; 61
     fbc:	de bf       	out	0x3e, r29	; 62
//	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
     fbe:	20 91 08 29 	lds	r18, 0x2908	; 0x802908 <recv0_buf+0x81>
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	f9 01       	movw	r30, r18
     fc6:	e9 57       	subi	r30, 0x79	; 121
     fc8:	f7 4d       	sbci	r31, 0xD7	; 215
     fca:	90 81       	ld	r25, Z
     fcc:	99 83       	std	Y+1, r25	; 0x01
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
     fce:	2f 5f       	subi	r18, 0xFF	; 255
     fd0:	3f 4f       	sbci	r19, 0xFF	; 255
     fd2:	2f 77       	andi	r18, 0x7F	; 127
     fd4:	30 78       	andi	r19, 0x80	; 128
     fd6:	33 23       	and	r19, r19
     fd8:	34 f4       	brge	.+12     	; 0xfe6 <commands+0x38>
     fda:	21 50       	subi	r18, 0x01	; 1
     fdc:	31 09       	sbc	r19, r1
     fde:	20 68       	ori	r18, 0x80	; 128
     fe0:	3f 6f       	ori	r19, 0xFF	; 255
     fe2:	2f 5f       	subi	r18, 0xFF	; 255
     fe4:	3f 4f       	sbci	r19, 0xFF	; 255
     fe6:	82 2f       	mov	r24, r18
     fe8:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <recv0_buf+0x81>
		if (cmdline[i] == '\0') {
     fec:	99 23       	and	r25, r25
     fee:	09 f4       	brne	.+2      	; 0xff2 <commands+0x44>
     ff0:	94 c0       	rjmp	.+296    	; 0x111a <commands+0x16c>
	char *ptr, strbuf[20];
//	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
     ff2:	21 e0       	ldi	r18, 0x01	; 1
		cmdline[i] = recv0_buf.data[recv0_buf.tail];
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	fc 01       	movw	r30, r24
     ff8:	e9 57       	subi	r30, 0x79	; 121
     ffa:	f7 4d       	sbci	r31, 0xD7	; 215
     ffc:	30 81       	ld	r19, Z
     ffe:	e1 e0       	ldi	r30, 0x01	; 1
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	ec 0f       	add	r30, r28
    1004:	fd 1f       	adc	r31, r29
    1006:	e2 0f       	add	r30, r18
    1008:	f1 1d       	adc	r31, r1
    100a:	30 83       	st	Z, r19
		recv0_buf.tail = (recv0_buf.tail + 1) % BUFSIZE;
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	8f 77       	andi	r24, 0x7F	; 127
    1010:	90 78       	andi	r25, 0x80	; 128
    1012:	99 23       	and	r25, r25
    1014:	24 f4       	brge	.+8      	; 0x101e <commands+0x70>
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	80 68       	ori	r24, 0x80	; 128
    101a:	9f 6f       	ori	r25, 0xFF	; 255
    101c:	01 96       	adiw	r24, 0x01	; 1
		if (cmdline[i] == '\0') {
    101e:	31 11       	cpse	r19, r1
    1020:	03 c0       	rjmp	.+6      	; 0x1028 <commands+0x7a>
    1022:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <recv0_buf+0x81>
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <commands+0x82>
	char *ptr, strbuf[20];
//	uint16_t memaddress;
	static uint8_t rebootnack = 1;

	// Copy the command to cmdline[]
	for (i = 0; i < BUFSIZE; i++) {
    1028:	2f 5f       	subi	r18, 0xFF	; 255
    102a:	22 f7       	brpl	.-56     	; 0xff4 <commands+0x46>
    102c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <recv0_buf+0x81>
		if (cmdline[i] == '\0') {
			break;
		}
	}

	if (rebootnack) {			// Rebooted, but not acknowledged
    1030:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    1034:	88 23       	and	r24, r24
    1036:	69 f0       	breq	.+26     	; 0x1052 <commands+0xa4>
		if (cmdline[0] == '!') {
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	81 32       	cpi	r24, 0x21	; 33
    103c:	31 f4       	brne	.+12     	; 0x104a <commands+0x9c>
			rebootnack = 0;
    103e:	10 92 00 28 	sts	0x2800, r1	; 0x802800 <__DATA_REGION_ORIGIN__>
			send_prompt(0);
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	0e 94 3a 07 	call	0xe74	; 0xe74 <send_prompt>
			return;
    1048:	6e c0       	rjmp	.+220    	; 0x1126 <commands+0x178>
		} else {
			send_prompt(REBOOTNACK);
    104a:	82 e0       	ldi	r24, 0x02	; 2
    104c:	0e 94 3a 07 	call	0xe74	; 0xe74 <send_prompt>
			return;			
    1050:	6a c0       	rjmp	.+212    	; 0x1126 <commands+0x178>
	}

	prompt_flag = 0;
	ptr = cmdline;

	switch (*ptr) {
    1052:	89 81       	ldd	r24, Y+1	; 0x01
    1054:	85 36       	cpi	r24, 0x65	; 101
    1056:	01 f1       	breq	.+64     	; 0x1098 <commands+0xea>
    1058:	68 f4       	brcc	.+26     	; 0x1074 <commands+0xc6>
    105a:	85 34       	cpi	r24, 0x45	; 69
    105c:	31 f1       	breq	.+76     	; 0x10aa <commands+0xfc>
    105e:	20 f4       	brcc	.+8      	; 0x1068 <commands+0xba>
    1060:	88 23       	and	r24, r24
    1062:	09 f4       	brne	.+2      	; 0x1066 <commands+0xb8>
    1064:	56 c0       	rjmp	.+172    	; 0x1112 <commands+0x164>
    1066:	11 c0       	rjmp	.+34     	; 0x108a <commands+0xdc>
    1068:	82 35       	cpi	r24, 0x52	; 82
    106a:	09 f4       	brne	.+2      	; 0x106e <commands+0xc0>
    106c:	49 c0       	rjmp	.+146    	; 0x1100 <commands+0x152>
    106e:	83 36       	cpi	r24, 0x63	; 99
    1070:	71 f0       	breq	.+28     	; 0x108e <commands+0xe0>
    1072:	0b c0       	rjmp	.+22     	; 0x108a <commands+0xdc>
    1074:	8f 36       	cpi	r24, 0x6F	; 111
    1076:	d1 f1       	breq	.+116    	; 0x10ec <commands+0x13e>
    1078:	18 f4       	brcc	.+6      	; 0x1080 <commands+0xd2>
    107a:	86 36       	cpi	r24, 0x66	; 102
    107c:	f9 f0       	breq	.+62     	; 0x10bc <commands+0x10e>
    107e:	05 c0       	rjmp	.+10     	; 0x108a <commands+0xdc>
    1080:	82 37       	cpi	r24, 0x72	; 114
    1082:	c9 f1       	breq	.+114    	; 0x10f6 <commands+0x148>
    1084:	83 37       	cpi	r24, 0x73	; 115
    1086:	09 f4       	brne	.+2      	; 0x108a <commands+0xdc>
    1088:	3f c0       	rjmp	.+126    	; 0x1108 <commands+0x15a>
		case '\0':
			prompt_flag = 0;
			break;
	
		default:				// send a ?
			prompt_flag = 1;
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	43 c0       	rjmp	.+134    	; 0x1114 <commands+0x166>
	ptr = cmdline;

	switch (*ptr) {

		case 'c':
			prompt_flag = close(ptr);
    108e:	ce 01       	movw	r24, r28
    1090:	01 96       	adiw	r24, 0x01	; 1
    1092:	0e 94 00 06 	call	0xc00	; 0xc00 <close>
			break;
    1096:	3e c0       	rjmp	.+124    	; 0x1114 <commands+0x166>

// IGNORE---------------------------------------------
		case 'e':
			ptr++;
			writestr_OLED(0, ptr, 1);
    1098:	41 e0       	ldi	r20, 0x01	; 1
    109a:	be 01       	movw	r22, r28
    109c:	6e 5f       	subi	r22, 0xFE	; 254
    109e:	7f 4f       	sbci	r23, 0xFF	; 255
    10a0:	80 e0       	ldi	r24, 0x00	; 0
    10a2:	0e 94 5c 05 	call	0xab8	; 0xab8 <writestr_OLED>
			prompt_flag = 0;
    10a6:	80 e0       	ldi	r24, 0x00	; 0
			break;
    10a8:	35 c0       	rjmp	.+106    	; 0x1114 <commands+0x166>

		case 'E':
			ptr++;
			writestr_OLED(0, ptr, 2);
    10aa:	42 e0       	ldi	r20, 0x02	; 2
    10ac:	be 01       	movw	r22, r28
    10ae:	6e 5f       	subi	r22, 0xFE	; 254
    10b0:	7f 4f       	sbci	r23, 0xFF	; 255
    10b2:	80 e0       	ldi	r24, 0x00	; 0
    10b4:	0e 94 5c 05 	call	0xab8	; 0xab8 <writestr_OLED>
			prompt_flag = 0;
    10b8:	80 e0       	ldi	r24, 0x00	; 0
			break;
    10ba:	2c c0       	rjmp	.+88     	; 0x1114 <commands+0x166>
		case 'f':
//			memaddress = 0;
//			framdata[0] = 0xAA;
//			write_FRAM(FRAMADDR, memaddress, framdata, 1);
//			read_FRAM(FRAMADDR, memaddress, framdata, 2);
			strcpy(strbuf, "read FRAM\r\n");
    10bc:	be 01       	movw	r22, r28
    10be:	6f 57       	subi	r22, 0x7F	; 127
    10c0:	7f 4f       	sbci	r23, 0xFF	; 255
    10c2:	8c e0       	ldi	r24, 0x0C	; 12
    10c4:	ee e6       	ldi	r30, 0x6E	; 110
    10c6:	f8 e5       	ldi	r31, 0x58	; 88
    10c8:	db 01       	movw	r26, r22
    10ca:	01 90       	ld	r0, Z+
    10cc:	0d 92       	st	X+, r0
    10ce:	8a 95       	dec	r24
    10d0:	e1 f7       	brne	.-8      	; 0x10ca <commands+0x11c>
			send_USART(0, (uint8_t*) strbuf, strlen(strbuf));
    10d2:	fb 01       	movw	r30, r22
    10d4:	01 90       	ld	r0, Z+
    10d6:	00 20       	and	r0, r0
    10d8:	e9 f7       	brne	.-6      	; 0x10d4 <commands+0x126>
    10da:	31 97       	sbiw	r30, 0x01	; 1
    10dc:	af 01       	movw	r20, r30
    10de:	46 1b       	sub	r20, r22
    10e0:	57 0b       	sbc	r21, r23
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <send_USART>
			prompt_flag = 0;
    10e8:	80 e0       	ldi	r24, 0x00	; 0
			break;
    10ea:	14 c0       	rjmp	.+40     	; 0x1114 <commands+0x166>
// STOP IGNORE----------------------------------------

		case 'o':				// open
			prompt_flag = open(ptr);
    10ec:	ce 01       	movw	r24, r28
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	0e 94 2b 06 	call	0xc56	; 0xc56 <open>
			break;
    10f4:	0f c0       	rjmp	.+30     	; 0x1114 <commands+0x166>

		case 'r':				// report
			prompt_flag = report(ptr);
    10f6:	ce 01       	movw	r24, r28
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	0e 94 56 06 	call	0xcac	; 0xcac <report>
			break;
    10fe:	0a c0       	rjmp	.+20     	; 0x1114 <commands+0x166>

		case 'R':
			reboot();
    1100:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <reboot>
			send_prompt(REBOOTNACK);
			return;			
		}
	}

	prompt_flag = 0;
    1104:	80 e0       	ldi	r24, 0x00	; 0
			prompt_flag = report(ptr);
			break;

		case 'R':
			reboot();
			break;
    1106:	06 c0       	rjmp	.+12     	; 0x1114 <commands+0x166>

		case 's':				// set
			prompt_flag = set(ptr);
    1108:	ce 01       	movw	r24, r28
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	0e 94 cf 07 	call	0xf9e	; 0xf9e <set>
			break;
    1110:	01 c0       	rjmp	.+2      	; 0x1114 <commands+0x166>
			
		case '\0':
			prompt_flag = 0;
    1112:	80 e0       	ldi	r24, 0x00	; 0
			prompt_flag = 1;
			break;

	}

	send_prompt(prompt_flag);
    1114:	0e 94 3a 07 	call	0xe74	; 0xe74 <send_prompt>
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <commands+0x178>
		if (cmdline[i] == '\0') {
			break;
		}
	}

	if (rebootnack) {			// Rebooted, but not acknowledged
    111a:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    111e:	88 23       	and	r24, r24
    1120:	09 f4       	brne	.+2      	; 0x1124 <commands+0x176>
    1122:	97 cf       	rjmp	.-210    	; 0x1052 <commands+0xa4>
    1124:	92 cf       	rjmp	.-220    	; 0x104a <commands+0x9c>

	}

	send_prompt(prompt_flag);

}
    1126:	cc 56       	subi	r28, 0x6C	; 108
    1128:	df 4f       	sbci	r29, 0xFF	; 255
    112a:	cd bf       	out	0x3d, r28	; 61
    112c:	de bf       	out	0x3e, r29	; 62
    112e:	df 91       	pop	r29
    1130:	cf 91       	pop	r28
    1132:	08 95       	ret

00001134 <main>:
	recv0_buf, recv1_buf, recv3_buf;

int main(void)
{

	init_PORTS();
    1134:	0e 94 6f 00 	call	0xde	; 0xde <init_PORTS>
	init_LED();
    1138:	0e 94 a7 00 	call	0x14e	; 0x14e <init_LED>
	init_TWI();
    113c:	0e 94 ad 00 	call	0x15a	; 0x15a <init_TWI>
	init_PNEU();
    1140:	0e 94 68 01 	call	0x2d0	; 0x2d0 <init_PNEU>
	init_USART();
    1144:	0e 94 94 01 	call	0x328	; 0x328 <init_USART>
	init_OLED(0);
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	0e 94 9b 04 	call	0x936	; 0x936 <init_OLED>
	init_EEPROM();
    114e:	0e 94 f5 05 	call	0xbea	; 0xbea <init_EEPROM>
	sei();
    1152:	78 94       	sei

	for (;;) {
		if (recv0_buf.done) {
    1154:	cb e0       	ldi	r28, 0x0B	; 11
    1156:	d9 e2       	ldi	r29, 0x29	; 41
    1158:	88 81       	ld	r24, Y
    115a:	88 23       	and	r24, r24
    115c:	e9 f3       	breq	.-6      	; 0x1158 <main+0x24>
			recv0_buf.done = NO;
    115e:	18 82       	st	Y, r1
			commands();
    1160:	0e 94 d7 07 	call	0xfae	; 0xfae <commands>
    1164:	f9 cf       	rjmp	.-14     	; 0x1158 <main+0x24>

00001166 <strcat>:
    1166:	fb 01       	movw	r30, r22
    1168:	dc 01       	movw	r26, r24
    116a:	0d 90       	ld	r0, X+
    116c:	00 20       	and	r0, r0
    116e:	e9 f7       	brne	.-6      	; 0x116a <strcat+0x4>
    1170:	11 97       	sbiw	r26, 0x01	; 1
    1172:	01 90       	ld	r0, Z+
    1174:	0d 92       	st	X+, r0
    1176:	00 20       	and	r0, r0
    1178:	e1 f7       	brne	.-8      	; 0x1172 <strcat+0xc>
    117a:	08 95       	ret

0000117c <strcpy>:
    117c:	fb 01       	movw	r30, r22
    117e:	dc 01       	movw	r26, r24
    1180:	01 90       	ld	r0, Z+
    1182:	0d 92       	st	X+, r0
    1184:	00 20       	and	r0, r0
    1186:	e1 f7       	brne	.-8      	; 0x1180 <strcpy+0x4>
    1188:	08 95       	ret

0000118a <sprintf>:
    118a:	ae e0       	ldi	r26, 0x0E	; 14
    118c:	b0 e0       	ldi	r27, 0x00	; 0
    118e:	eb ec       	ldi	r30, 0xCB	; 203
    1190:	f8 e0       	ldi	r31, 0x08	; 8
    1192:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__prologue_saves__+0x1c>
    1196:	0d 89       	ldd	r16, Y+21	; 0x15
    1198:	1e 89       	ldd	r17, Y+22	; 0x16
    119a:	86 e0       	ldi	r24, 0x06	; 6
    119c:	8c 83       	std	Y+4, r24	; 0x04
    119e:	09 83       	std	Y+1, r16	; 0x01
    11a0:	1a 83       	std	Y+2, r17	; 0x02
    11a2:	8f ef       	ldi	r24, 0xFF	; 255
    11a4:	9f e7       	ldi	r25, 0x7F	; 127
    11a6:	8d 83       	std	Y+5, r24	; 0x05
    11a8:	9e 83       	std	Y+6, r25	; 0x06
    11aa:	ae 01       	movw	r20, r28
    11ac:	47 5e       	subi	r20, 0xE7	; 231
    11ae:	5f 4f       	sbci	r21, 0xFF	; 255
    11b0:	6f 89       	ldd	r22, Y+23	; 0x17
    11b2:	78 8d       	ldd	r23, Y+24	; 0x18
    11b4:	ce 01       	movw	r24, r28
    11b6:	01 96       	adiw	r24, 0x01	; 1
    11b8:	0e 94 e7 08 	call	0x11ce	; 0x11ce <vfprintf>
    11bc:	ef 81       	ldd	r30, Y+7	; 0x07
    11be:	f8 85       	ldd	r31, Y+8	; 0x08
    11c0:	e0 0f       	add	r30, r16
    11c2:	f1 1f       	adc	r31, r17
    11c4:	10 82       	st	Z, r1
    11c6:	2e 96       	adiw	r28, 0x0e	; 14
    11c8:	e4 e0       	ldi	r30, 0x04	; 4
    11ca:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x1c>

000011ce <vfprintf>:
    11ce:	ab e0       	ldi	r26, 0x0B	; 11
    11d0:	b0 e0       	ldi	r27, 0x00	; 0
    11d2:	ed ee       	ldi	r30, 0xED	; 237
    11d4:	f8 e0       	ldi	r31, 0x08	; 8
    11d6:	0c 94 b3 0b 	jmp	0x1766	; 0x1766 <__prologue_saves__>
    11da:	6c 01       	movw	r12, r24
    11dc:	7b 01       	movw	r14, r22
    11de:	8a 01       	movw	r16, r20
    11e0:	fc 01       	movw	r30, r24
    11e2:	16 82       	std	Z+6, r1	; 0x06
    11e4:	17 82       	std	Z+7, r1	; 0x07
    11e6:	83 81       	ldd	r24, Z+3	; 0x03
    11e8:	81 ff       	sbrs	r24, 1
    11ea:	cc c1       	rjmp	.+920    	; 0x1584 <vfprintf+0x3b6>
    11ec:	ce 01       	movw	r24, r28
    11ee:	01 96       	adiw	r24, 0x01	; 1
    11f0:	3c 01       	movw	r6, r24
    11f2:	f6 01       	movw	r30, r12
    11f4:	93 81       	ldd	r25, Z+3	; 0x03
    11f6:	f7 01       	movw	r30, r14
    11f8:	93 fd       	sbrc	r25, 3
    11fa:	85 91       	lpm	r24, Z+
    11fc:	93 ff       	sbrs	r25, 3
    11fe:	81 91       	ld	r24, Z+
    1200:	7f 01       	movw	r14, r30
    1202:	88 23       	and	r24, r24
    1204:	09 f4       	brne	.+2      	; 0x1208 <vfprintf+0x3a>
    1206:	ba c1       	rjmp	.+884    	; 0x157c <vfprintf+0x3ae>
    1208:	85 32       	cpi	r24, 0x25	; 37
    120a:	39 f4       	brne	.+14     	; 0x121a <vfprintf+0x4c>
    120c:	93 fd       	sbrc	r25, 3
    120e:	85 91       	lpm	r24, Z+
    1210:	93 ff       	sbrs	r25, 3
    1212:	81 91       	ld	r24, Z+
    1214:	7f 01       	movw	r14, r30
    1216:	85 32       	cpi	r24, 0x25	; 37
    1218:	29 f4       	brne	.+10     	; 0x1224 <vfprintf+0x56>
    121a:	b6 01       	movw	r22, r12
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    1222:	e7 cf       	rjmp	.-50     	; 0x11f2 <vfprintf+0x24>
    1224:	91 2c       	mov	r9, r1
    1226:	21 2c       	mov	r2, r1
    1228:	31 2c       	mov	r3, r1
    122a:	ff e1       	ldi	r31, 0x1F	; 31
    122c:	f3 15       	cp	r31, r3
    122e:	d8 f0       	brcs	.+54     	; 0x1266 <vfprintf+0x98>
    1230:	8b 32       	cpi	r24, 0x2B	; 43
    1232:	79 f0       	breq	.+30     	; 0x1252 <vfprintf+0x84>
    1234:	38 f4       	brcc	.+14     	; 0x1244 <vfprintf+0x76>
    1236:	80 32       	cpi	r24, 0x20	; 32
    1238:	79 f0       	breq	.+30     	; 0x1258 <vfprintf+0x8a>
    123a:	83 32       	cpi	r24, 0x23	; 35
    123c:	a1 f4       	brne	.+40     	; 0x1266 <vfprintf+0x98>
    123e:	23 2d       	mov	r18, r3
    1240:	20 61       	ori	r18, 0x10	; 16
    1242:	1d c0       	rjmp	.+58     	; 0x127e <vfprintf+0xb0>
    1244:	8d 32       	cpi	r24, 0x2D	; 45
    1246:	61 f0       	breq	.+24     	; 0x1260 <vfprintf+0x92>
    1248:	80 33       	cpi	r24, 0x30	; 48
    124a:	69 f4       	brne	.+26     	; 0x1266 <vfprintf+0x98>
    124c:	23 2d       	mov	r18, r3
    124e:	21 60       	ori	r18, 0x01	; 1
    1250:	16 c0       	rjmp	.+44     	; 0x127e <vfprintf+0xb0>
    1252:	83 2d       	mov	r24, r3
    1254:	82 60       	ori	r24, 0x02	; 2
    1256:	38 2e       	mov	r3, r24
    1258:	e3 2d       	mov	r30, r3
    125a:	e4 60       	ori	r30, 0x04	; 4
    125c:	3e 2e       	mov	r3, r30
    125e:	2a c0       	rjmp	.+84     	; 0x12b4 <vfprintf+0xe6>
    1260:	f3 2d       	mov	r31, r3
    1262:	f8 60       	ori	r31, 0x08	; 8
    1264:	1d c0       	rjmp	.+58     	; 0x12a0 <vfprintf+0xd2>
    1266:	37 fc       	sbrc	r3, 7
    1268:	2d c0       	rjmp	.+90     	; 0x12c4 <vfprintf+0xf6>
    126a:	20 ed       	ldi	r18, 0xD0	; 208
    126c:	28 0f       	add	r18, r24
    126e:	2a 30       	cpi	r18, 0x0A	; 10
    1270:	40 f0       	brcs	.+16     	; 0x1282 <vfprintf+0xb4>
    1272:	8e 32       	cpi	r24, 0x2E	; 46
    1274:	b9 f4       	brne	.+46     	; 0x12a4 <vfprintf+0xd6>
    1276:	36 fc       	sbrc	r3, 6
    1278:	81 c1       	rjmp	.+770    	; 0x157c <vfprintf+0x3ae>
    127a:	23 2d       	mov	r18, r3
    127c:	20 64       	ori	r18, 0x40	; 64
    127e:	32 2e       	mov	r3, r18
    1280:	19 c0       	rjmp	.+50     	; 0x12b4 <vfprintf+0xe6>
    1282:	36 fe       	sbrs	r3, 6
    1284:	06 c0       	rjmp	.+12     	; 0x1292 <vfprintf+0xc4>
    1286:	8a e0       	ldi	r24, 0x0A	; 10
    1288:	98 9e       	mul	r9, r24
    128a:	20 0d       	add	r18, r0
    128c:	11 24       	eor	r1, r1
    128e:	92 2e       	mov	r9, r18
    1290:	11 c0       	rjmp	.+34     	; 0x12b4 <vfprintf+0xe6>
    1292:	ea e0       	ldi	r30, 0x0A	; 10
    1294:	2e 9e       	mul	r2, r30
    1296:	20 0d       	add	r18, r0
    1298:	11 24       	eor	r1, r1
    129a:	22 2e       	mov	r2, r18
    129c:	f3 2d       	mov	r31, r3
    129e:	f0 62       	ori	r31, 0x20	; 32
    12a0:	3f 2e       	mov	r3, r31
    12a2:	08 c0       	rjmp	.+16     	; 0x12b4 <vfprintf+0xe6>
    12a4:	8c 36       	cpi	r24, 0x6C	; 108
    12a6:	21 f4       	brne	.+8      	; 0x12b0 <vfprintf+0xe2>
    12a8:	83 2d       	mov	r24, r3
    12aa:	80 68       	ori	r24, 0x80	; 128
    12ac:	38 2e       	mov	r3, r24
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <vfprintf+0xe6>
    12b0:	88 36       	cpi	r24, 0x68	; 104
    12b2:	41 f4       	brne	.+16     	; 0x12c4 <vfprintf+0xf6>
    12b4:	f7 01       	movw	r30, r14
    12b6:	93 fd       	sbrc	r25, 3
    12b8:	85 91       	lpm	r24, Z+
    12ba:	93 ff       	sbrs	r25, 3
    12bc:	81 91       	ld	r24, Z+
    12be:	7f 01       	movw	r14, r30
    12c0:	81 11       	cpse	r24, r1
    12c2:	b3 cf       	rjmp	.-154    	; 0x122a <vfprintf+0x5c>
    12c4:	98 2f       	mov	r25, r24
    12c6:	9f 7d       	andi	r25, 0xDF	; 223
    12c8:	95 54       	subi	r25, 0x45	; 69
    12ca:	93 30       	cpi	r25, 0x03	; 3
    12cc:	28 f4       	brcc	.+10     	; 0x12d8 <vfprintf+0x10a>
    12ce:	0c 5f       	subi	r16, 0xFC	; 252
    12d0:	1f 4f       	sbci	r17, 0xFF	; 255
    12d2:	9f e3       	ldi	r25, 0x3F	; 63
    12d4:	99 83       	std	Y+1, r25	; 0x01
    12d6:	0d c0       	rjmp	.+26     	; 0x12f2 <vfprintf+0x124>
    12d8:	83 36       	cpi	r24, 0x63	; 99
    12da:	31 f0       	breq	.+12     	; 0x12e8 <vfprintf+0x11a>
    12dc:	83 37       	cpi	r24, 0x73	; 115
    12de:	71 f0       	breq	.+28     	; 0x12fc <vfprintf+0x12e>
    12e0:	83 35       	cpi	r24, 0x53	; 83
    12e2:	09 f0       	breq	.+2      	; 0x12e6 <vfprintf+0x118>
    12e4:	59 c0       	rjmp	.+178    	; 0x1398 <vfprintf+0x1ca>
    12e6:	21 c0       	rjmp	.+66     	; 0x132a <vfprintf+0x15c>
    12e8:	f8 01       	movw	r30, r16
    12ea:	80 81       	ld	r24, Z
    12ec:	89 83       	std	Y+1, r24	; 0x01
    12ee:	0e 5f       	subi	r16, 0xFE	; 254
    12f0:	1f 4f       	sbci	r17, 0xFF	; 255
    12f2:	88 24       	eor	r8, r8
    12f4:	83 94       	inc	r8
    12f6:	91 2c       	mov	r9, r1
    12f8:	53 01       	movw	r10, r6
    12fa:	13 c0       	rjmp	.+38     	; 0x1322 <vfprintf+0x154>
    12fc:	28 01       	movw	r4, r16
    12fe:	f2 e0       	ldi	r31, 0x02	; 2
    1300:	4f 0e       	add	r4, r31
    1302:	51 1c       	adc	r5, r1
    1304:	f8 01       	movw	r30, r16
    1306:	a0 80       	ld	r10, Z
    1308:	b1 80       	ldd	r11, Z+1	; 0x01
    130a:	36 fe       	sbrs	r3, 6
    130c:	03 c0       	rjmp	.+6      	; 0x1314 <vfprintf+0x146>
    130e:	69 2d       	mov	r22, r9
    1310:	70 e0       	ldi	r23, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <vfprintf+0x14a>
    1314:	6f ef       	ldi	r22, 0xFF	; 255
    1316:	7f ef       	ldi	r23, 0xFF	; 255
    1318:	c5 01       	movw	r24, r10
    131a:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <strnlen>
    131e:	4c 01       	movw	r8, r24
    1320:	82 01       	movw	r16, r4
    1322:	f3 2d       	mov	r31, r3
    1324:	ff 77       	andi	r31, 0x7F	; 127
    1326:	3f 2e       	mov	r3, r31
    1328:	16 c0       	rjmp	.+44     	; 0x1356 <vfprintf+0x188>
    132a:	28 01       	movw	r4, r16
    132c:	22 e0       	ldi	r18, 0x02	; 2
    132e:	42 0e       	add	r4, r18
    1330:	51 1c       	adc	r5, r1
    1332:	f8 01       	movw	r30, r16
    1334:	a0 80       	ld	r10, Z
    1336:	b1 80       	ldd	r11, Z+1	; 0x01
    1338:	36 fe       	sbrs	r3, 6
    133a:	03 c0       	rjmp	.+6      	; 0x1342 <vfprintf+0x174>
    133c:	69 2d       	mov	r22, r9
    133e:	70 e0       	ldi	r23, 0x00	; 0
    1340:	02 c0       	rjmp	.+4      	; 0x1346 <vfprintf+0x178>
    1342:	6f ef       	ldi	r22, 0xFF	; 255
    1344:	7f ef       	ldi	r23, 0xFF	; 255
    1346:	c5 01       	movw	r24, r10
    1348:	0e 94 c8 0a 	call	0x1590	; 0x1590 <strnlen_P>
    134c:	4c 01       	movw	r8, r24
    134e:	f3 2d       	mov	r31, r3
    1350:	f0 68       	ori	r31, 0x80	; 128
    1352:	3f 2e       	mov	r3, r31
    1354:	82 01       	movw	r16, r4
    1356:	33 fc       	sbrc	r3, 3
    1358:	1b c0       	rjmp	.+54     	; 0x1390 <vfprintf+0x1c2>
    135a:	82 2d       	mov	r24, r2
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	88 16       	cp	r8, r24
    1360:	99 06       	cpc	r9, r25
    1362:	b0 f4       	brcc	.+44     	; 0x1390 <vfprintf+0x1c2>
    1364:	b6 01       	movw	r22, r12
    1366:	80 e2       	ldi	r24, 0x20	; 32
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    136e:	2a 94       	dec	r2
    1370:	f4 cf       	rjmp	.-24     	; 0x135a <vfprintf+0x18c>
    1372:	f5 01       	movw	r30, r10
    1374:	37 fc       	sbrc	r3, 7
    1376:	85 91       	lpm	r24, Z+
    1378:	37 fe       	sbrs	r3, 7
    137a:	81 91       	ld	r24, Z+
    137c:	5f 01       	movw	r10, r30
    137e:	b6 01       	movw	r22, r12
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    1386:	21 10       	cpse	r2, r1
    1388:	2a 94       	dec	r2
    138a:	21 e0       	ldi	r18, 0x01	; 1
    138c:	82 1a       	sub	r8, r18
    138e:	91 08       	sbc	r9, r1
    1390:	81 14       	cp	r8, r1
    1392:	91 04       	cpc	r9, r1
    1394:	71 f7       	brne	.-36     	; 0x1372 <vfprintf+0x1a4>
    1396:	e8 c0       	rjmp	.+464    	; 0x1568 <vfprintf+0x39a>
    1398:	84 36       	cpi	r24, 0x64	; 100
    139a:	11 f0       	breq	.+4      	; 0x13a0 <vfprintf+0x1d2>
    139c:	89 36       	cpi	r24, 0x69	; 105
    139e:	41 f5       	brne	.+80     	; 0x13f0 <vfprintf+0x222>
    13a0:	f8 01       	movw	r30, r16
    13a2:	37 fe       	sbrs	r3, 7
    13a4:	07 c0       	rjmp	.+14     	; 0x13b4 <vfprintf+0x1e6>
    13a6:	60 81       	ld	r22, Z
    13a8:	71 81       	ldd	r23, Z+1	; 0x01
    13aa:	82 81       	ldd	r24, Z+2	; 0x02
    13ac:	93 81       	ldd	r25, Z+3	; 0x03
    13ae:	0c 5f       	subi	r16, 0xFC	; 252
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	08 c0       	rjmp	.+16     	; 0x13c4 <vfprintf+0x1f6>
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	07 2e       	mov	r0, r23
    13ba:	00 0c       	add	r0, r0
    13bc:	88 0b       	sbc	r24, r24
    13be:	99 0b       	sbc	r25, r25
    13c0:	0e 5f       	subi	r16, 0xFE	; 254
    13c2:	1f 4f       	sbci	r17, 0xFF	; 255
    13c4:	f3 2d       	mov	r31, r3
    13c6:	ff 76       	andi	r31, 0x6F	; 111
    13c8:	3f 2e       	mov	r3, r31
    13ca:	97 ff       	sbrs	r25, 7
    13cc:	09 c0       	rjmp	.+18     	; 0x13e0 <vfprintf+0x212>
    13ce:	90 95       	com	r25
    13d0:	80 95       	com	r24
    13d2:	70 95       	com	r23
    13d4:	61 95       	neg	r22
    13d6:	7f 4f       	sbci	r23, 0xFF	; 255
    13d8:	8f 4f       	sbci	r24, 0xFF	; 255
    13da:	9f 4f       	sbci	r25, 0xFF	; 255
    13dc:	f0 68       	ori	r31, 0x80	; 128
    13de:	3f 2e       	mov	r3, r31
    13e0:	2a e0       	ldi	r18, 0x0A	; 10
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	a3 01       	movw	r20, r6
    13e6:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__ultoa_invert>
    13ea:	88 2e       	mov	r8, r24
    13ec:	86 18       	sub	r8, r6
    13ee:	45 c0       	rjmp	.+138    	; 0x147a <vfprintf+0x2ac>
    13f0:	85 37       	cpi	r24, 0x75	; 117
    13f2:	31 f4       	brne	.+12     	; 0x1400 <vfprintf+0x232>
    13f4:	23 2d       	mov	r18, r3
    13f6:	2f 7e       	andi	r18, 0xEF	; 239
    13f8:	b2 2e       	mov	r11, r18
    13fa:	2a e0       	ldi	r18, 0x0A	; 10
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	25 c0       	rjmp	.+74     	; 0x144a <vfprintf+0x27c>
    1400:	93 2d       	mov	r25, r3
    1402:	99 7f       	andi	r25, 0xF9	; 249
    1404:	b9 2e       	mov	r11, r25
    1406:	8f 36       	cpi	r24, 0x6F	; 111
    1408:	c1 f0       	breq	.+48     	; 0x143a <vfprintf+0x26c>
    140a:	18 f4       	brcc	.+6      	; 0x1412 <vfprintf+0x244>
    140c:	88 35       	cpi	r24, 0x58	; 88
    140e:	79 f0       	breq	.+30     	; 0x142e <vfprintf+0x260>
    1410:	b5 c0       	rjmp	.+362    	; 0x157c <vfprintf+0x3ae>
    1412:	80 37       	cpi	r24, 0x70	; 112
    1414:	19 f0       	breq	.+6      	; 0x141c <vfprintf+0x24e>
    1416:	88 37       	cpi	r24, 0x78	; 120
    1418:	21 f0       	breq	.+8      	; 0x1422 <vfprintf+0x254>
    141a:	b0 c0       	rjmp	.+352    	; 0x157c <vfprintf+0x3ae>
    141c:	e9 2f       	mov	r30, r25
    141e:	e0 61       	ori	r30, 0x10	; 16
    1420:	be 2e       	mov	r11, r30
    1422:	b4 fe       	sbrs	r11, 4
    1424:	0d c0       	rjmp	.+26     	; 0x1440 <vfprintf+0x272>
    1426:	fb 2d       	mov	r31, r11
    1428:	f4 60       	ori	r31, 0x04	; 4
    142a:	bf 2e       	mov	r11, r31
    142c:	09 c0       	rjmp	.+18     	; 0x1440 <vfprintf+0x272>
    142e:	34 fe       	sbrs	r3, 4
    1430:	0a c0       	rjmp	.+20     	; 0x1446 <vfprintf+0x278>
    1432:	29 2f       	mov	r18, r25
    1434:	26 60       	ori	r18, 0x06	; 6
    1436:	b2 2e       	mov	r11, r18
    1438:	06 c0       	rjmp	.+12     	; 0x1446 <vfprintf+0x278>
    143a:	28 e0       	ldi	r18, 0x08	; 8
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	05 c0       	rjmp	.+10     	; 0x144a <vfprintf+0x27c>
    1440:	20 e1       	ldi	r18, 0x10	; 16
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	02 c0       	rjmp	.+4      	; 0x144a <vfprintf+0x27c>
    1446:	20 e1       	ldi	r18, 0x10	; 16
    1448:	32 e0       	ldi	r19, 0x02	; 2
    144a:	f8 01       	movw	r30, r16
    144c:	b7 fe       	sbrs	r11, 7
    144e:	07 c0       	rjmp	.+14     	; 0x145e <vfprintf+0x290>
    1450:	60 81       	ld	r22, Z
    1452:	71 81       	ldd	r23, Z+1	; 0x01
    1454:	82 81       	ldd	r24, Z+2	; 0x02
    1456:	93 81       	ldd	r25, Z+3	; 0x03
    1458:	0c 5f       	subi	r16, 0xFC	; 252
    145a:	1f 4f       	sbci	r17, 0xFF	; 255
    145c:	06 c0       	rjmp	.+12     	; 0x146a <vfprintf+0x29c>
    145e:	60 81       	ld	r22, Z
    1460:	71 81       	ldd	r23, Z+1	; 0x01
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0e 5f       	subi	r16, 0xFE	; 254
    1468:	1f 4f       	sbci	r17, 0xFF	; 255
    146a:	a3 01       	movw	r20, r6
    146c:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__ultoa_invert>
    1470:	88 2e       	mov	r8, r24
    1472:	86 18       	sub	r8, r6
    1474:	fb 2d       	mov	r31, r11
    1476:	ff 77       	andi	r31, 0x7F	; 127
    1478:	3f 2e       	mov	r3, r31
    147a:	36 fe       	sbrs	r3, 6
    147c:	0d c0       	rjmp	.+26     	; 0x1498 <vfprintf+0x2ca>
    147e:	23 2d       	mov	r18, r3
    1480:	2e 7f       	andi	r18, 0xFE	; 254
    1482:	a2 2e       	mov	r10, r18
    1484:	89 14       	cp	r8, r9
    1486:	58 f4       	brcc	.+22     	; 0x149e <vfprintf+0x2d0>
    1488:	34 fe       	sbrs	r3, 4
    148a:	0b c0       	rjmp	.+22     	; 0x14a2 <vfprintf+0x2d4>
    148c:	32 fc       	sbrc	r3, 2
    148e:	09 c0       	rjmp	.+18     	; 0x14a2 <vfprintf+0x2d4>
    1490:	83 2d       	mov	r24, r3
    1492:	8e 7e       	andi	r24, 0xEE	; 238
    1494:	a8 2e       	mov	r10, r24
    1496:	05 c0       	rjmp	.+10     	; 0x14a2 <vfprintf+0x2d4>
    1498:	b8 2c       	mov	r11, r8
    149a:	a3 2c       	mov	r10, r3
    149c:	03 c0       	rjmp	.+6      	; 0x14a4 <vfprintf+0x2d6>
    149e:	b8 2c       	mov	r11, r8
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <vfprintf+0x2d6>
    14a2:	b9 2c       	mov	r11, r9
    14a4:	a4 fe       	sbrs	r10, 4
    14a6:	0f c0       	rjmp	.+30     	; 0x14c6 <vfprintf+0x2f8>
    14a8:	fe 01       	movw	r30, r28
    14aa:	e8 0d       	add	r30, r8
    14ac:	f1 1d       	adc	r31, r1
    14ae:	80 81       	ld	r24, Z
    14b0:	80 33       	cpi	r24, 0x30	; 48
    14b2:	21 f4       	brne	.+8      	; 0x14bc <vfprintf+0x2ee>
    14b4:	9a 2d       	mov	r25, r10
    14b6:	99 7e       	andi	r25, 0xE9	; 233
    14b8:	a9 2e       	mov	r10, r25
    14ba:	09 c0       	rjmp	.+18     	; 0x14ce <vfprintf+0x300>
    14bc:	a2 fe       	sbrs	r10, 2
    14be:	06 c0       	rjmp	.+12     	; 0x14cc <vfprintf+0x2fe>
    14c0:	b3 94       	inc	r11
    14c2:	b3 94       	inc	r11
    14c4:	04 c0       	rjmp	.+8      	; 0x14ce <vfprintf+0x300>
    14c6:	8a 2d       	mov	r24, r10
    14c8:	86 78       	andi	r24, 0x86	; 134
    14ca:	09 f0       	breq	.+2      	; 0x14ce <vfprintf+0x300>
    14cc:	b3 94       	inc	r11
    14ce:	a3 fc       	sbrc	r10, 3
    14d0:	11 c0       	rjmp	.+34     	; 0x14f4 <vfprintf+0x326>
    14d2:	a0 fe       	sbrs	r10, 0
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <vfprintf+0x314>
    14d6:	b2 14       	cp	r11, r2
    14d8:	88 f4       	brcc	.+34     	; 0x14fc <vfprintf+0x32e>
    14da:	28 0c       	add	r2, r8
    14dc:	92 2c       	mov	r9, r2
    14de:	9b 18       	sub	r9, r11
    14e0:	0e c0       	rjmp	.+28     	; 0x14fe <vfprintf+0x330>
    14e2:	b2 14       	cp	r11, r2
    14e4:	60 f4       	brcc	.+24     	; 0x14fe <vfprintf+0x330>
    14e6:	b6 01       	movw	r22, r12
    14e8:	80 e2       	ldi	r24, 0x20	; 32
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    14f0:	b3 94       	inc	r11
    14f2:	f7 cf       	rjmp	.-18     	; 0x14e2 <vfprintf+0x314>
    14f4:	b2 14       	cp	r11, r2
    14f6:	18 f4       	brcc	.+6      	; 0x14fe <vfprintf+0x330>
    14f8:	2b 18       	sub	r2, r11
    14fa:	02 c0       	rjmp	.+4      	; 0x1500 <vfprintf+0x332>
    14fc:	98 2c       	mov	r9, r8
    14fe:	21 2c       	mov	r2, r1
    1500:	a4 fe       	sbrs	r10, 4
    1502:	10 c0       	rjmp	.+32     	; 0x1524 <vfprintf+0x356>
    1504:	b6 01       	movw	r22, r12
    1506:	80 e3       	ldi	r24, 0x30	; 48
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    150e:	a2 fe       	sbrs	r10, 2
    1510:	17 c0       	rjmp	.+46     	; 0x1540 <vfprintf+0x372>
    1512:	a1 fc       	sbrc	r10, 1
    1514:	03 c0       	rjmp	.+6      	; 0x151c <vfprintf+0x34e>
    1516:	88 e7       	ldi	r24, 0x78	; 120
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <vfprintf+0x352>
    151c:	88 e5       	ldi	r24, 0x58	; 88
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	b6 01       	movw	r22, r12
    1522:	0c c0       	rjmp	.+24     	; 0x153c <vfprintf+0x36e>
    1524:	8a 2d       	mov	r24, r10
    1526:	86 78       	andi	r24, 0x86	; 134
    1528:	59 f0       	breq	.+22     	; 0x1540 <vfprintf+0x372>
    152a:	a1 fe       	sbrs	r10, 1
    152c:	02 c0       	rjmp	.+4      	; 0x1532 <vfprintf+0x364>
    152e:	8b e2       	ldi	r24, 0x2B	; 43
    1530:	01 c0       	rjmp	.+2      	; 0x1534 <vfprintf+0x366>
    1532:	80 e2       	ldi	r24, 0x20	; 32
    1534:	a7 fc       	sbrc	r10, 7
    1536:	8d e2       	ldi	r24, 0x2D	; 45
    1538:	b6 01       	movw	r22, r12
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    1540:	89 14       	cp	r8, r9
    1542:	38 f4       	brcc	.+14     	; 0x1552 <vfprintf+0x384>
    1544:	b6 01       	movw	r22, r12
    1546:	80 e3       	ldi	r24, 0x30	; 48
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    154e:	9a 94       	dec	r9
    1550:	f7 cf       	rjmp	.-18     	; 0x1540 <vfprintf+0x372>
    1552:	8a 94       	dec	r8
    1554:	f3 01       	movw	r30, r6
    1556:	e8 0d       	add	r30, r8
    1558:	f1 1d       	adc	r31, r1
    155a:	80 81       	ld	r24, Z
    155c:	b6 01       	movw	r22, r12
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    1564:	81 10       	cpse	r8, r1
    1566:	f5 cf       	rjmp	.-22     	; 0x1552 <vfprintf+0x384>
    1568:	22 20       	and	r2, r2
    156a:	09 f4       	brne	.+2      	; 0x156e <vfprintf+0x3a0>
    156c:	42 ce       	rjmp	.-892    	; 0x11f2 <vfprintf+0x24>
    156e:	b6 01       	movw	r22, r12
    1570:	80 e2       	ldi	r24, 0x20	; 32
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	0e 94 de 0a 	call	0x15bc	; 0x15bc <fputc>
    1578:	2a 94       	dec	r2
    157a:	f6 cf       	rjmp	.-20     	; 0x1568 <vfprintf+0x39a>
    157c:	f6 01       	movw	r30, r12
    157e:	86 81       	ldd	r24, Z+6	; 0x06
    1580:	97 81       	ldd	r25, Z+7	; 0x07
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <vfprintf+0x3ba>
    1584:	8f ef       	ldi	r24, 0xFF	; 255
    1586:	9f ef       	ldi	r25, 0xFF	; 255
    1588:	2b 96       	adiw	r28, 0x0b	; 11
    158a:	e2 e1       	ldi	r30, 0x12	; 18
    158c:	0c 94 cc 0b 	jmp	0x1798	; 0x1798 <__epilogue_restores__>

00001590 <strnlen_P>:
    1590:	fc 01       	movw	r30, r24
    1592:	05 90       	lpm	r0, Z+
    1594:	61 50       	subi	r22, 0x01	; 1
    1596:	70 40       	sbci	r23, 0x00	; 0
    1598:	01 10       	cpse	r0, r1
    159a:	d8 f7       	brcc	.-10     	; 0x1592 <strnlen_P+0x2>
    159c:	80 95       	com	r24
    159e:	90 95       	com	r25
    15a0:	8e 0f       	add	r24, r30
    15a2:	9f 1f       	adc	r25, r31
    15a4:	08 95       	ret

000015a6 <strnlen>:
    15a6:	fc 01       	movw	r30, r24
    15a8:	61 50       	subi	r22, 0x01	; 1
    15aa:	70 40       	sbci	r23, 0x00	; 0
    15ac:	01 90       	ld	r0, Z+
    15ae:	01 10       	cpse	r0, r1
    15b0:	d8 f7       	brcc	.-10     	; 0x15a8 <strnlen+0x2>
    15b2:	80 95       	com	r24
    15b4:	90 95       	com	r25
    15b6:	8e 0f       	add	r24, r30
    15b8:	9f 1f       	adc	r25, r31
    15ba:	08 95       	ret

000015bc <fputc>:
    15bc:	0f 93       	push	r16
    15be:	1f 93       	push	r17
    15c0:	cf 93       	push	r28
    15c2:	df 93       	push	r29
    15c4:	fb 01       	movw	r30, r22
    15c6:	23 81       	ldd	r18, Z+3	; 0x03
    15c8:	21 fd       	sbrc	r18, 1
    15ca:	03 c0       	rjmp	.+6      	; 0x15d2 <fputc+0x16>
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	9f ef       	ldi	r25, 0xFF	; 255
    15d0:	2c c0       	rjmp	.+88     	; 0x162a <fputc+0x6e>
    15d2:	22 ff       	sbrs	r18, 2
    15d4:	16 c0       	rjmp	.+44     	; 0x1602 <fputc+0x46>
    15d6:	46 81       	ldd	r20, Z+6	; 0x06
    15d8:	57 81       	ldd	r21, Z+7	; 0x07
    15da:	24 81       	ldd	r18, Z+4	; 0x04
    15dc:	35 81       	ldd	r19, Z+5	; 0x05
    15de:	42 17       	cp	r20, r18
    15e0:	53 07       	cpc	r21, r19
    15e2:	44 f4       	brge	.+16     	; 0x15f4 <fputc+0x38>
    15e4:	a0 81       	ld	r26, Z
    15e6:	b1 81       	ldd	r27, Z+1	; 0x01
    15e8:	9d 01       	movw	r18, r26
    15ea:	2f 5f       	subi	r18, 0xFF	; 255
    15ec:	3f 4f       	sbci	r19, 0xFF	; 255
    15ee:	20 83       	st	Z, r18
    15f0:	31 83       	std	Z+1, r19	; 0x01
    15f2:	8c 93       	st	X, r24
    15f4:	26 81       	ldd	r18, Z+6	; 0x06
    15f6:	37 81       	ldd	r19, Z+7	; 0x07
    15f8:	2f 5f       	subi	r18, 0xFF	; 255
    15fa:	3f 4f       	sbci	r19, 0xFF	; 255
    15fc:	26 83       	std	Z+6, r18	; 0x06
    15fe:	37 83       	std	Z+7, r19	; 0x07
    1600:	14 c0       	rjmp	.+40     	; 0x162a <fputc+0x6e>
    1602:	8b 01       	movw	r16, r22
    1604:	ec 01       	movw	r28, r24
    1606:	fb 01       	movw	r30, r22
    1608:	00 84       	ldd	r0, Z+8	; 0x08
    160a:	f1 85       	ldd	r31, Z+9	; 0x09
    160c:	e0 2d       	mov	r30, r0
    160e:	09 95       	icall
    1610:	89 2b       	or	r24, r25
    1612:	e1 f6       	brne	.-72     	; 0x15cc <fputc+0x10>
    1614:	d8 01       	movw	r26, r16
    1616:	16 96       	adiw	r26, 0x06	; 6
    1618:	8d 91       	ld	r24, X+
    161a:	9c 91       	ld	r25, X
    161c:	17 97       	sbiw	r26, 0x07	; 7
    161e:	01 96       	adiw	r24, 0x01	; 1
    1620:	16 96       	adiw	r26, 0x06	; 6
    1622:	8d 93       	st	X+, r24
    1624:	9c 93       	st	X, r25
    1626:	17 97       	sbiw	r26, 0x07	; 7
    1628:	ce 01       	movw	r24, r28
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	1f 91       	pop	r17
    1630:	0f 91       	pop	r16
    1632:	08 95       	ret

00001634 <__ultoa_invert>:
    1634:	fa 01       	movw	r30, r20
    1636:	aa 27       	eor	r26, r26
    1638:	28 30       	cpi	r18, 0x08	; 8
    163a:	51 f1       	breq	.+84     	; 0x1690 <__ultoa_invert+0x5c>
    163c:	20 31       	cpi	r18, 0x10	; 16
    163e:	81 f1       	breq	.+96     	; 0x16a0 <__ultoa_invert+0x6c>
    1640:	e8 94       	clt
    1642:	6f 93       	push	r22
    1644:	6e 7f       	andi	r22, 0xFE	; 254
    1646:	6e 5f       	subi	r22, 0xFE	; 254
    1648:	7f 4f       	sbci	r23, 0xFF	; 255
    164a:	8f 4f       	sbci	r24, 0xFF	; 255
    164c:	9f 4f       	sbci	r25, 0xFF	; 255
    164e:	af 4f       	sbci	r26, 0xFF	; 255
    1650:	b1 e0       	ldi	r27, 0x01	; 1
    1652:	3e d0       	rcall	.+124    	; 0x16d0 <__ultoa_invert+0x9c>
    1654:	b4 e0       	ldi	r27, 0x04	; 4
    1656:	3c d0       	rcall	.+120    	; 0x16d0 <__ultoa_invert+0x9c>
    1658:	67 0f       	add	r22, r23
    165a:	78 1f       	adc	r23, r24
    165c:	89 1f       	adc	r24, r25
    165e:	9a 1f       	adc	r25, r26
    1660:	a1 1d       	adc	r26, r1
    1662:	68 0f       	add	r22, r24
    1664:	79 1f       	adc	r23, r25
    1666:	8a 1f       	adc	r24, r26
    1668:	91 1d       	adc	r25, r1
    166a:	a1 1d       	adc	r26, r1
    166c:	6a 0f       	add	r22, r26
    166e:	71 1d       	adc	r23, r1
    1670:	81 1d       	adc	r24, r1
    1672:	91 1d       	adc	r25, r1
    1674:	a1 1d       	adc	r26, r1
    1676:	20 d0       	rcall	.+64     	; 0x16b8 <__ultoa_invert+0x84>
    1678:	09 f4       	brne	.+2      	; 0x167c <__ultoa_invert+0x48>
    167a:	68 94       	set
    167c:	3f 91       	pop	r19
    167e:	2a e0       	ldi	r18, 0x0A	; 10
    1680:	26 9f       	mul	r18, r22
    1682:	11 24       	eor	r1, r1
    1684:	30 19       	sub	r19, r0
    1686:	30 5d       	subi	r19, 0xD0	; 208
    1688:	31 93       	st	Z+, r19
    168a:	de f6       	brtc	.-74     	; 0x1642 <__ultoa_invert+0xe>
    168c:	cf 01       	movw	r24, r30
    168e:	08 95       	ret
    1690:	46 2f       	mov	r20, r22
    1692:	47 70       	andi	r20, 0x07	; 7
    1694:	40 5d       	subi	r20, 0xD0	; 208
    1696:	41 93       	st	Z+, r20
    1698:	b3 e0       	ldi	r27, 0x03	; 3
    169a:	0f d0       	rcall	.+30     	; 0x16ba <__ultoa_invert+0x86>
    169c:	c9 f7       	brne	.-14     	; 0x1690 <__ultoa_invert+0x5c>
    169e:	f6 cf       	rjmp	.-20     	; 0x168c <__ultoa_invert+0x58>
    16a0:	46 2f       	mov	r20, r22
    16a2:	4f 70       	andi	r20, 0x0F	; 15
    16a4:	40 5d       	subi	r20, 0xD0	; 208
    16a6:	4a 33       	cpi	r20, 0x3A	; 58
    16a8:	18 f0       	brcs	.+6      	; 0x16b0 <__ultoa_invert+0x7c>
    16aa:	49 5d       	subi	r20, 0xD9	; 217
    16ac:	31 fd       	sbrc	r19, 1
    16ae:	40 52       	subi	r20, 0x20	; 32
    16b0:	41 93       	st	Z+, r20
    16b2:	02 d0       	rcall	.+4      	; 0x16b8 <__ultoa_invert+0x84>
    16b4:	a9 f7       	brne	.-22     	; 0x16a0 <__ultoa_invert+0x6c>
    16b6:	ea cf       	rjmp	.-44     	; 0x168c <__ultoa_invert+0x58>
    16b8:	b4 e0       	ldi	r27, 0x04	; 4
    16ba:	a6 95       	lsr	r26
    16bc:	97 95       	ror	r25
    16be:	87 95       	ror	r24
    16c0:	77 95       	ror	r23
    16c2:	67 95       	ror	r22
    16c4:	ba 95       	dec	r27
    16c6:	c9 f7       	brne	.-14     	; 0x16ba <__ultoa_invert+0x86>
    16c8:	00 97       	sbiw	r24, 0x00	; 0
    16ca:	61 05       	cpc	r22, r1
    16cc:	71 05       	cpc	r23, r1
    16ce:	08 95       	ret
    16d0:	9b 01       	movw	r18, r22
    16d2:	ac 01       	movw	r20, r24
    16d4:	0a 2e       	mov	r0, r26
    16d6:	06 94       	lsr	r0
    16d8:	57 95       	ror	r21
    16da:	47 95       	ror	r20
    16dc:	37 95       	ror	r19
    16de:	27 95       	ror	r18
    16e0:	ba 95       	dec	r27
    16e2:	c9 f7       	brne	.-14     	; 0x16d6 <__ultoa_invert+0xa2>
    16e4:	62 0f       	add	r22, r18
    16e6:	73 1f       	adc	r23, r19
    16e8:	84 1f       	adc	r24, r20
    16ea:	95 1f       	adc	r25, r21
    16ec:	a0 1d       	adc	r26, r0
    16ee:	08 95       	ret

000016f0 <eeprom_read_block>:
    16f0:	60 50       	subi	r22, 0x00	; 0
    16f2:	7c 4e       	sbci	r23, 0xEC	; 236
    16f4:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <memcpy>

000016f8 <eeprom_update_block>:
    16f8:	dc 01       	movw	r26, r24
    16fa:	a4 0f       	add	r26, r20
    16fc:	b5 1f       	adc	r27, r21
    16fe:	41 50       	subi	r20, 0x01	; 1
    1700:	50 40       	sbci	r21, 0x00	; 0
    1702:	48 f0       	brcs	.+18     	; 0x1716 <eeprom_update_block+0x1e>
    1704:	cb 01       	movw	r24, r22
    1706:	84 0f       	add	r24, r20
    1708:	95 1f       	adc	r25, r21
    170a:	2e 91       	ld	r18, -X
    170c:	0e 94 8d 0b 	call	0x171a	; 0x171a <eeprom_update_r18>
    1710:	41 50       	subi	r20, 0x01	; 1
    1712:	50 40       	sbci	r21, 0x00	; 0
    1714:	d0 f7       	brcc	.-12     	; 0x170a <eeprom_update_block+0x12>
    1716:	08 95       	ret

00001718 <eeprom_update_byte>:
    1718:	26 2f       	mov	r18, r22

0000171a <eeprom_update_r18>:
    171a:	0e 94 af 0b 	call	0x175e	; 0x175e <eeprom_mapen>
    171e:	00 80       	ld	r0, Z
    1720:	02 16       	cp	r0, r18
    1722:	19 f0       	breq	.+6      	; 0x172a <eeprom_update_r18+0x10>
    1724:	0e 94 98 0b 	call	0x1730	; 0x1730 <eeprom_write_r18>
    1728:	01 97       	sbiw	r24, 0x01	; 1
    172a:	01 97       	sbiw	r24, 0x01	; 1
    172c:	08 95       	ret

0000172e <eeprom_write_byte>:
    172e:	26 2f       	mov	r18, r22

00001730 <eeprom_write_r18>:
    1730:	af 93       	push	r26
    1732:	bf 93       	push	r27
    1734:	e0 e0       	ldi	r30, 0x00	; 0
    1736:	f0 e1       	ldi	r31, 0x10	; 16
    1738:	32 81       	ldd	r19, Z+2	; 0x02
    173a:	31 fd       	sbrc	r19, 1
    173c:	fd cf       	rjmp	.-6      	; 0x1738 <eeprom_write_r18+0x8>
    173e:	dc 01       	movw	r26, r24
    1740:	a0 50       	subi	r26, 0x00	; 0
    1742:	bc 4e       	sbci	r27, 0xEC	; 236
    1744:	2c 93       	st	X, r18
    1746:	2d e9       	ldi	r18, 0x9D	; 157
    1748:	24 bf       	out	0x34, r18	; 52
    174a:	23 e0       	ldi	r18, 0x03	; 3
    174c:	20 83       	st	Z, r18
    174e:	01 96       	adiw	r24, 0x01	; 1
    1750:	bf 91       	pop	r27
    1752:	af 91       	pop	r26
    1754:	08 95       	ret

00001756 <eeprom_read_byte>:
    1756:	03 d0       	rcall	.+6      	; 0x175e <eeprom_mapen>
    1758:	80 81       	ld	r24, Z
    175a:	99 27       	eor	r25, r25
    175c:	08 95       	ret

0000175e <eeprom_mapen>:
    175e:	fc 01       	movw	r30, r24
    1760:	e0 50       	subi	r30, 0x00	; 0
    1762:	fc 4e       	sbci	r31, 0xEC	; 236
    1764:	08 95       	ret

00001766 <__prologue_saves__>:
    1766:	2f 92       	push	r2
    1768:	3f 92       	push	r3
    176a:	4f 92       	push	r4
    176c:	5f 92       	push	r5
    176e:	6f 92       	push	r6
    1770:	7f 92       	push	r7
    1772:	8f 92       	push	r8
    1774:	9f 92       	push	r9
    1776:	af 92       	push	r10
    1778:	bf 92       	push	r11
    177a:	cf 92       	push	r12
    177c:	df 92       	push	r13
    177e:	ef 92       	push	r14
    1780:	ff 92       	push	r15
    1782:	0f 93       	push	r16
    1784:	1f 93       	push	r17
    1786:	cf 93       	push	r28
    1788:	df 93       	push	r29
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	ca 1b       	sub	r28, r26
    1790:	db 0b       	sbc	r29, r27
    1792:	cd bf       	out	0x3d, r28	; 61
    1794:	de bf       	out	0x3e, r29	; 62
    1796:	09 94       	ijmp

00001798 <__epilogue_restores__>:
    1798:	2a 88       	ldd	r2, Y+18	; 0x12
    179a:	39 88       	ldd	r3, Y+17	; 0x11
    179c:	48 88       	ldd	r4, Y+16	; 0x10
    179e:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    17a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    17a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    17a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    17aa:	b9 84       	ldd	r11, Y+9	; 0x09
    17ac:	c8 84       	ldd	r12, Y+8	; 0x08
    17ae:	df 80       	ldd	r13, Y+7	; 0x07
    17b0:	ee 80       	ldd	r14, Y+6	; 0x06
    17b2:	fd 80       	ldd	r15, Y+5	; 0x05
    17b4:	0c 81       	ldd	r16, Y+4	; 0x04
    17b6:	1b 81       	ldd	r17, Y+3	; 0x03
    17b8:	aa 81       	ldd	r26, Y+2	; 0x02
    17ba:	b9 81       	ldd	r27, Y+1	; 0x01
    17bc:	ce 0f       	add	r28, r30
    17be:	d1 1d       	adc	r29, r1
    17c0:	cd bf       	out	0x3d, r28	; 61
    17c2:	de bf       	out	0x3e, r29	; 62
    17c4:	ed 01       	movw	r28, r26
    17c6:	08 95       	ret

000017c8 <memcpy>:
    17c8:	fb 01       	movw	r30, r22
    17ca:	dc 01       	movw	r26, r24
    17cc:	02 c0       	rjmp	.+4      	; 0x17d2 <memcpy+0xa>
    17ce:	01 90       	ld	r0, Z+
    17d0:	0d 92       	st	X+, r0
    17d2:	41 50       	subi	r20, 0x01	; 1
    17d4:	50 40       	sbci	r21, 0x00	; 0
    17d6:	d8 f7       	brcc	.-10     	; 0x17ce <memcpy+0x6>
    17d8:	08 95       	ret

000017da <_exit>:
    17da:	f8 94       	cli

000017dc <__stop_program>:
    17dc:	ff cf       	rjmp	.-2      	; 0x17dc <__stop_program>
